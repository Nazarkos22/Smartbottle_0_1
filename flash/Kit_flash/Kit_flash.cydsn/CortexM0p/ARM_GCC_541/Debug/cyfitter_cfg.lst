ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyfitter_cfg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CyClockStartupError,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CyClockStartupError, %function
  24              	CyClockStartupError:
  25              	.LFB187:
  26              		.file 1 "Generated_Source\\PSoC6\\cyfitter_cfg.c"
   1:Generated_Source\PSoC6/cyfitter_cfg.c **** 
   2:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
   3:Generated_Source\PSoC6/cyfitter_cfg.c **** * File Name: cyfitter_cfg.c
   4:Generated_Source\PSoC6/cyfitter_cfg.c **** * 
   5:Generated_Source\PSoC6/cyfitter_cfg.c **** * PSoC Creator  4.3 Early Access
   6:Generated_Source\PSoC6/cyfitter_cfg.c **** *
   7:Generated_Source\PSoC6/cyfitter_cfg.c **** * Description:
   8:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file contains device initialization code.
   9:Generated_Source\PSoC6/cyfitter_cfg.c **** * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file is automatically generated by PSoC Creator.
  11:Generated_Source\PSoC6/cyfitter_cfg.c **** *
  12:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
  13:Generated_Source\PSoC6/cyfitter_cfg.c **** * Copyright (c) 2007-2019 Cypress Semiconductor.  All rights reserved.
  14:Generated_Source\PSoC6/cyfitter_cfg.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC6/cyfitter_cfg.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC6/cyfitter_cfg.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************/
  18:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  19:Generated_Source\PSoC6/cyfitter_cfg.c **** #include <string.h>
  20:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cydevice_trm.h"
  21:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter.h"
  22:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "gpio/cy_gpio.h"
  23:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syslib/cy_syslib.h"
  24:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter_cfg.h"
  25:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "sysclk/cy_sysclk.h"
  27:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "systick/cy_systick.h"
  28:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  29:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CY_NEED_CYCLOCKSTARTUPERROR 1
  30:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syspm/cy_syspm.h"
  31:Generated_Source\PSoC6/cyfitter_cfg.c **** 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 2


  32:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  33:Generated_Source\PSoC6/cyfitter_cfg.c **** #if defined(__GNUC__) || defined(__ARMCC_VERSION)
  34:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED 
  35:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR __attribute__ ((packed))
  36:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED __attribute__ ((aligned))
  37:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED __attribute__ ((unused))
  38:Generated_Source\PSoC6/cyfitter_cfg.c ****     #ifndef CY_CFG_SECTION
  39:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_SECTION __attribute__ ((section(".psocinit")))
  40:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  41:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  42:Generated_Source\PSoC6/cyfitter_cfg.c ****     #if defined(__ARMCC_VERSION)
  43:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __memory_changed()
  44:Generated_Source\PSoC6/cyfitter_cfg.c ****     #else
  45:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __sync_synchronize()
  46:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  47:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  48:Generated_Source\PSoC6/cyfitter_cfg.c **** #elif defined(__ICCARM__)
  49:Generated_Source\PSoC6/cyfitter_cfg.c ****     #include <intrinsics.h>
  50:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  51:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED __packed
  52:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR 
  53:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED _Pragma("data_alignment=4")
  54:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED _Pragma("diag_suppress=Pe177")
  55:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_SECTION _Pragma("location=\".psocinit\"")
  56:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  57:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_MEMORY_BARRIER() __DMB()
  58:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  59:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
  60:Generated_Source\PSoC6/cyfitter_cfg.c ****     #error Unsupported toolchain
  61:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  62:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  63:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYCODE
  64:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYCODE
  65:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  66:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYDATA
  67:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYDATA
  68:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  69:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYFAR
  70:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYFAR
  71:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  72:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYXDATA
  73:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYXDATA
  74:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  75:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  76:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  77:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  78:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n);
  79:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  80:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n)
  81:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  82:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memset(s, 0, n);
  83:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  84:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  85:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n);
  86:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  87:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n)
  88:Generated_Source\PSoC6/cyfitter_cfg.c **** {
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 3


  89:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  90:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  91:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  92:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n);
  93:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  94:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n)
  95:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  96:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  97:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  98:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  99:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 100:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 101:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 102:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Clock startup error codes                                                   */
 103:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_NO_ERROR    0u
 104:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_XTAL_ERROR  1u
 105:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_32KHZ_ERROR 2u
 106:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_PLL_ERROR   3u
 107:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_FLL_ERROR   4u
 108:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_WCO_ERROR   5u
 109:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 110:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 111:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_NEED_CYCLOCKSTARTUPERROR
 112:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: CyClockStartupError
 114:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 115:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 116:Generated_Source\PSoC6/cyfitter_cfg.c **** *  If an error is encountered during clock configuration (crystal startup error,
 117:Generated_Source\PSoC6/cyfitter_cfg.c **** *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
 118:Generated_Source\PSoC6/cyfitter_cfg.c **** *  the customer, this function will stop in an infinite loop.
 119:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 120:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 121:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 122:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 123:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 124:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 125:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 126:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 127:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 128:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode);
 129:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 130:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode)
 131:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  27              		.loc 1 131 0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE187:
  38              		.size	CyClockStartupError, .-CyClockStartupError
  39 0002 C046     		.section	.text.ClockInit,"ax",%progbits
  40              		.align	2
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 4


  41              		.code	16
  42              		.thumb_func
  43              		.type	ClockInit, %function
  44              	ClockInit:
  45              	.LFB188:
 132:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* To remove the compiler warning if errorCode not used.                */
 133:Generated_Source\PSoC6/cyfitter_cfg.c ****     errorCode = errorCode;
 134:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 135:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
 136:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* we will end up here to allow the customer to implement something to  */
 137:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* deal with the clock condition.                                       */
 138:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 139:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
 140:Generated_Source\PSoC6/cyfitter_cfg.c ****     CY_CFG_Clock_Startup_ErrorCallback();
 141:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
 142:Generated_Source\PSoC6/cyfitter_cfg.c ****     while(1) {}
 143:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 144:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 145:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
 146:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 147:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void);
 148:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void)
 149:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  46              		.loc 1 149 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 24
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		.loc 1 149 0
  51 0000 30B5     		push	{r4, r5, lr}
  52              		.cfi_def_cfa_offset 12
  53              		.cfi_offset 4, -12
  54              		.cfi_offset 5, -8
  55              		.cfi_offset 14, -4
  56 0002 87B0     		sub	sp, sp, #28
  57              		.cfi_def_cfa_offset 40
  58              	.LVL1:
  59              	.LBB40:
  60              	.LBB41:
  61              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 5


  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 6


  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 7


 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 8


 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 9


 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 10


 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 11


 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 12


 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 13


 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 14


 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   1
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   20
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 15


 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 16


 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoDisable
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 17


 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 18


 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllLocked
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 19


 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllDisable
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 20


 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLocked
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLostLock
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 21


 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllDisable
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 22


 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloEnable
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloDisable
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 23


1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloEnable
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloDisable
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 24


1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 25


1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 26


1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 27


1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 28


1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoEnable
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoOkay
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 29


1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoDisable
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoBypass
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 30


1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 31


1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 32


1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 33


1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 34


1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 35


1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 36


1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 37


1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 38


1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 39


1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 40


2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 41


2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 42


2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnablePhaseAlignDivider
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * First disables a selected divider (\ref Cy_SysClk_PeriphDisableDivider),
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * then aligns that divider to another programmable divider, and enables the
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * selected divider. The divider to align to must already be enabled in order
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to align a divider to it.
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerTypePA type of divider to phase-align to; \ref cy_en_divider_types_t.
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNumPA divider number of type specified to phase align to.
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 43


2185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * To phase-align a divider to clk_peri, set dividerTypePA to 3 and dividerNumPA
2187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to 63.
2188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphEnablePhaseAlignDivider
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t dividerType, uint32_t
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                         cy_en_divider_types_t dividerTypePA, uint32
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerTypePA <= CY_SYSCLK_DIV_24_5_BIT)
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerTypePA == CY_SYSCLK_DIV_8_BIT)    && (dividerNumPA < PERI_DIV_8_NR))    ||
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_BIT)   && (dividerNumPA < PERI_DIV_16_NR))   ||
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_5_BIT) && (dividerNumPA < PERI_DIV_16_5_NR)) ||
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_24_5_BIT) && ((dividerNumPA < PERI_DIV_24_5_NR) || (di
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* First, disable the divider that is to be phase-aligned.
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                The other two parameters are checked in that function;
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                if they're not valid, the divider is not disabled. */
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = Cy_SysClk_PeriphDisableDivider(dividerType, dividerNum);
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             if (retVal == CY_SYSCLK_SUCCESS)
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             {
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 /* Then, specify the reference divider, and the divider, and enable the divider. */
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk             |
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_TYPE_SEL, dividerTypePA) |
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_DIV_SEL,  dividerNumPA)  |
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType)   |
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             }
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDividerEnabled
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the enabled/disabled atate of the selected divider.
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The enabled/disabled state;<br>
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = disabled<br>
2235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = enabled
2236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphGetDividerEnabled
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 44


2242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = false;
2244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)));
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     switch(dividerType)
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_8_BIT:
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_8_CTL_EN, PERI_DIV_8_CTL[dividerNum]);
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_BIT:
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_CTL_EN, PERI_DIV_16_CTL[dividerNum]);
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_5_BIT:
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_5_CTL_EN, PERI_DIV_16_5_CTL[dividerNum]);
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_24_5_BIT:
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_24_5_CTL_EN, PERI_DIV_24_5_CTL[dividerNum]);
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         default:
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_funcs */
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_slow SECTION    ========================= */
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_slow_funcs
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider);
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void);
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowSetDivider
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the slow clock. The source of this clock is the
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clock (clkPeri), which is sourced from clkHf[0].
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value between 0 and 255.
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
2293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 45


2299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider)
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, divider);
2302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowGetDivider
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the slow clock.
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void)
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, CPUSS_CM0_CLOCK_CTL));
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_slow_funcs */
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    clkLf SECTION    ========================== */
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_enums
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Low frequency (clkLf) input sources. See CLK_SELECT register, LFCLK_SEL bits.
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkLfSetSource, and \ref Cy_SysClk_ClkLfGetSource.
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ILO   = 0U, /**< clkLf is sourced by the internal low speed oscillator (ILO)
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_WCO   = 1U, /**< clkLf is sourced by the watch crystal oscillator (WCO) */
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ALTLF = 2U, /**< clkLf is sourced by the Alternate Low Frequency Clock (ALTL
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_PILO  = 3U  /**< clkLf is sourced by the precision low speed oscillator (PIL
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clklf_in_sources_t;
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_enums */
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_funcs
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source);
2349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void);
2350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfSetSource
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the low frequency clock(clkLf).
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 46


2356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clklf_in_sources_t
2358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source)
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKLF_IN_PILO);
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_LFCLK_SEL, source);
  62              		.loc 2 2368 0
  63 0004 5949     		ldr	r1, .L9
  64 0006 A022     		movs	r2, #160
  65 0008 D200     		lsls	r2, r2, #3
  66 000a 8B58     		ldr	r3, [r1, r2]
  67 000c 0320     		movs	r0, #3
  68 000e 8343     		bics	r3, r0
  69 0010 8B50     		str	r3, [r1, r2]
  70              	.LVL2:
  71              	.LBE41:
  72              	.LBE40:
  73              	.LBB42:
  74              	.LBB43:
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  75              		.loc 2 1729 0
  76 0012 574A     		ldr	r2, .L9+4
  77 0014 1168     		ldr	r1, [r2]
  78 0016 0868     		ldr	r0, [r1]
  79 0018 8823     		movs	r3, #136
  80 001a CB58     		ldr	r3, [r1, r3]
  81 001c C318     		adds	r3, r0, r3
  82 001e 1868     		ldr	r0, [r3]
  83 0020 5449     		ldr	r1, .L9+8
  84 0022 0840     		ands	r0, r1
  85 0024 1860     		str	r0, [r3]
  86              	.LVL3:
  87              	.LBE43:
  88              	.LBE42:
  89              	.LBB44:
  90              	.LBB45:
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  91              		.loc 2 1782 0
  92 0026 1368     		ldr	r3, [r2]
  93 0028 1868     		ldr	r0, [r3]
  94 002a 8424     		movs	r4, #132
  95 002c 1B59     		ldr	r3, [r3, r4]
  96 002e C018     		adds	r0, r0, r3
  97 0030 0368     		ldr	r3, [r0]
  98 0032 1B02     		lsls	r3, r3, #8
  99 0034 1B0A     		lsrs	r3, r3, #8
 100 0036 8025     		movs	r5, #128
 101 0038 6D04     		lsls	r5, r5, #17
 102 003a 2B43     		orrs	r3, r5
 103 003c 0360     		str	r3, [r0]
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 47


 104              	.LVL4:
 105              	.LBE45:
 106              	.LBE44:
 107              	.LBB46:
 108              	.LBB47:
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 109              		.loc 2 2301 0
 110 003e 1068     		ldr	r0, [r2]
 111 0040 0568     		ldr	r5, [r0]
 112 0042 0359     		ldr	r3, [r0, r4]
 113 0044 EB18     		adds	r3, r5, r3
 114 0046 1868     		ldr	r0, [r3]
 115 0048 0140     		ands	r1, r0
 116 004a 1960     		str	r1, [r3]
 117              	.LVL5:
 118              	.LBE47:
 119              	.LBE46:
 120              	.LBB48:
 121              	.LBB49:
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 122              		.loc 2 1601 0
 123 004c 1368     		ldr	r3, [r2]
 124 004e 3E22     		movs	r2, #62
 125 0050 9A5C     		ldrb	r2, [r3, r2]
 126 0052 002A     		cmp	r2, #0
 127 0054 06D0     		beq	.L4
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 128              		.loc 2 1603 0
 129 0056 4548     		ldr	r0, .L9
 130 0058 E021     		movs	r1, #224
 131 005a 8900     		lsls	r1, r1, #2
 132 005c 4258     		ldr	r2, [r0, r1]
 133 005e 753C     		subs	r4, r4, #117
 134 0060 A243     		bics	r2, r4
 135 0062 4250     		str	r2, [r0, r1]
 136              	.LVL6:
 137              	.L4:
 138              	.LBE49:
 139              	.LBE48:
 140              	.LBB50:
 141              	.LBB51:
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 142              		.loc 2 1662 0
 143 0064 3E22     		movs	r2, #62
 144 0066 9A5C     		ldrb	r2, [r3, r2]
 145 0068 002A     		cmp	r2, #0
 146 006a 06D0     		beq	.L5
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 147              		.loc 2 1664 0
 148 006c 3F48     		ldr	r0, .L9
 149 006e E021     		movs	r1, #224
 150 0070 8900     		lsls	r1, r1, #2
 151 0072 4258     		ldr	r2, [r0, r1]
 152 0074 3024     		movs	r4, #48
 153 0076 A243     		bics	r2, r4
 154 0078 4250     		str	r2, [r0, r1]
 155              	.LVL7:
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 48


 156              	.L5:
 157              	.LBE51:
 158              	.LBE50:
 159              	.LBB52:
 160              	.LBB53:
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 161              		.loc 2 1534 0
 162 007a 3E22     		movs	r2, #62
 163 007c 9B5C     		ldrb	r3, [r3, r2]
 164 007e 002B     		cmp	r3, #0
 165 0080 07D0     		beq	.L6
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 166              		.loc 2 1536 0
 167 0082 3A49     		ldr	r1, .L9
 168 0084 E022     		movs	r2, #224
 169 0086 9200     		lsls	r2, r2, #2
 170 0088 8B58     		ldr	r3, [r1, r2]
 171 008a 8020     		movs	r0, #128
 172 008c 0006     		lsls	r0, r0, #24
 173 008e 0343     		orrs	r3, r0
 174 0090 8B50     		str	r3, [r1, r2]
 175              	.LVL8:
 176              	.L6:
 177              	.LBE53:
 178              	.LBE52:
 150:Generated_Source\PSoC6/cyfitter_cfg.c **** 	uint32_t status;
 151:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 152:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Enable all source clocks */
 153:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkLfSetSource(CY_SYSCLK_CLKLF_IN_ILO);
 154:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 155:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure CPU clock dividers */
 156:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkFastSetDivider(0u);
 157:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPeriSetDivider(1u);
 158:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkSlowSetDivider(0u);
 159:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 160:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure LF & HF clocks */
 161:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetSource(0u, CY_SYSCLK_CLKHF_IN_CLKPATH0);
 162:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetDivider(0u, CY_SYSCLK_CLKHF_NO_DIVIDE);
 163:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfEnable(0u);
 164:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 165:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure Path Clocks */
 166:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(1, CY_SYSCLK_CLKPATH_IN_IMO);
 179              		.loc 1 166 0
 180 0092 0021     		movs	r1, #0
 181 0094 0120     		movs	r0, #1
 182 0096 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 183              	.LVL9:
 167:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(2, CY_SYSCLK_CLKPATH_IN_IMO);
 184              		.loc 1 167 0
 185 009a 0021     		movs	r1, #0
 186 009c 0220     		movs	r0, #2
 187 009e FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 188              	.LVL10:
 168:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(3, CY_SYSCLK_CLKPATH_IN_IMO);
 189              		.loc 1 168 0
 190 00a2 0021     		movs	r1, #0
 191 00a4 0320     		movs	r0, #3
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 49


 192 00a6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 193              	.LVL11:
 169:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(4, CY_SYSCLK_CLKPATH_IN_IMO);
 194              		.loc 1 169 0
 195 00aa 0021     		movs	r1, #0
 196 00ac 0420     		movs	r0, #4
 197 00ae FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 198              	.LVL12:
 170:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(0, CY_SYSCLK_CLKPATH_IN_IMO);
 199              		.loc 1 170 0
 200 00b2 0021     		movs	r1, #0
 201 00b4 0020     		movs	r0, #0
 202 00b6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 203              	.LVL13:
 204              	.LBB54:
 171:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 172:Generated_Source\PSoC6/cyfitter_cfg.c **** 		const cy_stc_fll_manual_config_t fllConfig = 
 205              		.loc 1 172 0
 206 00ba 01A8     		add	r0, sp, #4
 207 00bc 2E49     		ldr	r1, .L9+12
 208 00be 0300     		movs	r3, r0
 209 00c0 0A00     		movs	r2, r1
 210 00c2 32CA     		ldmia	r2!, {r1, r4, r5}
 211 00c4 32C3     		stmia	r3!, {r1, r4, r5}
 212 00c6 12CA     		ldmia	r2!, {r1, r4}
 213 00c8 12C3     		stmia	r3!, {r1, r4}
 173:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 174:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.fllMult =         500u,
 175:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.refDiv =          20u,
 176:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.ccoRange =        CY_SYSCLK_FLL_CCO_RANGE4,
 177:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.enableOutputDiv = true,
 178:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.lockTolerance =   10u,
 179:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.igain =           9u,
 180:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.pgain =           5u,
 181:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.settlingCount =   8u,
 182:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.outputMode =      CY_SYSCLK_FLLPLL_OUTPUT_AUTO,
 183:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.cco_Freq =        355u
 184:Generated_Source\PSoC6/cyfitter_cfg.c **** 		};
 185:Generated_Source\PSoC6/cyfitter_cfg.c **** 		status = Cy_SysClk_FllManualConfigure(&fllConfig);
 214              		.loc 1 185 0
 215 00ca FFF7FEFF 		bl	Cy_SysClk_FllManualConfigure
 216              	.LVL14:
 186:Generated_Source\PSoC6/cyfitter_cfg.c **** 		if (CY_RET_SUCCESS != status)
 217              		.loc 1 186 0
 218 00ce 0028     		cmp	r0, #0
 219 00d0 02D0     		beq	.L7
 187:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 188:Generated_Source\PSoC6/cyfitter_cfg.c **** 			CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 220              		.loc 1 188 0
 221 00d2 0420     		movs	r0, #4
 222              	.LVL15:
 223 00d4 FFF7FEFF 		bl	CyClockStartupError
 224              	.LVL16:
 225              	.L7:
 226              	.LBE54:
 189:Generated_Source\PSoC6/cyfitter_cfg.c **** 		}
 190:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 50


 191:Generated_Source\PSoC6/cyfitter_cfg.c **** 	SRSS->CLK_TRIM_CCO_CTL |= 1u << 31;
 227              		.loc 1 191 0
 228 00d8 2449     		ldr	r1, .L9
 229 00da 284A     		ldr	r2, .L9+16
 230 00dc 8B58     		ldr	r3, [r1, r2]
 231 00de 8020     		movs	r0, #128
 232              	.LVL17:
 233 00e0 0006     		lsls	r0, r0, #24
 234 00e2 0343     		orrs	r3, r0
 235 00e4 8B50     		str	r3, [r1, r2]
 192:Generated_Source\PSoC6/cyfitter_cfg.c **** 	status = Cy_SysClk_FllEnable(200000u);
 236              		.loc 1 192 0
 237 00e6 2648     		ldr	r0, .L9+20
 238 00e8 FFF7FEFF 		bl	Cy_SysClk_FllEnable
 239              	.LVL18:
 193:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if (CY_RET_SUCCESS != status)
 240              		.loc 1 193 0
 241 00ec 0028     		cmp	r0, #0
 242 00ee 02D0     		beq	.L8
 194:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 195:Generated_Source\PSoC6/cyfitter_cfg.c **** 		CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 243              		.loc 1 195 0
 244 00f0 0420     		movs	r0, #4
 245              	.LVL19:
 246 00f2 FFF7FEFF 		bl	CyClockStartupError
 247              	.LVL20:
 248              	.L8:
 249              	.LBB55:
 250              	.LBB56:
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfGetSource
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the low frequency clock (clkLf).
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clklf_in_sources_t
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void)
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clklf_in_sources_t)(_FLD2VAL(SRSS_CLK_SELECT_LFCLK_SEL, SRSS_CLK_SELECT));
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_funcs */
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_timer SECTION    ========================= */
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_enums
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 51


2397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Timer clock (clk_timer) input sources. See CLK_TIMER_CTL register, TIMER_SEL
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and TIMER_HF0_DIV bits. Used with functions \ref Cy_SysClk_ClkTimerSetSource, and
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkTimerGetSource.
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_IMO       = 0x000U, /**< clk_timer is sourced by the internal main oscill
2405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_NODIV = 0x001U, /**< clk_timer is sourced by clkHf[0] undivided */
2406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV2  = 0x101U, /**< clk_timer is sourced by clkHf[0] divided by 2 */
2407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV4  = 0x201U, /**< clk_timer is sourced by clkHf[0] divided by 4 */
2408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV8  = 0x301U  /**< clk_timer is sourced by clkHf[0] divided by 8 */
2409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clktimer_in_sources_t;
2410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_enums */
2411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Pos (SRSS_CLK_TIMER_CTL_TIMER_SEL_Pos)
2414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Msk (SRSS_CLK_TIMER_CTL_TIMER_SEL_Msk | SRSS_CLK_TIMER_CTL_TIME
2415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
2416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_funcs
2419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source);
2422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void);
2423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider);
2424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void);
2425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void);
2426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void);
2427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetSource
2430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the timer clock (clk_timer). The timer clock can be used
2433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * as a source for SYSTICK as an alternate clock and one or more of the energy 
2434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * profiler counters.
2435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clktimer_in_sources_t
2437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source)
2443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKTIMER_IN_HF0_DIV8);
2445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* set both fields TIMER_SEL and TIMER_HF0_DIV with the same input value */
2446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, CY_SRSS_CLK_TIMER_CTL_TIMER, source);
 251              		.loc 2 2446 0
 252 00f6 1D4C     		ldr	r4, .L9
 253 00f8 224B     		ldr	r3, .L9+24
 254 00fa E158     		ldr	r1, [r4, r3]
 255 00fc 224A     		ldr	r2, .L9+28
 256 00fe 0A40     		ands	r2, r1
 257 0100 E250     		str	r2, [r4, r3]
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 52


 258              	.LVL21:
 259              	.LBE56:
 260              	.LBE55:
 261              	.LBB57:
 262              	.LBB58:
2447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetSource
2451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the timer clock (clk_timer).
2454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clktimer_in_sources_t
2456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void)
2462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* return both fields TIMER_SEL and TIMER_HF0_DIV as a single combined value */
2464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clktimer_in_sources_t)(SRSS_CLK_TIMER_CTL & CY_SRSS_CLK_TIMER_CTL_TIMER_Msk);
2465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetDivider
2469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider for the timer clock (clk_timer).
2472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value; valid range is 0 to 255. Divides the selected
2474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * source (\ref Cy_SysClk_ClkTimerSetSource) by the (value + 1).
2475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the timer clock is enabled.
2478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider)
2484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, SRSS_CLK_TIMER_CTL_TIMER_DIV, divider);
 263              		.loc 2 2485 0
 264 0102 E158     		ldr	r1, [r4, r3]
 265 0104 214A     		ldr	r2, .L9+32
 266 0106 0A40     		ands	r2, r1
 267 0108 E250     		str	r2, [r4, r3]
 268              	.LVL22:
 269              	.LBE58:
 270              	.LBE57:
 271              	.LBB59:
 272              	.LBB60:
2486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 53


2489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetDivider
2490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the timer clock (clk_timer).
2493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value
2495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void)
2501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(SRSS_CLK_TIMER_CTL_TIMER_DIV, SRSS_CLK_TIMER_CTL));
2503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerEnable
2507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the timer clock (clk_timer). The timer clock can be used as a source
2510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for SYSTICK and one or more of the energy profiler counters.
2511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerEnable
2514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void)
2517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL |= SRSS_CLK_TIMER_CTL_ENABLE_Msk;
 273              		.loc 2 2518 0
 274 010a E258     		ldr	r2, [r4, r3]
 275 010c 8025     		movs	r5, #128
 276 010e 2D06     		lsls	r5, r5, #24
 277 0110 2A43     		orrs	r2, r5
 278 0112 E250     		str	r2, [r4, r3]
 279              	.LVL23:
 280              	.LBE60:
 281              	.LBE59:
 282              	.LBB61:
 283              	.LBB62:
2519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerDisable
2523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the timer clock (clk_timer).
2526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerDisable
2529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void)
2532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL &= ~SRSS_CLK_TIMER_CTL_ENABLE_Msk;
2534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 54


2535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_funcs */
2536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_pump SECTION    ========================= */
2540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_enums
2543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) input sources. See CLK_SELECT register, PUMP_SEL bits.
2547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetSource, and
2548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetSource.
2549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH0,  /**< Pump clock input is clock path 0 */
2553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH1,  /**< Pump clock input is clock path 1 */
2554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH2,  /**< Pump clock input is clock path 2 */
2555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH3,  /**< Pump clock input is clock path 3 */
2556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH4,  /**< Pump clock input is clock path 4 */
2557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH5,  /**< Pump clock input is clock path 5 */
2558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH6,  /**< Pump clock input is clock path 6 */
2559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH7,  /**< Pump clock input is clock path 7 */
2560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH8,  /**< Pump clock input is clock path 8 */
2561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH9,  /**< Pump clock input is clock path 9 */
2562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH10, /**< Pump clock input is clock path 10 */
2563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH11, /**< Pump clock input is clock path 11 */
2564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH12, /**< Pump clock input is clock path 12 */
2565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH13, /**< Pump clock input is clock path 13 */
2566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH14, /**< Pump clock input is clock path 14 */
2567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH15  /**< Pump clock input is clock path 15 */
2568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_in_sources_t;
2569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) divide options. See CLK_SELECT register, PUMP_DIV bits.
2572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetDivider, and
2573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetDivider.
2574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_NO_DIV = 0U, /**< No division on pump clock */
2578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_2  = 1U, /**< Pump clock divided by 2 */
2579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_4  = 2U, /**< Pump clock divided by 4 */
2580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_8  = 3U, /**< Pump clock divided by 8 */
2581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_16 = 4U  /**< Pump clock divided by 16 */
2582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_divide_t;
2583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_enums */
2584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_FLL_IS_DIVIDER_VALID(div) (((div) == CY_SYSCLK_PUMP_NO_DIV) || \
2587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_2)  || \
2588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_4)  || \
2589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_8)  || \
2590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_16))
2591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 55


2592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_funcs
2595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source);
2598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void);
2599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider);
2600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void);
2601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void);
2602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void);
2603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetSource
2606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the pump clock (clk_pump). The pump clock can be used for
2609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the analog pumps in the CTBm block.
2610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkpump_in_sources_t
2612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the source while the pump clock is enabled.
2615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source)
2621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_PUMP_IN_CLKPATH15);
2623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_SEL, source);
 284              		.loc 2 2623 0
 285 0114 043B     		subs	r3, r3, #4
 286 0116 E158     		ldr	r1, [r4, r3]
 287 0118 1D4A     		ldr	r2, .L9+36
 288 011a 0A40     		ands	r2, r1
 289 011c E250     		str	r2, [r4, r3]
 290              	.LVL24:
 291              	.LBE62:
 292              	.LBE61:
 293              	.LBB63:
 294              	.LBB64:
2624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetSource
2628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the pump clock (clk_pump).
2631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_in_sources_t
2633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 56


2638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void)
2639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_in_sources_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_SEL, SRSS_CLK_SELECT);
2641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetDivider
2645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider of the pump clock (clk_pump).
2648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkpump_divide_t
2650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the pump clock is enabled.
2653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider)
2659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(CY_SYSCLK_FLL_IS_DIVIDER_VALID(divider));
2661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_DIV, divider);
 295              		.loc 2 2661 0
 296 011e E158     		ldr	r1, [r4, r3]
 297 0120 1C4A     		ldr	r2, .L9+40
 298 0122 0A40     		ands	r2, r1
 299 0124 8021     		movs	r1, #128
 300 0126 8901     		lsls	r1, r1, #6
 301 0128 0A43     		orrs	r2, r1
 302 012a E250     		str	r2, [r4, r3]
 303              	.LVL25:
 304              	.LBE64:
 305              	.LBE63:
 306              	.LBB65:
 307              	.LBB66:
2662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetDivider
2666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the pump clock (clk_pump).
2669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_divide_t
2671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void)
2677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_divide_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_DIV, SRSS_CLK_SELECT);
2679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 57


2682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpEnable
2683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the pump clock (clk_pump). The pump clock can be used for the analog
2686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * pumps in the CTBm block.
2687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpEnable
2690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void)
2693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT |= SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
 308              		.loc 2 2694 0
 309 012c E258     		ldr	r2, [r4, r3]
 310 012e 8021     		movs	r1, #128
 311 0130 0902     		lsls	r1, r1, #8
 312 0132 0A43     		orrs	r2, r1
 313 0134 E250     		str	r2, [r4, r3]
 314              	.LVL26:
 315              	.LBE66:
 316              	.LBE65:
 317              	.LBB67:
 318              	.LBB68:
2695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpDisable
2699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the pump clock (clk_pump).
2702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpDisable
2705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void)
2708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT &= ~SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
2710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_funcs */
2712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    clk_bak SECTION    ========================= */
2716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_enums
2719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Backup domain clock (clk_bak) input sources. See BACKUP->CTL register,
2723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_SEL bits. Used with functions \ref Cy_SysClk_ClkBakSetSource, and
2724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkBakGetSource.
2725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 58


2728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_WCO,   /**< Backup domain clock input is WCO */
2729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_CLKLF  /**< Backup domain clock input is clkLf */
2730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkbak_in_sources_t;
2731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_bak_enums */
2732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_funcs
2735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source);
2738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkbak_in_sources_t Cy_SysClk_ClkBakGetSource(void);
2739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkBakSetSource
2742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the backup domain clock (clk_bak).
2745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkbak_in_sources_t
2747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkLf is not available in all power modes.  For this reason, WCO is the
2750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * preferred source. If the WCO is routed through the clkLf multiplexer
2751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (see \ref Cy_SysClk_ClkLfSetSource), select WCO directly - do not select clkLf.
2752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkBakSetSource
2755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source)
2758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_BAK_IN_CLKLF);
2760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_CLK_SEL, source);
 319              		.loc 2 2760 0
 320 0136 184A     		ldr	r2, .L9+44
 321 0138 1168     		ldr	r1, [r2]
 322 013a 184B     		ldr	r3, .L9+48
 323 013c 0B40     		ands	r3, r1
 324 013e 8021     		movs	r1, #128
 325 0140 4900     		lsls	r1, r1, #1
 326 0142 0B43     		orrs	r3, r1
 327 0144 1360     		str	r3, [r2]
 328              	.LVL27:
 329              	.LBE68:
 330              	.LBE67:
 196:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 197:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 198:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure miscellaneous clocks */
 199:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetSource(CY_SYSCLK_CLKTIMER_IN_IMO);
 200:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetDivider(0);
 201:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerEnable();
 202:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetSource(CY_SYSCLK_PUMP_IN_CLKPATH0);
 203:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetDivider(CY_SYSCLK_PUMP_DIV_4);
 204:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpEnable();
 205:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkBakSetSource(CY_SYSCLK_BAK_IN_CLKLF);
 206:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysTick_SetClockSource(CY_SYSTICK_CLOCK_SOURCE_CLK_LF);
 331              		.loc 1 206 0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 59


 332 0146 0020     		movs	r0, #0
 333              	.LVL28:
 334 0148 FFF7FEFF 		bl	Cy_SysTick_SetClockSource
 335              	.LVL29:
 336              	.LBB69:
 337              	.LBB70:
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 338              		.loc 2 1003 0
 339 014c 144B     		ldr	r3, .L9+52
 340 014e E258     		ldr	r2, [r4, r3]
 341 0150 1543     		orrs	r5, r2
 342 0152 E550     		str	r5, [r4, r3]
 343              	.LVL30:
 344              	.LBE70:
 345              	.LBE69:
 346              	.LBB71:
 347              	.LBB72:
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 348              		.loc 2 1054 0
 349 0154 E158     		ldr	r1, [r4, r3]
 350 0156 0122     		movs	r2, #1
 351 0158 9143     		bics	r1, r2
 352 015a 0A43     		orrs	r2, r1
 353 015c E250     		str	r2, [r4, r3]
 354              	.LVL31:
 355              	.LBE72:
 356              	.LBE71:
 207:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloEnable();
 208:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloHibernateOn(1u);
 209:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 210:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set memory wait states based on 100 MHz HFClk[0] */
 211:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 100);
 357              		.loc 1 211 0
 358 015e 6421     		movs	r1, #100
 359 0160 0020     		movs	r0, #0
 360 0162 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 361              	.LVL32:
 212:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 362              		.loc 1 212 0
 363 0166 07B0     		add	sp, sp, #28
 364              		@ sp needed
 365 0168 30BD     		pop	{r4, r5, pc}
 366              	.L10:
 367 016a C046     		.align	2
 368              	.L9:
 369 016c 00002640 		.word	1076232192
 370 0170 00000000 		.word	cy_device
 371 0174 FF00FFFF 		.word	-65281
 372 0178 00000000 		.word	.LANCHOR0
 373 017c 087F0000 		.word	32520
 374 0180 400D0300 		.word	200000
 375 0184 04050000 		.word	1284
 376 0188 FEFCFFFF 		.word	-770
 377 018c FFFF00FF 		.word	-16711681
 378 0190 FFF0FFFF 		.word	-3841
 379 0194 FF8FFFFF 		.word	-28673
 380 0198 00002740 		.word	1076297728
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 60


 381 019c FFFCFFFF 		.word	-769
 382 01a0 0C050000 		.word	1292
 383              		.cfi_endproc
 384              	.LFE188:
 385              		.size	ClockInit, .-ClockInit
 386              		.section	.text.Cy_SystemInit,"ax",%progbits
 387              		.align	2
 388              		.global	Cy_SystemInit
 389              		.code	16
 390              		.thumb_func
 391              		.type	Cy_SystemInit, %function
 392              	Cy_SystemInit:
 393              	.LFB190:
 213:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 214:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 215:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Analog API Functions */
 216:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 217:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 218:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 219:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: AnalogSetDefault
 220:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 221:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 222:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 223:Generated_Source\PSoC6/cyfitter_cfg.c **** *  Sets up the analog portions of the chip to default values based on chip
 224:Generated_Source\PSoC6/cyfitter_cfg.c **** *  configuration options from the project.
 225:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 226:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 227:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 228:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 229:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 230:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 231:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 232:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 233:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void);
 234:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void)
 235:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 236:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 237:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 238:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 239:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 240:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 241:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 242:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: Cy_SystemInit
 243:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 244:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 245:Generated_Source\PSoC6/cyfitter_cfg.c **** *  This function is called by the start-up code for the selected device. It
 246:Generated_Source\PSoC6/cyfitter_cfg.c **** *  performs all of the necessary device configuration based on the design
 247:Generated_Source\PSoC6/cyfitter_cfg.c **** *  settings.  This includes settings from the Design Wide Resources (DWR) such
 248:Generated_Source\PSoC6/cyfitter_cfg.c **** *  as Clocks and Pins as well as any component configuration that is necessary.
 249:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 250:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 251:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 252:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 253:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 254:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 255:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 256:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 61


 257:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 258:Generated_Source\PSoC6/cyfitter_cfg.c **** void Cy_SystemInit(void)
 259:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 394              		.loc 1 259 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 40
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 30B5     		push	{r4, r5, lr}
 399              		.cfi_def_cfa_offset 12
 400              		.cfi_offset 4, -12
 401              		.cfi_offset 5, -8
 402              		.cfi_offset 14, -4
 403 0002 8BB0     		sub	sp, sp, #44
 404              		.cfi_def_cfa_offset 56
 260:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set worst case memory wait states (150 MHz), ClockInit() will update */
 261:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 150);
 405              		.loc 1 261 0
 406 0004 9621     		movs	r1, #150
 407 0006 0020     		movs	r0, #0
 408 0008 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 409              	.LVL33:
 262:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 263:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if(0u == Cy_SysLib_GetResetReason()) /* POR, XRES, or BOD */
 410              		.loc 1 263 0
 411 000c FFF7FEFF 		bl	Cy_SysLib_GetResetReason
 412              	.LVL34:
 413 0010 0028     		cmp	r0, #0
 414 0012 01D1     		bne	.L12
 264:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 265:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysLib_ResetBackupDomain();
 415              		.loc 1 265 0
 416 0014 FFF7FEFF 		bl	Cy_SysLib_ResetBackupDomain
 417              	.LVL35:
 418              	.L12:
 266:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 267:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 268:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Power Mode */
 269:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_1_1V);
 419              		.loc 1 269 0
 420 0018 0120     		movs	r0, #1
 421 001a FFF7FEFF 		bl	Cy_SysPm_LdoSetVoltage
 422              	.LVL36:
 423              	.LBB73:
 424              	.LBB74:
 425              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \file cy_syspm.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \version 4.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Provides the function definitions for the power management API.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the software package with which this file was provided.
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 62


  13:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use the System Power Management (SysPm) driver to change power modes and 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reduce system power consumption in power sensitive designs. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The functions and other declarations used in this driver are in cy_syspm.h. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and declarations in the PDL. 
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, this library allows you to individually enter low power  
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modes for each CPU.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This document contains the following topics:
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_power_modes
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_power_modes
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_ulp
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_ulp_limitations
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_lp
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_lp_limitations
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_sleep
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_deepsleep
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_sleep_deepsleep
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_hibernate
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_hibernate
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_reg_curr_mode
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_min_reg_curr_mode
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_normal_reg_curr_mode
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_migration_guide_for_syspm_4_0
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_pmic
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_backup_domain
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_cb
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_example
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_config_consideration
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_parameters
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_structures
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_function_implementation
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_flow
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_unregistering
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_definitions
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_configuration Configuration Considerations
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_power_modes Power Modes
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PSoC 6 MCUs support four system and three CPU power modes. These power modes
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are intended to minimize average power consumption in an application.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * System power modes:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Low Power</b> - All peripheral and CPU power modes
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are available to be used at maximum device frequency and current 
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   consumption.
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Ultra Low Power</b> - All peripheral and 
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   CPU power modes are available, but the frequency and current consumption 
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are limited to a device specific number.
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 63


  70:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Device and I/O states is retained. Low-frequency 
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals are available. Both CPUs are in CPU Deep Sleep power mode. 
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - The device and I/O states are frozen and the device 
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   resets on wakeup.
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU <b>Active</b>, <b>Sleep</b> and <b>Deep Sleep</b> power modes are 
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Arm-defined power modes supported by the Arm CPU instruction 
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * set architecture (ISA). 
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_power_modes System Power Modes
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>LP</b> - In this mode, code is executed and all logic and 
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   memories are powered. Firmware may disable/reduce clocks for specific 
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals and power down specific analog power domains.
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>ULP</b> - This power mode is like LP mode, but 
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   with clock restrictions and limited/slower peripherals to achieve lower
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   current consumption. Refer to \ref group_syspm_switching_into_ulp in 
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations.
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Is a lower power mode where high-frequency clocks are 
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   disabled. Refer to \ref group_syspm_switching_into_deepsleep in 
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. Deep-sleep-capable peripherals are available. 
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   A normal wakeup from Deep Sleep returns to either system LP or ULP mode, 
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   depending on the previous state and programmed behavior for the configured 
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   wakeup interrupt. Likewise, a debug wakes up from system Deep Sleep and 
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   woken CPU returns to CPU Sleep. Refer 
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   to \ref group_syspm_wakingup_from_sleep_deepsleep in Configuration 
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   considerations.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - Is the lowest power mode that is entered from 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   firmware. Refer to \ref group_syspm_switching_into_hibernate in 
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. On wakeup the CPU(s) and all peripherals 
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   go through a full reset. The I/O's state is frozen so that the 
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   output driver state is held in system Hibernate. Note that in this mode, 
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   the CPU(s) and all peripherals lose their states, so the system and firmware
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   reboot on a wakeup event. Backup memory (if present) can be used to store 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   limited system state for use on the next reboot. Refer to 
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \ref group_syspm_wakingup_from_hibernate in Configuration considerations.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_lp Switching the System into Low Power
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set system LP mode you need to set LP voltage for the active core 
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * regulator:
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO, call:
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_LP);
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck, call:
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_LP)
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After switching into system LP mode, the operating frequency and current 
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * consumption may now be increased up to \ref group_syspm_lp_limitations.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The wait states for flash may be changed to increase device performance by 
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * calling SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where 
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * hfClkFreqMz is the frequency of HfClk0 in MHz.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 64


 127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_lp_limitations LP Limitations
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in LP mode, the core regulator voltage is set to
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>1.1 V (nominal)</b> and the following limitations must be met:
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>150 MHz*</b>, and peripheral and slow clock must 
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     not exceed <b>100 MHz *</b>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal to 
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>250 mA *</b>
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system LP mode.
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_ulp Switching the System into Ultra Low Power
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before switching into system ULP mode, ensure that the device meets 
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_ulp_limitations. Decrease the clock frequencies, 
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and slow or disable peripherals. Also ensure that appropriate wait state 
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * values are set for the flash. Flash wait states can be set by calling 
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where hfClkFreqMz 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is the frequency of HfClk0 in MHz.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the \ref group_syspm_ulp_limitations are met and appropriate wait 
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * states are set, you must set ULP voltage for the active core regulator:
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO Core Voltage Regulator, call 
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_ULP)
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck Core Voltage Regulator, then call 
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP)
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_ulp_limitations ULP Limitations
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in ULP mode the core regulator voltage is set to <b>0.9 V 
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (nominal)</b> and the following limitations must be meet:
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>50 MHz *</b>, whereas the peripheral and slow clock must not exceed 
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>25 MHz *</b>. 
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     to <b>20 mA*</b>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - the flash write operations are prohibited. The flash works in the 
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     Read-only operation. If Write operations are required, you must switch to
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     the system LP mode.
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * ULP mode.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_sleep Switching CPU into Sleep
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterSleep() switches only the CPU 
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that calls the function into the CPU Sleep power mode. 
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the CPU is put into a 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode, even if they are masked.
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 65


 184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Sleep mode. If 
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the idle loop or polling loop is not used, then it is recommended to use 
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction.
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_deepsleep Switching the System or CPU into Deep Sleep
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterDeepSleep() function switches 
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * only the CPU that calls the function into the CPU Deep Sleep power mode. 
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set the whole system into Deep Sleep power mode, ensure that all CPUs call 
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() function.
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * There are situations when the system does not switch into the Deep Sleep 
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode immediately after the last CPU calls Cy_SysPm_CpuEnterDeepSleep(). 
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system will switch into Deep Sleep mode automatically a short time later, 
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the low power circuits are ready to switch into Deep Sleep. Refer to 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() description for more detail.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the system is put into a 
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Deep Sleep mode, even if they are masked.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter Deep 
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Deep Sleep mode. 
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If the idle loop or polling loop is not used, then it is recommended to use 
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction. 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For single-CPU devices, SysPm functions that return the status of the 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * unsupported CPU always return CY_SYSPM_STATUS_<CPU>_DEEPSLEEP.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_sleep_deepsleep Waking Up from Sleep or Deep Sleep
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For Arm-based devices, an interrupt is required for the CPU to wake up. 
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, one CPU can wake up the other CPU by sending the 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * event instruction. Use the Cy_SysPm_CpuSendWakeupEvent() function.
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_hibernate Switching System to Hibernate
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If you call Cy_SysPm_SystemEnterHibernate() from either CPU, the system will
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be switched into the Hibernate power mode directly, because there is no 
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handshake between CPUs.
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_hibernate Waking Up from Hibernate
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system can wake up from Hibernate mode by configuring the following wakeup
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * sources:
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - Wakeup pin
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - LP Comparator
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - RTC alarm
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - WDT interrupt
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Wakeup is supported from device specific pin(s) with programmable polarity. 
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Additionally, unregulated peripherals can wake the system under some 
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * conditions. For example, a low power comparator can wake the system by 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * comparing two external voltages, but does not support comparison to an 
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internally-generated voltage. The backup power domain remains functional, and 
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * if present it can schedule an alarm to wake the system from Hibernate using 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 66


 241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the RTC. Alternatively, the Watchdog Timer (WDT) can be configured to wake-up 
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system by WDT interrupt. Refer to \ref Cy_SysPm_SetHibernateWakeupSource()
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_reg_curr_mode System Regulator Current Mode
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to system ULP and LP modes, the five different resource 
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power settings can be configured to reduce current consumption:
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Linear regulator low power mode</b>. Can be used only if core current
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    is below the LDO regulator LP threshold.
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>POR/BOD circuit low power mode</b>. Requires compatible power supply 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    stability due to stability increase response time.
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Bandgap reference circuits low power mode</b> (turns on Deep Sleep 
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    Bandgap). Requires design to accept reduced Vref accuracy. Active ref can 
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    be turned off after this feature is enabled.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Reference buffer circuit low power mode</b>. Requires design to accept 
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Vref accuracy.
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Current reference circuit low power mode</b>. Require design to accept 
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Iref accuracy.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * These five sub features can modify both system LP or ULP modes as they are 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * independent from LP/ULP settings. 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their low power modes, the system 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * operates in regulator minimum current mode. In regulator minimum current mode,
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system current consumption is limited to a device-specific value. Refer to 
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device datasheet for the exact current consumption value in regulator 
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * minimum current mode.
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their normal mode, the system operates
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in regulator normal current mode. When regulator normal current mode is set, 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system may operate at device maximum current.
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_min_reg_curr_mode Setting Minimum System Regulator Current Mod
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before setting the regulator minimum current mode ensure that current limits 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are be met. After current limits are met, call the 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_normal_reg_curr_mode Setting Normal System Regulator Current M
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set regulator normal current mode, call the 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. After the function call, 
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the current limits can be increased to a maximum current, depending on what 
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * system power mode is set: LP or ULP.
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_pmic Managing PMIC
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver also provides an API to configure the internal power 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * management integrated circuit (PMIC) controller for an external PMIC that 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * supplies Vddd. Use the API to enable the internal PMIC controller output that
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is routed to pmic_wakeup_out pin, and configure the polarity of the PMIC 
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input (pmic_wakeup_in) that is used to wake up the PMIC.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller is automatically enabled when:
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The PMIC is locked by a call to Cy_SysPm_PmicLock()
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The configured polarity of the PMIC input and the polarity driven to 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   pmic_wakeup_in pin matches.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 67


 298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Because a call to Cy_SysPm_PmicLock() automatically enables the PMIC
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller, the PMIC can remain disabled only when it is unlocked. See Cy_SysPm_PmicUnlock() 
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use Cy_SysPm_PmicIsLocked() to read the current PMIC lock status.
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable the PMIC, use these functions in this order:
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicEnable();
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock();
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, unlock the PMIC. Then call 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable() with the inverted value of the current active state of 
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the pmic_wakeup_in pin.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, assume the current state of the pmic_wakeup_in pin is active low.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, call these functions in this order:
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_HIGH);
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that you do not call Cy_SysPm_PmicLock(), because that automatically 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enables the PMIC.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * While disabled, the PMIC controller is automatically enabled when the 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pmic_wakeup_in pin state is changed into a high state.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller output, call these functions in this order:
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisableOutput();
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicLock() (which automatically enables the PMIC 
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output).
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When disabled, the PMIC controller output is enabled when the PMIC is locked, 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or by calling Cy_SysPm_PmicEnableOutput().
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_backup_domain Managing the Backup Domain
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver provide functions to:
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Configure Supercapacitor charging
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Select power supply source (Vbackup or Vddd) for Vddbackup
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Measure Vddbackup using the ADC
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the \ref group_syspm_functions_backup functions for more detail.
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb SysPm Callbacks
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver handles low power callbacks declared in the application. 
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If there are no callbacks registered, the device executes the power mode 
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition. However, frequently your application firmware must make 
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modifications for low power mode. For example, you may need to disable a 
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * peripheral, or ensure that a message is not being transmitted or received.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable this, the SysPm driver implements a callback mechanism. When a lower
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode transition is about to take place (either entering or exiting 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 68


 355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_system_power_modes), the registered callbacks for that 
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition are called.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver organizes all the callbacks into a linked list. While 
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering a low power mode, SysPm goes through that linked list from first to 
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last, executing the callbacks one after another. While exiting low power mode,
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm goes through that linked list again, but in the opposite direction from 
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last to first. This ordering supports prioritization of callbacks relative to 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the transition event. 
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, the picture below shows three callback structures organized into 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a linked list: myDeepSleep1, myDeepSleep2, myDeepSleep3 (represented with the 
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t configuration structure). Each structure 
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among other fields, the address of the callback function. The code 
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * snippets below set this up so that myDeepSleep1 is called first when entering 
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the low power mode. This also means that myDeepSleep1 will be the last one to 
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execute when exiting the low power mode.
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after registration:
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_after_registration.png
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Your application must register each callback, so that SysPm can execute it. 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Upon registration, the linked list is built by the SysPm driver. Notice 
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the &myDeepSleep1 address in the myDeepSleep1 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t structure. This is filled in by the SysPm driver 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * when you register myDeepSleep1. The order in which the callbacks are 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registered in the application defines the order of their execution by the 
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Call \ref Cy_SysPm_RegisterCallback() to register each 
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function. 
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function is typically associated with a particular driver that 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handles the peripheral. So the callback mechanism enables a peripheral to 
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * prepare for a low power mode (for instance, shutting down the analog part); 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or to perform tasks while exiting a low power mode (like enabling the analog 
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * part again).
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * With the callback mechanism you can prevent switching into a low power mode if
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a peripheral is not ready. For example, driver X is in the process of 
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * receiving a message. In the callback function implementation simply return 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_FAIL in a response to CY_SYSPM_CHECK_READY.
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If success is returned while executing a callback, the SysPm driver calls the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * next callback and so on to the end of the list. If at some point a callback 
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns CY_SYSPM_FAIL in response to the CY_SYSPM_CHECK_READY step, all the 
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks that have already executed are executed in reverse order, with the 
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL mode parameter. This allows each callback to know that 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode has failed. The callback can then undo whatever it
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * did to prepare for low power mode, if required. For example, if the driver X 
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback shut down the analog part, it can re-enable the analog part.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's switch to an example explaining the implementation, setup, and 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registration of three callbacks (myDeepSleep1, myDeepSleep2, myDeepSleep2) in 
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the application. The \ref group_syspm_cb_config_consideration are provided 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the \ref group_syspm_cb_example.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_example SysPm Callbacks Example
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 69


 412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The following code snippets demonstrate how use the SysPm callbacks mechanism.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We will build the prototype for an application that registers 
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * three callback functions:
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep and is associated with peripheral 
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       HW1_address (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> 
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       section to learn about the base hardware address).
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep2 - Handles entering and exiting system Deep Sleep and is 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       associated with peripheral HW2_address.
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We set things up so that the myDeepSleep1 and myDeepSleep2 callbacks do 
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nothing while entering the low power mode (skip on 
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_SKIP_BEFORE_TRANSITION - 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * see \ref group_syspm_cb_function_implementation in 
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration).
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Skipping the actions while entering low power might be useful if you need 
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to save time while switching low power modes. This is because the callback
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function with a skipped mode is not even called avoiding the call and return
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * overhead.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's first declare the callback functions. Each gets the pointer to the 
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure as the argument.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Declaration
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the \ref cy_stc_syspm_callback_params_t structures that we will
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pass to the callback functions. Note that for the myDeepSleep1 and 
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep2 callbacks we also pass pointers to the peripherals related to 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that callback (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about base hardware addresses). 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The configuration considerations related to this structure are described 
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in \ref group_syspm_cb_parameters in \ref group_syspm_cb_config_consideration.
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Params_Declaration
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the actual callback configuration structures. Each of these 
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among the other fields, the address of the 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t we just set up. We will use the callback 
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * configuration structures later in the code to register the callbacks in the 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Again, we set things up so that the myDeepSleep1 and 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep1 callbacks do nothing while entering the low power mode 
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (skip on CY_SYSPM_SKIP_BEFORE_TRANSITION) - see 
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Structure_Declaration
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that in each case the last two fields are NULL. These are fields used by 
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the SysPm driver to set up the linked list of callback functions.
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures are now defined and allocated in the user's 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * memory space:
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_before_registration.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we implement the callback functions. See 
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration for the instructions on how the 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 70


 469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback functions should be implemented.
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Implementation
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Finally, we register the callbacks so that the SysPm driver knows about them. 
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The order in which the callbacks will be called depends upon the order in 
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * which the callbacks are registered. If there are no callbacks registered, 
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device just executes the power mode transition.
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, should
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be registered last. They then modify global resources as the final step before
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode, and restore those resources first, as the system
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns from low power mode.
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_RegisterCallback
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We are done configuring three callbacks. Now the SysPm driver will execute the
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks appropriately whenever there is a call to a power mode transition 
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function: \ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), and 
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate().
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note On a wakeup from hibernate the device goes through a reset, so the 
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks with CY_SYSPM_AFTER_TRANSITION are not executed. Refer to 
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate() for more detail.
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_unregistering in 
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration to learn what to do if you need to 
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * remove the callback from the linked list. You might want to unregister the 
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback for debug purposes.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_flow in \ref group_syspm_cb_config_consideration 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about how the SysPm processes the callbacks.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_config_consideration Callback Configuration Considerations
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_parameters Callback Function Parameters
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>callbackParams</b> parameter of the callback function is a 
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure. The second parameter 
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (<b>mode</b>) is for internal use. In the example code we used a 
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * dummy value CY_SYSPM_CHECK_READY to eliminate compilation errors associated 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * with the enumeration. The driver sets the <b>mode</b> field to the correct 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * value when calling the callback functions (the mode is referred to as step in 
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the \ref group_syspm_cb_function_implementation). The callback function reads 
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the value and executes code based on the mode set by the SysPm driver. 
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>base</b> and <b>context</b> fields are optional and can be NULL. 
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Some drivers require a base hardware address and context to store information 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * about the mode transition. If your callback routine requires access to the 
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver registers or context, provide those values 
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about Base Hardware Address). Be aware of MISRA warnings if these 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * parameters are NULL.
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_structures Callback Function Structure
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For each callback, provide a \ref cy_stc_syspm_callback_t structure. Some 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * fields in this structure are maintained by the driver. Use NULL for 
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>prevItm</b> and <b>nextItm</b>. The driver uses these fields to build a 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 71


 526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * linked list of callback functions.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning The Cy_SysPm_RegisterCallback() function stores a pointer to the 
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure. Do not modify elements of the 
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure after the callback is registered. 
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You are responsible for ensuring that the structure remains in scope. 
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Typically the structure is declared as a global or static variable, or as a 
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * local variable in the main() function.
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_function_implementation Callback Function Implementation
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Every callback function should handle four possible steps (referred to as 
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * "mode") defined in \ref cy_en_syspm_callback_mode_t :
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_READY - Check if ready to enter a power mode.
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_BEFORE_TRANSITION - The actions to be done before entering 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      the low power mode.
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_AFTER_TRANSITION - The actions to be done after exiting the 
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      low power mode.
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_FAIL - Roll back any actions performed in the callback 
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      executed previously with CY_SYSPM_CHECK_READY.
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function can skip steps (see \ref group_syspm_skip_callback_modes).
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In our example myDeepSleep1 and myDeepSleep2 callbacks do nothing while 
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode (skip on CY_SYSPM_BEFORE_TRANSITION). If there is
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * anything preventing low power mode entry - return CY_SYSPM_FAIL in response to
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY in your callback implementation. Note that the callback 
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should return CY_SYSPM_FAIL only in response to CY_SYSPM_CHECK_READY. The 
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function should always return CY_SYSPM_PASS for other modes: 
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL, CY_SYSPM_BEFORE_TRANSITION, and CY_SYSPM_AFTER_TRANSITION
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see \ref group_syspm_cb_flow).
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_flow Callbacks Execution Flow
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section explains what happens during a power transition, when callbacks 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are implemented and set up correctly. The following discussion assumes:
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All required callback functions are defined and implemented
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All cy_stc_syspm_callback_t structures are filled with required values
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All callbacks are successfully registered 
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * User calls one of the power mode transition functions: \ref Cy_SysPm_CpuEnterSleep(), 
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_CpuEnterDeepSleep(), \ref Cy_SysPm_SystemEnterUlp(), 
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterLp(), or \ref Cy_SysPm_SystemEnterHibernate(). 
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * It calls each callback with the mode set to CY_SYSPM_CHECK_READY. This 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * triggers execution of the code for that mode inside of each user callback.
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The intent of CY_SYSPM_CHECK_READY is to only signal if the resources is ready
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to transition. Ideally, no transition changes should be made at this time. 
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In some cases a small change may be required. For example a communication 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * resource callback may set a flag telling firmware not to start any new 
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition.
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If that process is successful for all callbacks, then 
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() calls each callback with the mode set to 
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_BEFORE_TRANSITION. This triggers execution of the code for that mode 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * inside each user callback. We then enter the low power mode after all callback
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are executes.
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 72


 583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When exiting the low power mode, the SysPm driver executes 
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() again. This time it calls each callback in 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with the mode set to CY_SYSPM_AFTER_TRANSITION. This triggers 
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of the code for that mode inside each user callback. The final 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of callbacks depends on the low power mode in which callbacks were 
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * called:
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For CPU Sleep or Deep Sleep power modes, the CY_SYSPM_AFTER_TRANSITION mode 
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   is called after the CPU wakes from Sleep or Deep Sleep.
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system Hibernate, the CY_SYSPM_AFTER_TRANSITION mode is not executed 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   because the device reboots after the wakeup from the Hibernate.
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system LP and ULP modes, after the CY_SYSPM_AFTER_TRANSITION mode was 
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   called the system remains in the new power mode: LP or ULP.
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback can return CY_SYSPM_FAIL only while executing the 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY mode. If that happens, then the remaining callbacks are 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * not executed. Any callbacks that have already executed are called again, in 
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with CY_SYSPM_CHECK_FAIL. This allows the system to return to 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the previous state. If a callback returns a fail then any of the functions 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (\ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), or 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate()) that attempt to switch the device into 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a low power mode will also return CY_SYSPM_FAIL.
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should be registered last. They then modify global resources as the final 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * step before entering the low power mode, and restore those resources first, 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * as the system returns from low power mode.
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_unregistering Callback Unregistering
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unregistering the callback might be useful when you need to dynamically manage
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the callbacks.
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_UnregisterCallback
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after myDeepSleep2 callback is unregistered:
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_unregistration.png
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_definitions Definitions
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Term</th>
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Definition</th>
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LDO</td>
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Low dropout linear regulator. The functions that manage this 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_ldo under 
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SIMO Buck</td>
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor multiple Output Buck regulator, referred as 
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 73


 640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SISO Buck</td>
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor single output Buck regulator, referred as 
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>PMIC</td>
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Power management integrated circuit. The functions that manage this 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_pmic</td>
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LP</td>
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System low power mode. See the \ref group_syspm_switching_into_lp 
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         section for details.</td>
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>ULP</td>
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System ultra low power mode. See the 
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_switching_into_ulp section for details.</td>
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_more_information More Information
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information on the SysPm driver,
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * refer to the technical reference manual (TRM).
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_MISRA MISRA-C Compliance
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver does not have any specific deviations.
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_changelog Changelog
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="6">4.0</td>
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Flattened the organization of the driver source code into the single source directory an
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Driver library directory-structure simplification.</td>
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Changed power modes names. See \ref group_syspm_system_power_modes.
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Renamed the following functions: 
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Sleep to Cy_SysPm_CpuEnterSleep
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_DeepSleep to Cy_SysPm_CpuEnterDeepSleep
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Hibernate to Cy_SysPm_SystemEnterHibernate
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_SleepOnExit to Cy_SysPm_CpuSleepOnExit
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_EnterLowPowerMode to Cy_SysPm_SystemSetMinRegulatorCurrent
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 74


 697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_ExitLowPowerMode to Cy_SysPm_SystemSetNormalRegulatorCurrent
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_IsLowPower to Cy_SysPm_IsSystemUlp
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          For all renamed functions, added BWC macros to simplify migration.
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Device power modes simplification</td>
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Added the following functions:
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoSetMode
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoGetMode
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_WriteVoltageBitForFlash
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SaveRegisters
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_RestoreRegisters
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_CpuSendWakeupEvent
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemIsMinRegulatorCurrentSet
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterLp
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterUlp
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IsSystemLp
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added new functionality to configure device power modes</td>
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Callback mechanism changes:
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Removed the limitation for numbers of registered callbacks. Previously it 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            was possible to register up to 32 callbacks. Now the maximum registered 
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            callbacks is not limited by the SysPm driver.
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Internal enhancement in callback execution flow.
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - <b>Changes with BWC issues</b>:
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Removed the <b>mode</b> element from cy_stc_syspm_callback_params_t
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               structure. Now this element is a separate parameter in the 
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               callback function.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Changed the interface of the callback function, 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               added the cy_en_syspm_callback_mode_t mode parameter:
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - was cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - now cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *                 cy_en_syspm_callback_mode_t mode);
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Callback mechanism enhancements</td>
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added register access layer. Use register access macros instead
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         of direct register access using dereferenced pointers.</td>
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Makes register access device-independent, so that the PDL does 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         not need to be recompiled for each supported part number.</td>
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added \ref group_syspm_migration_guide_for_syspm_4_0.</td>
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Provided a guidance for migrating to the latest SysPm driver version</td>
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="2">3.0</td>
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed three functions:
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm4IsLowPower
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm0IsLowPower
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 75


 754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IoFreeze
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the following macros:
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM0_LOWPOWER
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM4_LOWPOWER
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the two functions Cy_SysPm_Cm4IsLowPower, 
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Cy_SysPm_Cm0IsLowPower because low power mode is related to the 
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         device and not to the CPU.
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The function Cy_SysPm_IsSystemUlp must be used instead of these two 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         functions.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed Cy_SysPm_IoFreeze because the are no known use cases with IOs 
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes, except Hibernate. In Hibernate power mode, the
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         IOs are frozen automatically.
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Corrected the syspm callback mechanism behavior. Now callbacks with 
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode are executed from the last registered
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         to the first registered. Previously callbacks with 
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode were executed from last executed to 
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         the first registered.
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Corrected the syspm callbacks execution sequence</td>
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.21</td>
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed saving/restoring the SysClk measurement counters while 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         in Deep Sleep routine
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed possible corruption of SysClk measurement counters if the 
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         core wakes up from the Deep Sleep.
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.20</td>
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added support for changing core voltage when the protection context
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is other that zero. Such support is available only for devices 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            that support modifying registers via syscall.
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * For preproduction PSoC 6 devices the changing core voltage
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is prohibited when the protection context is other than zero.
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated the following functions. They now have a 
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            \ref cy_en_syspm_status_t return value and use a syscall:
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_LdoSetVoltage
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckSetVoltage1
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckEnable
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            No backward compatibility issues.
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added new CY_SYSPM_CANCELED element in 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            the \ref cy_en_syspm_status_t.
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 76


 811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation updates.
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added warning that
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) is not 
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            supported by hardware.
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added support for changing the core voltage in protection context 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         higher than zero (PC > 0).
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Documentation update and clarification
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.10</td>
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed names for all Backup, Buck-related functions, defines, 
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            and enums
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed next power mode function names:
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_EnterLowPowerMode
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ExitLpMode
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_SetHibWakeupSource
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ClearHibWakeupSource
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_GetIoFreezeStatus
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed following enumeration names:
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_hib_wakeup_source_t
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage1_t
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage2_t
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated Power Modes documentation section
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added Low Power Callback Managements section
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation edits 
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Improvements made based on usability feedback
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation update and clarification
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.0</td>
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Enhancement and defect fixes:
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added input parameter(s) validation to all public functions
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Removed "_SysPm_" prefixes from the internal functions names
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Changed the type of elements with limited set of values, from 
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           uint32_t to enumeration
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Enhanced syspm callback mechanism
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added functions to control:
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Power supply for the Vddbackup
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Supercapacitor charge
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Vddbackup measurement by ADC
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>1.0</td>
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Initial version</td>
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 77


 868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_migration_guide_for_syspm_4_0 Migration Guide: Moving to SysPm v4.0
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section provides a guideline to migrate from v2.21 to v4.0 of the SysPm 
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver.
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_intro Introduction
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If your application currently uses SysPm v2.21 APIs, you must
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * migrate to SysPm v4.0 so that your application continues to operate.
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Take a few minutes to review the following information:
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The APIs related to PSoC 6 \ref group_syspm_power_modes are changed. Old 
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power modes APIs function names are now deprecated and should not be used 
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   in new applications.
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The \ref group_syspm_cb mechanism is changed. The mode element is removed 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   from cy_stc_syspm_callback_params_t structure. Now this element is a 
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   separate parameter in the callback function.
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_names Migrating to new power modes APIs.
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The table below shows the new APIs names that should be used in the 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * application instead of old names:
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 API name</th><th>SysPm v4.0 API name</th><th>Comment</th></tr>
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Sleep</td>
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterSleep</td>
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_DeepSleep</td>
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterDeepSleep</td>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Hibernate</td>
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemEnterHibernate</td>
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_SleepOnExit</td>
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuSleepOnExit</td>
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IsLowPower</td>
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_IsSystemUlp</td>
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Now this function checks whether the device is in ULP mode</td>
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_EnterLowPowerMode</td>
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetMinRegulatorCurrent</td>
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead </td>
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </tr>
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 78


 925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_ExitLowPowerMode</td>
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetNormalRegulatorCurrent</td>
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead</td>
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm4IsLowPower</td>
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm0IsLowPower</td>
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IoFreeze</td>
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because there are no known use cases to
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes other than Hibernate</td>
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to renamed power modes APIs, the following defines and enum 
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * elements names are changed:
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 defines</th><th>SysPm v4.0 defines</th><th>Comment</th></tr>
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ENTER_LP_MODE</td>
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ULP</td>
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_EXIT_LP_MODE</td>
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_LP</td>
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_LOWPOWER</td>
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_ULP</td>
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Status define, renamed to align new power modes names 
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and abbreviations</td>
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_callbacks Migrating to SysPm v4.0 callbacks
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Review this section if your application is using the syspm callback mechanism.
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To migrate to SysPm v4.0 callbacks you need to perform the following steps:
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Remove mode element from all \ref cy_stc_syspm_callback_params_t 
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    structures defined in your application. In SysPm v2.21 this structure is:
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 79


 982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        CY_SYSPM_CHECK_READY, 
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    In SysPm v4.0 this structure should be:
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Update all defined syspm callback function prototypes to have two 
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    parameters instead of one. The SysPm v2.21 callback function prototype is:
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams);
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    The SysPm v4.0 callback function prototype should be:
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callba
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Change the syspm callback function implementation to not use a mode
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    value as an element of the callbackParams structure, but, as separate 
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    function parameter:
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v2.21 callback function implementation:
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(callbackParams->mode)
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v4.0 callback function implementation:
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callbac
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(mode)
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 80


1039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the changes above are done, you have successfully migrated to SysPm v4.0.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not forget to review newly added functionality for SysPm v4.0 in the 
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_changelog.
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_macros Macros
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_functions Functions
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     \defgroup group_syspm_functions_general        General
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power          Power Modes
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power_status   Power Status
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_iofreeze       I/Os Freeze
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_core_regulators    Core Voltage Regulation 
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_ldo      LDO
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_buck     Buck
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \}
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_pmic       PMIC
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_backup     Backup Domain
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_callback   Low Power Callbacks
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \}
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_structures Data Structures
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_enumerates Enumerated Types
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #if !defined (CY_SYSPM_H)
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_H
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stdbool.h>
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stddef.h>
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device.h"
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device_headers.h"
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_syslib.h"
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #ifdef __cplusplus
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** extern "C" {
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #endif
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Register Constants
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver major version */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MAJOR       4
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver minor version */
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MINOR       0
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** SysPm driver identifier */
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_ID                      (CY_PDL_DRV_ID(0x10U))
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 81


1096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Internal Defines
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \cond INTERNAL */
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_SetHibernateWakeupSource() and for Cy_SysPm_ClearHibern
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAKE_UP_SOURCE_VALID(wakeupSource)   (0UL == ((wakeupSource) & \
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((uint32_t) ~(CY_SYSPM_HIB_WAKEUP_SOURSE_M
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_PmicDisable() function */
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_POLARITY_VALID(polarity)            (((polarity) == CY_SYSPM_PMIC_POLARITY_LOW)
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((polarity) == CY_SYSPM_PMIC_POLARITY_HIGH
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage1() function */
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE1_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_0
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_1
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage2() function */
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE2_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckIsOutputEnabled() function */
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_OUTPUT_VALID(output)           (((output) == CY_SYSPM_BUCK_VBUCK_1) || \
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((output) == CY_SYSPM_BUCK_VRF))
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetVoltage() function */
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_VOLTAGE_VALID(voltage)          (((voltage) == CY_SYSPM_LDO_VOLTAGE_0_9V) |
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_LDO_VOLTAGE_1_1V))
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_TYPE_VALID(type)           (((type) == CY_SYSPM_SLEEP) || \
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_DEEPSLEEP) || \
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_HIBERNATE) || \
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_ULP) || \
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_LP))
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_MODE_VALID(mode)           (((mode) == CY_SYSPM_CHECK_READY) || \
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_CHECK_FAIL) || \
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_BEFORE_TRANSITION) || 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_AFTER_TRANSITION))
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_CpuEnterSleep() and for Cy_SysPm_CpuEnterDeepSleep() fu
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAIT_FOR_VALID(waitFor)             (((waitFor) == CY_SYSPM_WAIT_FOR_INTERRUPT)
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((waitFor) == CY_SYSPM_WAIT_FOR_EVENT))
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSetSupply() function */
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_VDDBACKUP_VALID(vddBackControl)      (((vddBackControl) == CY_SYSPM_VDDBACKUP_D
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 82


1153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           ((vddBackControl) == CY_SYSPM_VDDBACKUP_V
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSuperCapCharge() function */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_SC_CHARGE_KEY_VALID(key)            (((key) == CY_SYSPM_SC_CHARGE_ENABLE) || \
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((key) == CY_SYSPM_SC_CHARGE_DISABLE))
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetMode() function */
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_MODE_VALID(key)            (((mode) == CY_SYSPM_LDO_MODE_DISABLED) || \
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_NORMAL) || \
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_MIN))
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_WriteVoltageBitForFlash() function */
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BIT_FOR_FLASH_VALID(value)     (((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_ULP) || 
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_LP))
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the unlock value for the PMIC functions */
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PMIC_UNLOCK_KEY                    (0x3AU)
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the first wakeup pin bit used in the
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SetHibernateWakeupSource() function
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POS                (1UL)
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the second wakeup pin bit 
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POS                (2UL)
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator bit 
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POS             (4UL)
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define for the second LPComparator bit 
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POS             (8UL)
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator value 
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second LPComparator value 
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first wake-up pin value 
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 83


1210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second wake-up pin value used 
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in the Cy_SysPm_SetHibernateWakeupSource() function
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first LPComparator polarity configuration */
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POLARITY_HIGH_MASK    \
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second LPComparator polarity configuration */
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POLARITY_HIGH_MASK    \
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first wake-up pin polarity configuration */
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POLARITY_HIGH_MASK    \
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second wake-up pin polarity configuration */
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POLARITY_HIGH_MASK    \
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Internal macro of all possible wakeup sources from hibernate power mode */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_SOURSE_MASK    (CY_SYSPM_HIBERNATE_LPCOMP0_HIGH | CY_SYSPM_HIBERNATE_LP
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_RTC_ALARM    | CY_SYSPM_HIBERNATE_WD
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_PIN0_HIGH    | CY_SYSPM_HIBERNATE_PI
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  LDO
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK    (SRSS_PWR_CTL_LINREG_LPMODE_Msk | CY_SYSPM_
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  Buck
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_BUCK_MASK    (SRSS_PWR_CTL_PORBOD_LPMODE_Msk |\
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_ACT_REF_DIS_Msk |\
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_VREFBUF_LPMODE_Msk |\
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_IREF_LPMODE_Msk)
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \endcond */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_return_status The Power Mode Status Defines
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the CPU and system power modes status.
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Active mode */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_ACTIVE       (0x01U)
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Sleep mode */
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_SLEEP        (0x02U)
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 84


1267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Deep Sleep mode */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_DEEPSLEEP    (0x04U)
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is CPU Active mode */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_ACTIVE       ((uint32_t) 0x01U << 8U)
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Sleep mode */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_SLEEP        ((uint32_t) 0x02U << 8U)
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Deep Sleep mode */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_DEEPSLEEP    ((uint32_t) 0x04U << 8U)
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is Low Power mode */
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_LP        (0x80U)
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is in Ultra Low Power mode */
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_ULP       ((uint32_t) 0x08U << 8U)
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_return_status */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Configuration Structures
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_enumerates
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The SysPm function return value status definitions. */
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SUCCESS        = 0x0U,                                         /**< Successful. */
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BAD_PARAM      = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x01U,    /**< One or more invali
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_TIMEOUT        = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x02U,    /**< A time-out occurre
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_INVALID_STATE  = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x03U,    /**< The operation is n
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                                                  improper state. */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CANCELED       = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x04U,    /**< Operation canceled
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FAIL           = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0xFFU     /**< Unknown failure. *
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_status_t;
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to initialize the functions wait action. The wait actions can be - 
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * an interrupt or an event. Refer to the CMSIS for WFE and WFI instruction explanations.
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_INTERRUPT,    /**< Wait for an interrupt. */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_EVENT         /**< Wait for an event. */
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_waitfor_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to configure wakeup sources for the System Hibernate 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode.
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 85


1324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp0. */
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK,
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp0. */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp1. */
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK,
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp1. */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the RTC alarm as wakeup source. */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_RTC_ALARM = SRSS_PWR_HIBERNATE_MASK_HIBALARM_Msk,
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the WDT interrupt as wakeup source. */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_WDT = SRSS_PWR_HIBERNATE_MASK_HIBWDT_Msk,
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the first wakeup-pin. See device datasheet for specific pin
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_LOW  = CY_SYSPM_HIB_WAKEUP_PIN0_MASK,
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the first wakeup-pin. See device datasheet for specific pi
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_HIGH = CY_SYSPM_HIB_WAKEUP_PIN0_MASK | CY_SYSPM_HIB_WAKEUP_PIN0_POLARIT
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the second wakeup-pin. See device datasheet for specific pi
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_LOW  = CY_SYSPM_HIB_WAKEUP_PIN1_MASK,
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the second wakeup-pin. See device datasheet for specific p
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_HIGH = CY_SYSPM_HIB_WAKEUP_PIN1_MASK | CY_SYSPM_HIB_WAKEUP_PIN1_POLARIT
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_hibernate_wakeup_source_t;
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select LDO regulator output voltage. */
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_ULP  = 0U,    /**< System ULP nominal LDO voltage. 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_LP   = 1U,    /**< System LP nominal LDO voltage.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_0_9V = 0U,    /**< 0.9 V nominal LDO voltage */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_1_1V = 1U     /**< 1.1 V nominal LDO voltage */
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_voltage_t;
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the LDO regulator operating mode. */
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_DISABLED = 0U,    /**< Disables the LDO. */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_NORMAL   = 1U,    /**< Sets normal current mode. See device datasheet for 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific maximum current limit. */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_MIN      = 2U     /**< Sets minimum current mode. See device datasheet for 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific  current limit.  */
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_mode_t;
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  This enumeration is used to select the output voltage for the Buck regulator output 1.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 86


1381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP  = 0x02U,    /**< System ULP nominal Buck voltage. 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_LP   = 0x05U,    /**< LP nominal Buck voltage. 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_0_9V = 0x02U,    /**< 0.9 V nominal Buck voltage */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_1_1V = 0x05U     /**< 1.1 V nominal Buck voltage */
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage1_t;
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the Buck regulator outputs. */
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VBUCK_1 = 0x0U,    /**< Buck output 1 Voltage (Vbuck1). Typically used to 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the PSoC digital core logic. */
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VRF                /**< Buck out 2 Voltage (Vbuckrf). Typically used to 
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the BLE radio logic. */
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_out_t;
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the output voltage for the Buck regulator
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2, which can source the BLE radio.
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_15V = 0U,    /**< 1.15 V nominal voltage. */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_2V  = 1U,    /**< 1.20 V nominal voltage. */
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_25V = 2U,    /**< 1.25 V nominal voltage. */
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_3V  = 3U,    /**< 1.3 V nominal voltage.  */
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_35V = 4U,    /**< 1.35 V nominal voltage. */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_4V  = 5U,    /**< 1.4 V nominal voltage. */
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_45V = 6U,    /**< 1.45 V nominal voltage. */
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_5V  = 7U     /**< 1.5 V nominal voltage. */
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage2_t;
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to set the polarity for the PMIC input. The PMIC output is 
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * automatically enabled when the configured polarity of the PMIC input and the logic level
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driven to the pmic_wakeup_in pin match.
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not use CY_SYSPM_PMIC_POLARITY_LOW as it is not supported by hardware.
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_LOW   = 0U,    /**< Set active low logic level for the PMIC input. */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_HIGH  = 1U     /**< Set active high logic level for the PMIC input. */
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_pmic_wakeup_polarity_t;
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration selects Vbackup or Vddd to supply Vddbackup. */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_DEFAULT         = 0U,    /**< Logic automatically selects Vddd if present or
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      Vbackup if Vddd is not present to supply Vddba
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_VBACKUP         = 2U     /**< Sets only Vbackup to supply Vddbackup */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_vddbackup_control_t;
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration enables supercapacitor charging. */
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 87


1438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_ENABLE     = 0x3CU,    /**< Enables supercapacitor charging */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_DISABLE    = 0x00U     /**< Disables supercapacitor charging */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_sc_charge_key_t;
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration configures the flash voltage bit for different system power modes. */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_LP  = 0U,    /**< Set the flash voltage bit for system LP mode */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_ULP = 1U,    /**< Set the flash voltage bit for system ULP mode */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_flash_voltage_bit_t;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the low power mode for which the
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * appropriate registered callback handler will be executed. For example,
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the registered callback of the type CY_SYSPM_SLEEP will be executed while
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switching into the Sleep power mode.
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SLEEP      = 0U,    /**< The Sleep enum callback type */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_DEEPSLEEP  = 1U,    /**< The Deep Sleep enum callback type */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE  = 2U,    /**< The Hibernate enum callback type */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LP         = 3U,    /**< The Low Power enum callback type */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_ULP        = 4U     /**< The Ultra Low Power enum callback type */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_type_t;
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration specifies the associated callback mode. This enum defines the callback mode. *
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_READY        = 0x01U,    /**< Callbacks with this mode are executed before enter
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. The purpose of his callback functi
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if the device is ready to enter the low power mode
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_FAIL         = 0x02U,    /**< Callbacks with this mode are executed after the CY
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_FAIL. 
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  The callback with the CY_SYSPM_CHECK_FAIL mode sho
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  actions performed in the previously executed callb
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  CY_SYSPM_CHECK_READY */
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BEFORE_TRANSITION  = 0x04U,    /**< Callbacks with this mode are executed after the CY
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_SUCCESS.
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  Performs the actions to be done before entering in
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_AFTER_TRANSITION   = 0x08U     /**< Performs the actions to be done after exiting the 
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if entered. */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_mode_t;
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_enumerates */
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_skip_callback_modes Defines to skip the callbacks modes
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the SysPm callbacks modes that can be skipped during execution.
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 88


1495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information about callbacks modes, refer 
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to \ref cy_en_syspm_callback_mode_t.
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_READY                   (0x01U)   /**< Define to skip check ready mode 
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_FAIL                    (0x02U)   /**< Define to skip check fail mode i
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_BEFORE_TRANSITION             (0x04U)   /**< Define to skip before transition
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_AFTER_TRANSITION              (0x08U)   /**< Define to skip after transition 
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_skip_callback_modes */
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_structures
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The structure contains syspm callback parameters */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *base;         /**< Base address of a HW instance, matches name of the driver in
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              the API for the base address. Can be undefined if not required. Base a
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              required for the SysPm driver as the device has only one set of power 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *context;      /**< Context for the handler function. This item can be 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              skipped if not required. Can be undefined if not required. */
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_params_t;
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The type for syspm callbacks */
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef cy_en_syspm_status_t (*Cy_SysPmCallback) (cy_stc_syspm_callback_params_t *callbackParams, c
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Structure with syspm callback configuration elements */
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct cy_stc_syspm_callback
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     Cy_SysPmCallback callback;                         /**< The callback handler function. */
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_en_syspm_callback_type_t type;                  /**< The callback type, see \ref cy_en_syspm
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t skipMode;                                 /**< The mask of modes to be skipped during 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             execution, see \ref group_syspm_skip_ca
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             corresponding callback mode won't execu
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             appropriate define is set. These values
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             If all modes are required to be execute
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             should be equal to zero. Skipping unnee
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             power mode transitions by skipping unne
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_stc_syspm_callback_params_t *callbackParams;    /**< The address of a cy_stc_syspm_callback_
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             the callback is executed with these par
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *prevItm;             /**< The previous list item. This element sh
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             usage to link this structure to the nex
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             structure. It will be updated during ca
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             registration. Do not modify this elemen
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *nextItm;             /**< The next list item. This element should
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             link this structure to the previous reg
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             It will be updated during callback regi
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             modify this element at run-time. */
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_t;
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 89


1552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This internal structure stores non-retained registers in the system Deep Sleep
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode. On wakeup from system Deep Sleep, these registers are restored.
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_UDBIF_BANK_CTL_REG;    /**< UDB interface control register */
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MDCLK_EN_REG;    /**< UDB bank MDCLK_EN register */
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MBCLK_EN_REG;    /**< UDB bank MBCLK_EN register */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_L_REG;    /**< UDB bank BOTSEL_L register */
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_U_REG;    /**< UDB bank BOTSEL_U register */
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN0_REG;    /**< UDB bank QCLK_EN0 register */
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN1_REG;    /**< UDB bank QCLK_EN1 register */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN2_REG;    /**< UDB bank QCLK_EN2 register */
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_backup_regs_t;
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_structures */
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_general
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_WriteVoltageBitForFlash(cy_en_syspm_flash_voltage_bit_t value);
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SaveRegisters(cy_stc_syspm_backup_regs_t *regs);
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_RestoreRegisters(cy_stc_syspm_backup_regs_t const *regs);
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_general */
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void);
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void);
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void);
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void);
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void);
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void);
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void);
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** uint32_t Cy_SysPm_ReadStatus(void);
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterSleep(cy_en_syspm_waitfor_t waitFor);
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterDeepSleep(cy_en_syspm_waitfor_t waitFor);
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 90


1609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterLp(void);
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterUlp(void);
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterHibernate(void);
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SetHibernateWakeupSource(uint32_t wakeupSource);
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_ClearHibernateWakeupSource(uint32_t wakeupSource);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetMinRegulatorCurrent(void);
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetNormalRegulatorCurrent(void);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void);
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_CpuSleepOnExit(bool enable);
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void);
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_IoUnfreeze(void);
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void);
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetVoltage(cy_en_syspm_ldo_voltage_t voltage);
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void);
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void);
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetMode(cy_en_syspm_ldo_mode_t mode);
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_ldo_mode_t Cy_SysPm_LdoGetMode(void);
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void);
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity); 
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsEnabled(void);
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void);
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void);
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void); 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsOutputEnabled(void);
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void);
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void);
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsLocked(void);
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_pmic */
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_backup
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSetSupply(cy_en_syspm_vddbackup_control_t vddBackControl);
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 91


1666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_vddbackup_control_t Cy_SysPm_BackupGetSupply(void);
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupEnableVoltageMeasurement(void);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupDisableVoltageMeasurement(void);
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSuperCapCharge(cy_en_syspm_sc_charge_key_t key);
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_backup */
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckEnable(cy_en_syspm_buck_voltage1_t voltage);
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void);
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckSetVoltage1(cy_en_syspm_buck_voltage1_t voltage);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void);
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckSetVoltage2(cy_en_syspm_buck_voltage2_t voltage, bool waitToSettle);
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void);
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckEnableVoltage2(void);
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void);
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl);
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void);
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_BuckIsOutputEnabled(cy_en_syspm_buck_out_t output);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_callback
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_RegisterCallback(cy_stc_syspm_callback_t *handler);
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_UnregisterCallback(cy_stc_syspm_callback_t const *handler);
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_ExecuteCallback(cy_en_syspm_callback_type_t type, cy_en_syspm_callbac
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_callback */
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsActive
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if CM4 is in CPU Active mode.
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Active mode.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Active mode.
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsActive
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void)
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_ACTIVE) != 0U);
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 92


1723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsSleep
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in CPU Sleep mode.
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM4 is in CPU Sleep mode.
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Sleep mode.
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsSleep
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void)
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_SLEEP) != 0U);
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsDeepSleep
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in the CPU Deep Sleep mode.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Deep Sleep mode.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not CPU in Deep Sleep mode.
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsDeepSleep
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void)
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_DEEPSLEEP) != 0U);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsActive
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Active mode.
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsActive
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void)
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_ACTIVE) != 0U);
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 93


1780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsSleep
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Sleep mode.
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsSleep
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void)
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_SLEEP) != 0U);
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsDeepSleep
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Deep Sleep mode.
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Deep Sleep mode
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Deep Sleep mode
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsDeepSleep
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void)
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_DEEPSLEEP) != 0U);
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemLp
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in LP mode.
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in LP mode.
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is not in LP mode.
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemLp
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 94


1837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void)
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_LP) != 0U);
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemUlp
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in ULP mode.
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in ULP mode.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is is not ULP mode.
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemUlp
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void)
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_ULP) != 0U);
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_CpuSendWakeupEvent
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sends the SEV (Send Event) ARM instruction to the system.
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_CpuSendWakeupEvent
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void)
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     __SEV();
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_SystemIsMinRegulatorCurrentSet
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Check whether the system regulator is set to minimal current mode.
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True - system is in regulator minimum current mode.
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False - system is in normal regulator current mode.
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 95


1894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_SystemSetNormalRegulatorCurrent
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void)
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t regMask = Cy_SysPm_LdoIsEnabled() ? CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK : CY_
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((SRSS_PWR_CTL & regMask) == regMask);
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsEnabled
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Get the current status of the Buck regulator.
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the Buck regulator is enabled.
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if it is disabled.
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void)
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_EN, SRSS_PWR_BUCK_CTL));
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage1
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current nominal output 1 voltage (Vccbuck1) of 
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Buck regulator.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 1 voltage (Vccbuck1) can be different from
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the nominal voltage because the actual voltage value depends on conditions 
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage 1 (Vccbuck1) of the Buck regulator.
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_buck_voltage1_t.
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void)
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 96


1951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal;
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_OUT1_SEL, SRSS_PWR_BUCK_CTL);
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage1_t) retVal);
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage2
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output 2 nominal voltage (Vbuckrf) of the SIMO 
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Buck regulator.
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 2 voltage (Vbuckrf) can be different from the 
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the Buck SIMO regulator output 2 
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * voltage (Vbuckrf). See \ref cy_en_syspm_buck_voltage2_t.
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function returns zero for devices without a SIMO Buck regulator.
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet about information on whether device contains 
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a SIMO Buck.
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckGetVoltage2
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void)
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal = 0UL;
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_SEL, SRSS_PWR_BUCK_CTL2);
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage2_t) retVal);
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckDisableVoltage2
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the output 2 voltage (Vbuckrf) of the SIMO Buck regulator. The 
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2 voltage (Vbuckrf) of the Buck regulator is typically used to supply 
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the BLE radio.
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The function does not have effect, if the Buck regulator is
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switched off.
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note If you are switching the voltage supply source for BLE radio, ensure 
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that the new voltage supply for the BLE HW block is settled 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 97


2008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and is stable before calling the Cy_SysPm_BuckDisableVoltage2() function.
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is applicable for devices with the SIMO Buck regulator.
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckDisableVoltage2
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         /* Disable the Vbuck2 output */
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_EN, 1U);
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckSetVoltage2HwControl
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sets the hardware control for SIMO Buck output 2 (Vbuckrf).
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param hwControl
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables/disables hardware control for the SIMO Buck output 2.
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function does not have an effect if SIMO Buck regulator is disabled.
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckSetVoltage2HwControl
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl)
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool isBuckEnabled = Cy_SysPm_BuckIsEnabled();
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if ((0U != cy_device->sysPmSimoPresent) && isBuckEnabled)
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         if(hwControl)
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 |= _VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         else
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 98


2065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsVoltage2HwControlled
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Returns the hardware control state for Buck output 2 (Vbuckrf).
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if HW control is set.
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if FW control is set for the Buck output 2.
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to device datasheet about information if device contains 
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SIMO Buck.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckIsVoltage2HwControlled
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void)
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool retVal = false;
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, SRSS_PWR_BUCK_CTL2));
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return retVal;
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoGetVoltage
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output voltage value of the core LDO regulator.
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device Vccd voltage can be different from the 
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including the load current.
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 99


2122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the LDO. See \ref cy_en_syspm_ldo_voltage_t.
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void)
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t curVoltage;
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     curVoltage = _FLD2VAL(SRSS_PWR_TRIM_PWRSYS_CTL_ACT_REG_TRIM, SRSS_PWR_TRIM_PWRSYS_CTL);
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((curVoltage == (SFLASH_LDO_0P9V_TRIM)) ? CY_SYSPM_LDO_VOLTAGE_ULP : CY_SYSPM_LDO_VOLTAG
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoIsEnabled
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Reads the current status of the core LDO regulator.
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True means the LDO is enabled. 
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False means it is disabled.
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void)
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((0U != _FLD2VAL(SRSS_PWR_CTL_LINREG_DIS, SRSS_PWR_CTL)) ? false : true);
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IoIsFrozen
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks whether IOs are frozen.
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return 
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if IOs are frozen.
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if IOs are unfrozen.
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IoUnfreeze
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void)
2178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 100


2179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_HIBERNATE_FREEZE, SRSS_PWR_HIBERNATE));
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
2185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnable
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present).
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in specific devices, refer to the appropriate device TRM.
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is not effective when the PMIC controller is locked. Call 
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void)
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL =
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) |
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U) |
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U);
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisable
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disable the external PMIC controller that supplies Vddd (if present).
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function does not affect the PMIC controller output pin. The PMIC 
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input pin has programmable polarity to 
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enable the external PMIC using different input polarities. The PMIC controller
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is automatically enabled when the input pin polarity and configured polarity 
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * match. This function is not effective when the active level of PMIC controller
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * input pin is equal to the configured PMIC controller polarity.
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param polarity
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Configures the PMIC controller wakeup input pin to be active low or active 
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * high. The PMIC will be automatically enabled when the set polarity and the 
2235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active level of PMIC input pin match. 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 101


2236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_pmic_wakeup_polarity_t.
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller will be enabled automatically by any of RTC alarm or 
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PMIC wakeup events, regardless of the PMIC controller lock state.
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before disabling the PMIC controller, ensure that PMIC input and PMIC output 
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pins are configured correctly to enable expected PMIC operation.
2244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC is enabled automatically when you call Cy_SysPm_PmicLock(). 
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To keep the external PMIC disabled, the PMIC controller must remain unlocked.
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) because this 
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is not supported by hardware.
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate 
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * device TRM.
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisable
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity)
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_ASSERT_L3(CY_SYSPM_IS_POLARITY_VALID(polarity));
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (_VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | 
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****          _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_POLARITY, (uint32_t) polarity)) &
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U));
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicAlwaysEnable
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present) and force 
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active. This is a Write once API. It ensures that the PMIC controller cannot 
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be disabled or polarity changed until a next device reset.
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate device TRM.
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicAlwaysEnable
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void)
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL |= _VAL2FLD(BACKUP_PMIC_CTL_PMIC_ALWAYSEN, 1U);
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 102


2293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnableOutput
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables the PMIC controller output pin. 
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnableOutput
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void)
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL |=
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | _VAL2FLD(BACKUP_PMIC_CTL_PMIC_
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisableOutput
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the PMIC controller output pin. 
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the PMIC controller output pin is disabled and is unlocked, the PMIC 
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output pin can be used for the another purpose.
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function has no effect when the PMIC is locked. Call 
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the PMIC controller output is disabled, the PMIC output pin returns to 
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * its GPIO configured state. 
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller output is enabled automatically when you call 
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock(). To keep the PMIC controller output disabled, the PMIC
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller must remain unlocked.
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisableOutput
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 103


2350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void)
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
2356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     } 
2358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicLock
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Locks the PMIC control controller register so that no changes can be made. 
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The changes are related to PMIC enabling/disabling and PMIC output pin 
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC or PMIC controller output 
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC controller must remain unlocked.
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicLock
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void)
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, 0U);
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicUnlock
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unlocks the PMIC control register so that changes can be made. The changes are
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * related to the PMIC controller enabling/disabling and PMIC output pin 
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC controller or PMIC output 
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC must remain unlocked.
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void)
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK
 426              		.loc 3 2403 0
 427 001e 134A     		ldr	r2, .L14
 428 0020 516C     		ldr	r1, [r2, #68]
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 104


 429 0022 134B     		ldr	r3, .L14+4
 430 0024 0B40     		ands	r3, r1
 431 0026 E821     		movs	r1, #232
 432 0028 8901     		lsls	r1, r1, #6
 433 002a 0B43     		orrs	r3, r1
 434 002c 5364     		str	r3, [r2, #68]
 435              	.LBE74:
 436              	.LBE73:
 437              	.LBB75:
 438              	.LBB76:
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
 439              		.loc 3 2352 0
 440 002e 536C     		ldr	r3, [r2, #68]
 441 0030 1B0A     		lsrs	r3, r3, #8
 442 0032 FF22     		movs	r2, #255
 443 0034 1340     		ands	r3, r2
 444 0036 3A2B     		cmp	r3, #58
 445 0038 07D1     		bne	.L13
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
 446              		.loc 3 2355 0
 447 003a 0C4A     		ldr	r2, .L14
 448 003c 516C     		ldr	r1, [r2, #68]
 449 003e 0D4B     		ldr	r3, .L14+8
 450 0040 0B40     		ands	r3, r1
 451 0042 E821     		movs	r1, #232
 452 0044 8901     		lsls	r1, r1, #6
 453 0046 0B43     		orrs	r3, r1
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
 454              		.loc 3 2354 0
 455 0048 5364     		str	r3, [r2, #68]
 456              	.L13:
 457              	.LBE76:
 458              	.LBE75:
 270:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 271:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* PMIC Control */
 272:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_UnlockPmic();
 273:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_DisablePmicOutput();
 274:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 275:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Clock */
 276:Generated_Source\PSoC6/cyfitter_cfg.c **** 	ClockInit();
 459              		.loc 1 276 0
 460 004a FFF7FEFF 		bl	ClockInit
 461              	.LVL37:
 462              	.LBB77:
 277:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 278:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port6 configuration */
 279:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 280:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port6_cfg =
 463              		.loc 1 280 0
 464 004e 01A9     		add	r1, sp, #4
 465 0050 0A00     		movs	r2, r1
 466 0052 094B     		ldr	r3, .L14+12
 467 0054 1433     		adds	r3, r3, #20
 468 0056 31CB     		ldmia	r3!, {r0, r4, r5}
 469 0058 31C2     		stmia	r2!, {r0, r4, r5}
 470 005a 31CB     		ldmia	r3!, {r0, r4, r5}
 471 005c 31C2     		stmia	r2!, {r0, r4, r5}
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 105


 472 005e 31CB     		ldmia	r3!, {r0, r4, r5}
 473 0060 31C2     		stmia	r2!, {r0, r4, r5}
 281:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 282:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000000u,
 283:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000000u,
 284:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000000u,
 285:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0xBA000000u,
 286:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 287:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
 288:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 289:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 290:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x1D1D0000u,
 291:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 292:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT6, &port6_cfg);
 474              		.loc 1 292 0
 475 0062 0648     		ldr	r0, .L14+16
 476 0064 FFF7FEFF 		bl	Cy_GPIO_Port_Init
 477              	.LVL38:
 478              	.LBE77:
 293:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 294:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 295:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 296:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Perform basic analog initialization to defaults */
 297:Generated_Source\PSoC6/cyfitter_cfg.c **** 	AnalogSetDefault();
 298:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 299:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 479              		.loc 1 299 0
 480 0068 0BB0     		add	sp, sp, #44
 481              		@ sp needed
 482 006a 30BD     		pop	{r4, r5, pc}
 483              	.L15:
 484              		.align	2
 485              	.L14:
 486 006c 00002740 		.word	1076297728
 487 0070 FF00FFFF 		.word	-65281
 488 0074 FFC5FFDF 		.word	-536885761
 489 0078 00000000 		.word	.LANCHOR0
 490 007c 00033240 		.word	1077019392
 491              		.cfi_endproc
 492              	.LFE190:
 493              		.size	Cy_SystemInit, .-Cy_SystemInit
 494              		.section	.rodata
 495              		.align	2
 496              		.set	.LANCHOR0,. + 0
 497              	.LC1:
 498 0000 F4010000 		.word	500
 499 0004 1400     		.short	20
 500 0006 04       		.byte	4
 501 0007 01       		.byte	1
 502 0008 0A00     		.short	10
 503 000a 09       		.byte	9
 504 000b 05       		.byte	5
 505 000c 0800     		.short	8
 506 000e 00       		.byte	0
 507 000f 00       		.space	1
 508 0010 6301     		.short	355
 509 0012 0000     		.space	2
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 106


 510              	.LC0:
 511 0014 00000000 		.word	0
 512 0018 00000000 		.word	0
 513 001c 00000000 		.word	0
 514 0020 000000BA 		.word	-1174405120
 515 0024 00000000 		.word	0
 516 0028 00000000 		.word	0
 517 002c 00000000 		.word	0
 518 0030 00000000 		.word	0
 519 0034 00001D1D 		.word	488439808
 520              		.text
 521              	.Letext0:
 522              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 523              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 524              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_srss.h"
 525              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_backup.h"
 526              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_gpio.h"
 527              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 528              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 529              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 530              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
 531              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/systick/cy_systick.h"
 532              		.section	.debug_info,"",%progbits
 533              	.Ldebug_info0:
 534 0000 CC180000 		.4byte	0x18cc
 535 0004 0400     		.2byte	0x4
 536 0006 00000000 		.4byte	.Ldebug_abbrev0
 537 000a 04       		.byte	0x4
 538 000b 01       		.uleb128 0x1
 539 000c 840F0000 		.4byte	.LASF382
 540 0010 0C       		.byte	0xc
 541 0011 610E0000 		.4byte	.LASF383
 542 0015 54020000 		.4byte	.LASF384
 543 0019 00000000 		.4byte	.Ldebug_ranges0+0
 544 001d 00000000 		.4byte	0
 545 0021 00000000 		.4byte	.Ldebug_line0
 546 0025 02       		.uleb128 0x2
 547 0026 04       		.byte	0x4
 548 0027 05       		.byte	0x5
 549 0028 696E7400 		.ascii	"int\000"
 550 002c 03       		.uleb128 0x3
 551 002d 04       		.byte	0x4
 552 002e 07       		.byte	0x7
 553 002f FE0D0000 		.4byte	.LASF0
 554 0033 03       		.uleb128 0x3
 555 0034 08       		.byte	0x8
 556 0035 05       		.byte	0x5
 557 0036 0D0F0000 		.4byte	.LASF1
 558 003a 03       		.uleb128 0x3
 559 003b 08       		.byte	0x8
 560 003c 04       		.byte	0x4
 561 003d D3110000 		.4byte	.LASF2
 562 0041 03       		.uleb128 0x3
 563 0042 01       		.byte	0x1
 564 0043 06       		.byte	0x6
 565 0044 34190000 		.4byte	.LASF3
 566 0048 04       		.uleb128 0x4
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 107


 567 0049 2E150000 		.4byte	.LASF5
 568 004d 04       		.byte	0x4
 569 004e 1D       		.byte	0x1d
 570 004f 53000000 		.4byte	0x53
 571 0053 03       		.uleb128 0x3
 572 0054 01       		.byte	0x1
 573 0055 08       		.byte	0x8
 574 0056 DC160000 		.4byte	.LASF4
 575 005a 04       		.uleb128 0x4
 576 005b 16100000 		.4byte	.LASF6
 577 005f 04       		.byte	0x4
 578 0060 29       		.byte	0x29
 579 0061 65000000 		.4byte	0x65
 580 0065 03       		.uleb128 0x3
 581 0066 02       		.byte	0x2
 582 0067 05       		.byte	0x5
 583 0068 45040000 		.4byte	.LASF7
 584 006c 04       		.uleb128 0x4
 585 006d 27090000 		.4byte	.LASF8
 586 0071 04       		.byte	0x4
 587 0072 2B       		.byte	0x2b
 588 0073 77000000 		.4byte	0x77
 589 0077 03       		.uleb128 0x3
 590 0078 02       		.byte	0x2
 591 0079 07       		.byte	0x7
 592 007a C0110000 		.4byte	.LASF9
 593 007e 03       		.uleb128 0x3
 594 007f 04       		.byte	0x4
 595 0080 05       		.byte	0x5
 596 0081 26000000 		.4byte	.LASF10
 597 0085 04       		.uleb128 0x4
 598 0086 EA160000 		.4byte	.LASF11
 599 008a 04       		.byte	0x4
 600 008b 41       		.byte	0x41
 601 008c 90000000 		.4byte	0x90
 602 0090 03       		.uleb128 0x3
 603 0091 04       		.byte	0x4
 604 0092 07       		.byte	0x7
 605 0093 4D160000 		.4byte	.LASF12
 606 0097 03       		.uleb128 0x3
 607 0098 08       		.byte	0x8
 608 0099 07       		.byte	0x7
 609 009a BC070000 		.4byte	.LASF13
 610 009e 03       		.uleb128 0x3
 611 009f 04       		.byte	0x4
 612 00a0 07       		.byte	0x7
 613 00a1 9E120000 		.4byte	.LASF14
 614 00a5 03       		.uleb128 0x3
 615 00a6 01       		.byte	0x1
 616 00a7 08       		.byte	0x8
 617 00a8 AD0D0000 		.4byte	.LASF15
 618 00ac 04       		.uleb128 0x4
 619 00ad 2A0E0000 		.4byte	.LASF16
 620 00b1 05       		.byte	0x5
 621 00b2 18       		.byte	0x18
 622 00b3 48000000 		.4byte	0x48
 623 00b7 04       		.uleb128 0x4
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 108


 624 00b8 71070000 		.4byte	.LASF17
 625 00bc 05       		.byte	0x5
 626 00bd 20       		.byte	0x20
 627 00be 5A000000 		.4byte	0x5a
 628 00c2 04       		.uleb128 0x4
 629 00c3 DF110000 		.4byte	.LASF18
 630 00c7 05       		.byte	0x5
 631 00c8 24       		.byte	0x24
 632 00c9 6C000000 		.4byte	0x6c
 633 00cd 04       		.uleb128 0x4
 634 00ce 45060000 		.4byte	.LASF19
 635 00d2 05       		.byte	0x5
 636 00d3 30       		.byte	0x30
 637 00d4 85000000 		.4byte	0x85
 638 00d8 05       		.uleb128 0x5
 639 00d9 CD000000 		.4byte	0xcd
 640 00dd 06       		.uleb128 0x6
 641 00de D8000000 		.4byte	0xd8
 642 00e2 07       		.uleb128 0x7
 643 00e3 DD000000 		.4byte	0xdd
 644 00e7 F2000000 		.4byte	0xf2
 645 00eb 08       		.uleb128 0x8
 646 00ec 9E000000 		.4byte	0x9e
 647 00f0 01       		.byte	0x1
 648 00f1 00       		.byte	0
 649 00f2 07       		.uleb128 0x7
 650 00f3 DD000000 		.4byte	0xdd
 651 00f7 02010000 		.4byte	0x102
 652 00fb 08       		.uleb128 0x8
 653 00fc 9E000000 		.4byte	0x9e
 654 0100 07       		.byte	0x7
 655 0101 00       		.byte	0
 656 0102 07       		.uleb128 0x7
 657 0103 D8000000 		.4byte	0xd8
 658 0107 12010000 		.4byte	0x112
 659 010b 08       		.uleb128 0x8
 660 010c 9E000000 		.4byte	0x9e
 661 0110 0F       		.byte	0xf
 662 0111 00       		.byte	0
 663 0112 07       		.uleb128 0x7
 664 0113 DD000000 		.4byte	0xdd
 665 0117 22010000 		.4byte	0x122
 666 011b 08       		.uleb128 0x8
 667 011c 9E000000 		.4byte	0x9e
 668 0120 2F       		.byte	0x2f
 669 0121 00       		.byte	0
 670 0122 07       		.uleb128 0x7
 671 0123 D8000000 		.4byte	0xd8
 672 0127 32010000 		.4byte	0x132
 673 012b 08       		.uleb128 0x8
 674 012c 9E000000 		.4byte	0x9e
 675 0130 3F       		.byte	0x3f
 676 0131 00       		.byte	0
 677 0132 07       		.uleb128 0x7
 678 0133 DD000000 		.4byte	0xdd
 679 0137 42010000 		.4byte	0x142
 680 013b 08       		.uleb128 0x8
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 109


 681 013c 9E000000 		.4byte	0x9e
 682 0140 04       		.byte	0x4
 683 0141 00       		.byte	0
 684 0142 07       		.uleb128 0x7
 685 0143 DD000000 		.4byte	0xdd
 686 0147 52010000 		.4byte	0x152
 687 014b 08       		.uleb128 0x8
 688 014c 9E000000 		.4byte	0x9e
 689 0150 0F       		.byte	0xf
 690 0151 00       		.byte	0
 691 0152 07       		.uleb128 0x7
 692 0153 DD000000 		.4byte	0xdd
 693 0157 62010000 		.4byte	0x162
 694 015b 08       		.uleb128 0x8
 695 015c 9E000000 		.4byte	0x9e
 696 0160 1A       		.byte	0x1a
 697 0161 00       		.byte	0
 698 0162 07       		.uleb128 0x7
 699 0163 DD000000 		.4byte	0xdd
 700 0167 72010000 		.4byte	0x172
 701 016b 08       		.uleb128 0x8
 702 016c 9E000000 		.4byte	0x9e
 703 0170 1C       		.byte	0x1c
 704 0171 00       		.byte	0
 705 0172 09       		.uleb128 0x9
 706 0173 40       		.byte	0x40
 707 0174 06       		.byte	0x6
 708 0175 22       		.byte	0x22
 709 0176 0B020000 		.4byte	0x20b
 710 017a 0A       		.uleb128 0xa
 711 017b 2F000000 		.4byte	.LASF20
 712 017f 06       		.byte	0x6
 713 0180 23       		.byte	0x23
 714 0181 DD000000 		.4byte	0xdd
 715 0185 00       		.byte	0
 716 0186 0A       		.uleb128 0xa
 717 0187 D80E0000 		.4byte	.LASF21
 718 018b 06       		.byte	0x6
 719 018c 24       		.byte	0x24
 720 018d D8000000 		.4byte	0xd8
 721 0191 04       		.byte	0x4
 722 0192 0A       		.uleb128 0xa
 723 0193 17060000 		.4byte	.LASF22
 724 0197 06       		.byte	0x6
 725 0198 25       		.byte	0x25
 726 0199 D8000000 		.4byte	0xd8
 727 019d 08       		.byte	0x8
 728 019e 0A       		.uleb128 0xa
 729 019f 271A0000 		.4byte	.LASF23
 730 01a3 06       		.byte	0x6
 731 01a4 26       		.byte	0x26
 732 01a5 D8000000 		.4byte	0xd8
 733 01a9 0C       		.byte	0xc
 734 01aa 0A       		.uleb128 0xa
 735 01ab 9D180000 		.4byte	.LASF24
 736 01af 06       		.byte	0x6
 737 01b0 27       		.byte	0x27
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 110


 738 01b1 D8000000 		.4byte	0xd8
 739 01b5 10       		.byte	0x10
 740 01b6 0A       		.uleb128 0xa
 741 01b7 54180000 		.4byte	.LASF25
 742 01bb 06       		.byte	0x6
 743 01bc 28       		.byte	0x28
 744 01bd D8000000 		.4byte	0xd8
 745 01c1 14       		.byte	0x14
 746 01c2 0A       		.uleb128 0xa
 747 01c3 AA110000 		.4byte	.LASF26
 748 01c7 06       		.byte	0x6
 749 01c8 29       		.byte	0x29
 750 01c9 D8000000 		.4byte	0xd8
 751 01cd 18       		.byte	0x18
 752 01ce 0A       		.uleb128 0xa
 753 01cf 9D140000 		.4byte	.LASF27
 754 01d3 06       		.byte	0x6
 755 01d4 2A       		.byte	0x2a
 756 01d5 D8000000 		.4byte	0xd8
 757 01d9 1C       		.byte	0x1c
 758 01da 0A       		.uleb128 0xa
 759 01db B20B0000 		.4byte	.LASF28
 760 01df 06       		.byte	0x6
 761 01e0 2B       		.byte	0x2b
 762 01e1 D8000000 		.4byte	0xd8
 763 01e5 20       		.byte	0x20
 764 01e6 0A       		.uleb128 0xa
 765 01e7 0C070000 		.4byte	.LASF29
 766 01eb 06       		.byte	0x6
 767 01ec 2C       		.byte	0x2c
 768 01ed DD000000 		.4byte	0xdd
 769 01f1 24       		.byte	0x24
 770 01f2 0A       		.uleb128 0xa
 771 01f3 B5110000 		.4byte	.LASF30
 772 01f7 06       		.byte	0x6
 773 01f8 2D       		.byte	0x2d
 774 01f9 D8000000 		.4byte	0xd8
 775 01fd 28       		.byte	0x28
 776 01fe 0A       		.uleb128 0xa
 777 01ff 67070000 		.4byte	.LASF31
 778 0203 06       		.byte	0x6
 779 0204 2E       		.byte	0x2e
 780 0205 10020000 		.4byte	0x210
 781 0209 2C       		.byte	0x2c
 782 020a 00       		.byte	0
 783 020b 05       		.uleb128 0x5
 784 020c 32010000 		.4byte	0x132
 785 0210 06       		.uleb128 0x6
 786 0211 0B020000 		.4byte	0x20b
 787 0215 04       		.uleb128 0x4
 788 0216 10010000 		.4byte	.LASF32
 789 021a 06       		.byte	0x6
 790 021b 2F       		.byte	0x2f
 791 021c 72010000 		.4byte	0x172
 792 0220 0B       		.uleb128 0xb
 793 0221 30FF     		.2byte	0xff30
 794 0223 06       		.byte	0x6
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 111


 795 0224 34       		.byte	0x34
 796 0225 94050000 		.4byte	0x594
 797 0229 0A       		.uleb128 0xa
 798 022a D1050000 		.4byte	.LASF33
 799 022e 06       		.byte	0x6
 800 022f 35       		.byte	0x35
 801 0230 D8000000 		.4byte	0xd8
 802 0234 00       		.byte	0
 803 0235 0A       		.uleb128 0xa
 804 0236 2D110000 		.4byte	.LASF34
 805 023a 06       		.byte	0x6
 806 023b 36       		.byte	0x36
 807 023c D8000000 		.4byte	0xd8
 808 0240 04       		.byte	0x4
 809 0241 0A       		.uleb128 0xa
 810 0242 D30D0000 		.4byte	.LASF35
 811 0246 06       		.byte	0x6
 812 0247 37       		.byte	0x37
 813 0248 D8000000 		.4byte	0xd8
 814 024c 08       		.byte	0x8
 815 024d 0A       		.uleb128 0xa
 816 024e 2F000000 		.4byte	.LASF20
 817 0252 06       		.byte	0x6
 818 0253 38       		.byte	0x38
 819 0254 99050000 		.4byte	0x599
 820 0258 0C       		.byte	0xc
 821 0259 0A       		.uleb128 0xa
 822 025a BF130000 		.4byte	.LASF36
 823 025e 06       		.byte	0x6
 824 025f 39       		.byte	0x39
 825 0260 D8000000 		.4byte	0xd8
 826 0264 14       		.byte	0x14
 827 0265 0A       		.uleb128 0xa
 828 0266 32090000 		.4byte	.LASF37
 829 026a 06       		.byte	0x6
 830 026b 3A       		.byte	0x3a
 831 026c D8000000 		.4byte	0xd8
 832 0270 18       		.byte	0x18
 833 0271 0A       		.uleb128 0xa
 834 0272 D3010000 		.4byte	.LASF38
 835 0276 06       		.byte	0x6
 836 0277 3B       		.byte	0x3b
 837 0278 DD000000 		.4byte	0xdd
 838 027c 1C       		.byte	0x1c
 839 027d 0A       		.uleb128 0xa
 840 027e 67070000 		.4byte	.LASF31
 841 0282 06       		.byte	0x6
 842 0283 3C       		.byte	0x3c
 843 0284 B3050000 		.4byte	0x5b3
 844 0288 20       		.byte	0x20
 845 0289 0A       		.uleb128 0xa
 846 028a EB050000 		.4byte	.LASF39
 847 028e 06       		.byte	0x6
 848 028f 3D       		.byte	0x3d
 849 0290 B8050000 		.4byte	0x5b8
 850 0294 80       		.byte	0x80
 851 0295 0A       		.uleb128 0xa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 112


 852 0296 FC120000 		.4byte	.LASF40
 853 029a 06       		.byte	0x6
 854 029b 3E       		.byte	0x3e
 855 029c C2050000 		.4byte	0x5c2
 856 02a0 C0       		.byte	0xc0
 857 02a1 0C       		.uleb128 0xc
 858 02a2 D4160000 		.4byte	.LASF41
 859 02a6 06       		.byte	0x6
 860 02a7 3F       		.byte	0x3f
 861 02a8 D8000000 		.4byte	0xd8
 862 02ac 8001     		.2byte	0x180
 863 02ae 0C       		.uleb128 0xc
 864 02af F60D0000 		.4byte	.LASF42
 865 02b3 06       		.byte	0x6
 866 02b4 40       		.byte	0x40
 867 02b5 D8000000 		.4byte	0xd8
 868 02b9 8401     		.2byte	0x184
 869 02bb 0C       		.uleb128 0xc
 870 02bc B90E0000 		.4byte	.LASF43
 871 02c0 06       		.byte	0x6
 872 02c1 41       		.byte	0x41
 873 02c2 D8000000 		.4byte	0xd8
 874 02c6 8801     		.2byte	0x188
 875 02c8 0C       		.uleb128 0xc
 876 02c9 06130000 		.4byte	.LASF44
 877 02cd 06       		.byte	0x6
 878 02ce 42       		.byte	0x42
 879 02cf CC050000 		.4byte	0x5cc
 880 02d3 8C01     		.2byte	0x18c
 881 02d5 0C       		.uleb128 0xc
 882 02d6 41140000 		.4byte	.LASF45
 883 02da 06       		.byte	0x6
 884 02db 43       		.byte	0x43
 885 02dc D1050000 		.4byte	0x5d1
 886 02e0 0002     		.2byte	0x200
 887 02e2 0C       		.uleb128 0xc
 888 02e3 FE190000 		.4byte	.LASF46
 889 02e7 06       		.byte	0x6
 890 02e8 44       		.byte	0x44
 891 02e9 E1050000 		.4byte	0x5e1
 892 02ed 0003     		.2byte	0x300
 893 02ef 0C       		.uleb128 0xc
 894 02f0 54130000 		.4byte	.LASF47
 895 02f4 06       		.byte	0x6
 896 02f5 45       		.byte	0x45
 897 02f6 E6050000 		.4byte	0x5e6
 898 02fa 4003     		.2byte	0x340
 899 02fc 0C       		.uleb128 0xc
 900 02fd 65120000 		.4byte	.LASF48
 901 0301 06       		.byte	0x6
 902 0302 46       		.byte	0x46
 903 0303 EB050000 		.4byte	0x5eb
 904 0307 8003     		.2byte	0x380
 905 0309 0C       		.uleb128 0xc
 906 030a 10130000 		.4byte	.LASF49
 907 030e 06       		.byte	0x6
 908 030f 47       		.byte	0x47
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 113


 909 0310 05060000 		.4byte	0x605
 910 0314 C003     		.2byte	0x3c0
 911 0316 0C       		.uleb128 0xc
 912 0317 4F040000 		.4byte	.LASF50
 913 031b 06       		.byte	0x6
 914 031c 48       		.byte	0x48
 915 031d D8000000 		.4byte	0xd8
 916 0321 0005     		.2byte	0x500
 917 0323 0C       		.uleb128 0xc
 918 0324 320E0000 		.4byte	.LASF51
 919 0328 06       		.byte	0x6
 920 0329 49       		.byte	0x49
 921 032a D8000000 		.4byte	0xd8
 922 032e 0405     		.2byte	0x504
 923 0330 0C       		.uleb128 0xc
 924 0331 1A130000 		.4byte	.LASF52
 925 0335 06       		.byte	0x6
 926 0336 4A       		.byte	0x4a
 927 0337 DD000000 		.4byte	0xdd
 928 033b 0805     		.2byte	0x508
 929 033d 0C       		.uleb128 0xc
 930 033e C5020000 		.4byte	.LASF53
 931 0342 06       		.byte	0x6
 932 0343 4B       		.byte	0x4b
 933 0344 D8000000 		.4byte	0xd8
 934 0348 0C05     		.2byte	0x50c
 935 034a 0C       		.uleb128 0xc
 936 034b DE020000 		.4byte	.LASF54
 937 034f 06       		.byte	0x6
 938 0350 4C       		.byte	0x4c
 939 0351 D8000000 		.4byte	0xd8
 940 0355 1005     		.2byte	0x510
 941 0357 0C       		.uleb128 0xc
 942 0358 740F0000 		.4byte	.LASF55
 943 035c 06       		.byte	0x6
 944 035d 4D       		.byte	0x4d
 945 035e D8000000 		.4byte	0xd8
 946 0362 1405     		.2byte	0x514
 947 0364 0C       		.uleb128 0xc
 948 0365 FA030000 		.4byte	.LASF56
 949 0369 06       		.byte	0x6
 950 036a 4E       		.byte	0x4e
 951 036b D8000000 		.4byte	0xd8
 952 036f 1805     		.2byte	0x518
 953 0371 0C       		.uleb128 0xc
 954 0372 0E0B0000 		.4byte	.LASF57
 955 0376 06       		.byte	0x6
 956 0377 4F       		.byte	0x4f
 957 0378 D8000000 		.4byte	0xd8
 958 037c 1C05     		.2byte	0x51c
 959 037e 0C       		.uleb128 0xc
 960 037f 1B0B0000 		.4byte	.LASF58
 961 0383 06       		.byte	0x6
 962 0384 50       		.byte	0x50
 963 0385 DD000000 		.4byte	0xdd
 964 0389 2005     		.2byte	0x520
 965 038b 0C       		.uleb128 0xc
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 114


 966 038c 24130000 		.4byte	.LASF59
 967 0390 06       		.byte	0x6
 968 0391 51       		.byte	0x51
 969 0392 0F060000 		.4byte	0x60f
 970 0396 2405     		.2byte	0x524
 971 0398 0C       		.uleb128 0xc
 972 0399 FF0A0000 		.4byte	.LASF60
 973 039d 06       		.byte	0x6
 974 039e 52       		.byte	0x52
 975 039f D8000000 		.4byte	0xd8
 976 03a3 2C05     		.2byte	0x52c
 977 03a5 0C       		.uleb128 0xc
 978 03a6 F6090000 		.4byte	.LASF61
 979 03aa 06       		.byte	0x6
 980 03ab 53       		.byte	0x53
 981 03ac DD000000 		.4byte	0xdd
 982 03b0 3005     		.2byte	0x530
 983 03b2 0C       		.uleb128 0xc
 984 03b3 2E130000 		.4byte	.LASF62
 985 03b7 06       		.byte	0x6
 986 03b8 54       		.byte	0x54
 987 03b9 19060000 		.4byte	0x619
 988 03bd 3405     		.2byte	0x534
 989 03bf 0C       		.uleb128 0xc
 990 03c0 49110000 		.4byte	.LASF63
 991 03c4 06       		.byte	0x6
 992 03c5 55       		.byte	0x55
 993 03c6 D8000000 		.4byte	0xd8
 994 03ca 3C05     		.2byte	0x53c
 995 03cc 0C       		.uleb128 0xc
 996 03cd 38130000 		.4byte	.LASF64
 997 03d1 06       		.byte	0x6
 998 03d2 56       		.byte	0x56
 999 03d3 23060000 		.4byte	0x623
 1000 03d7 4005     		.2byte	0x540
 1001 03d9 0C       		.uleb128 0xc
 1002 03da B6090000 		.4byte	.LASF65
 1003 03de 06       		.byte	0x6
 1004 03df 57       		.byte	0x57
 1005 03e0 D8000000 		.4byte	0xd8
 1006 03e4 8005     		.2byte	0x580
 1007 03e6 0C       		.uleb128 0xc
 1008 03e7 CF0A0000 		.4byte	.LASF66
 1009 03eb 06       		.byte	0x6
 1010 03ec 58       		.byte	0x58
 1011 03ed D8000000 		.4byte	0xd8
 1012 03f1 8405     		.2byte	0x584
 1013 03f3 0C       		.uleb128 0xc
 1014 03f4 DF0A0000 		.4byte	.LASF67
 1015 03f8 06       		.byte	0x6
 1016 03f9 59       		.byte	0x59
 1017 03fa D8000000 		.4byte	0xd8
 1018 03fe 8805     		.2byte	0x588
 1019 0400 0C       		.uleb128 0xc
 1020 0401 EF0A0000 		.4byte	.LASF68
 1021 0405 06       		.byte	0x6
 1022 0406 5A       		.byte	0x5a
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 115


 1023 0407 D8000000 		.4byte	0xd8
 1024 040b 8C05     		.2byte	0x58c
 1025 040d 0C       		.uleb128 0xc
 1026 040e 5F010000 		.4byte	.LASF69
 1027 0412 06       		.byte	0x6
 1028 0413 5B       		.byte	0x5b
 1029 0414 D8000000 		.4byte	0xd8
 1030 0418 9005     		.2byte	0x590
 1031 041a 0C       		.uleb128 0xc
 1032 041b 42130000 		.4byte	.LASF70
 1033 041f 06       		.byte	0x6
 1034 0420 5C       		.byte	0x5c
 1035 0421 2D060000 		.4byte	0x62d
 1036 0425 9405     		.2byte	0x594
 1037 0427 0C       		.uleb128 0xc
 1038 0428 EE100000 		.4byte	.LASF71
 1039 042c 06       		.byte	0x6
 1040 042d 5D       		.byte	0x5d
 1041 042e 42060000 		.4byte	0x642
 1042 0432 0006     		.2byte	0x600
 1043 0434 0C       		.uleb128 0xc
 1044 0435 67170000 		.4byte	.LASF72
 1045 0439 06       		.byte	0x6
 1046 043a 5E       		.byte	0x5e
 1047 043b DD000000 		.4byte	0xdd
 1048 043f 3C06     		.2byte	0x63c
 1049 0441 0C       		.uleb128 0xc
 1050 0442 100C0000 		.4byte	.LASF73
 1051 0446 06       		.byte	0x6
 1052 0447 5F       		.byte	0x5f
 1053 0448 47060000 		.4byte	0x647
 1054 044c 4006     		.2byte	0x640
 1055 044e 0C       		.uleb128 0xc
 1056 044f 72170000 		.4byte	.LASF74
 1057 0453 06       		.byte	0x6
 1058 0454 60       		.byte	0x60
 1059 0455 61060000 		.4byte	0x661
 1060 0459 7C06     		.2byte	0x67c
 1061 045b 0C       		.uleb128 0xc
 1062 045c C8190000 		.4byte	.LASF75
 1063 0460 06       		.byte	0x6
 1064 0461 61       		.byte	0x61
 1065 0462 D8000000 		.4byte	0xd8
 1066 0466 0007     		.2byte	0x700
 1067 0468 0C       		.uleb128 0xc
 1068 0469 1C0E0000 		.4byte	.LASF76
 1069 046d 06       		.byte	0x6
 1070 046e 62       		.byte	0x62
 1071 046f D8000000 		.4byte	0xd8
 1072 0473 0407     		.2byte	0x704
 1073 0475 0C       		.uleb128 0xc
 1074 0476 3D020000 		.4byte	.LASF77
 1075 047a 06       		.byte	0x6
 1076 047b 63       		.byte	0x63
 1077 047c D8000000 		.4byte	0xd8
 1078 0480 0807     		.2byte	0x708
 1079 0482 0C       		.uleb128 0xc
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 116


 1080 0483 AE130000 		.4byte	.LASF78
 1081 0487 06       		.byte	0x6
 1082 0488 64       		.byte	0x64
 1083 0489 DD000000 		.4byte	0xdd
 1084 048d 0C07     		.2byte	0x70c
 1085 048f 0C       		.uleb128 0xc
 1086 0490 30050000 		.4byte	.LASF79
 1087 0494 06       		.byte	0x6
 1088 0495 65       		.byte	0x65
 1089 0496 D8000000 		.4byte	0xd8
 1090 049a 1007     		.2byte	0x710
 1091 049c 0C       		.uleb128 0xc
 1092 049d 7D170000 		.4byte	.LASF80
 1093 04a1 06       		.byte	0x6
 1094 04a2 66       		.byte	0x66
 1095 04a3 7B060000 		.4byte	0x67b
 1096 04a7 1407     		.2byte	0x714
 1097 04a9 0C       		.uleb128 0xc
 1098 04aa 43160000 		.4byte	.LASF81
 1099 04ae 06       		.byte	0x6
 1100 04af 67       		.byte	0x67
 1101 04b0 D8000000 		.4byte	0xd8
 1102 04b4 0008     		.2byte	0x800
 1103 04b6 0C       		.uleb128 0xc
 1104 04b7 E2010000 		.4byte	.LASF82
 1105 04bb 06       		.byte	0x6
 1106 04bc 68       		.byte	0x68
 1107 04bd D8000000 		.4byte	0xd8
 1108 04c1 0408     		.2byte	0x804
 1109 04c3 0C       		.uleb128 0xc
 1110 04c4 88170000 		.4byte	.LASF83
 1111 04c8 06       		.byte	0x6
 1112 04c9 69       		.byte	0x69
 1113 04ca 96060000 		.4byte	0x696
 1114 04ce 0808     		.2byte	0x808
 1115 04d0 0C       		.uleb128 0xc
 1116 04d1 6F110000 		.4byte	.LASF84
 1117 04d5 06       		.byte	0x6
 1118 04d6 6A       		.byte	0x6a
 1119 04d7 D8000000 		.4byte	0xd8
 1120 04db 007F     		.2byte	0x7f00
 1121 04dd 0C       		.uleb128 0xc
 1122 04de FB040000 		.4byte	.LASF85
 1123 04e2 06       		.byte	0x6
 1124 04e3 6B       		.byte	0x6b
 1125 04e4 D8000000 		.4byte	0xd8
 1126 04e8 047F     		.2byte	0x7f04
 1127 04ea 0C       		.uleb128 0xc
 1128 04eb 64140000 		.4byte	.LASF86
 1129 04ef 06       		.byte	0x6
 1130 04f0 6C       		.byte	0x6c
 1131 04f1 D8000000 		.4byte	0xd8
 1132 04f5 087F     		.2byte	0x7f08
 1133 04f7 0C       		.uleb128 0xc
 1134 04f8 40190000 		.4byte	.LASF87
 1135 04fc 06       		.byte	0x6
 1136 04fd 6D       		.byte	0x6d
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 117


 1137 04fe D8000000 		.4byte	0xd8
 1138 0502 0C7F     		.2byte	0x7f0c
 1139 0504 0C       		.uleb128 0xc
 1140 0505 93170000 		.4byte	.LASF88
 1141 0509 06       		.byte	0x6
 1142 050a 6E       		.byte	0x6e
 1143 050b A0060000 		.4byte	0x6a0
 1144 050f 107F     		.2byte	0x7f10
 1145 0511 0C       		.uleb128 0xc
 1146 0512 D9050000 		.4byte	.LASF89
 1147 0516 06       		.byte	0x6
 1148 0517 6F       		.byte	0x6f
 1149 0518 D8000000 		.4byte	0xd8
 1150 051c 307F     		.2byte	0x7f30
 1151 051e 0C       		.uleb128 0xc
 1152 051f 9E170000 		.4byte	.LASF90
 1153 0523 06       		.byte	0x6
 1154 0524 70       		.byte	0x70
 1155 0525 BB060000 		.4byte	0x6bb
 1156 0529 347F     		.2byte	0x7f34
 1157 052b 0C       		.uleb128 0xc
 1158 052c AB070000 		.4byte	.LASF91
 1159 0530 06       		.byte	0x6
 1160 0531 71       		.byte	0x71
 1161 0532 D8000000 		.4byte	0xd8
 1162 0536 10FF     		.2byte	0xff10
 1163 0538 0C       		.uleb128 0xc
 1164 0539 A9170000 		.4byte	.LASF92
 1165 053d 06       		.byte	0x6
 1166 053e 72       		.byte	0x72
 1167 053f DD000000 		.4byte	0xdd
 1168 0543 14FF     		.2byte	0xff14
 1169 0545 0C       		.uleb128 0xc
 1170 0546 FB060000 		.4byte	.LASF93
 1171 054a 06       		.byte	0x6
 1172 054b 73       		.byte	0x73
 1173 054c D8000000 		.4byte	0xd8
 1174 0550 18FF     		.2byte	0xff18
 1175 0552 0C       		.uleb128 0xc
 1176 0553 BB180000 		.4byte	.LASF94
 1177 0557 06       		.byte	0x6
 1178 0558 74       		.byte	0x74
 1179 0559 D8000000 		.4byte	0xd8
 1180 055d 1CFF     		.2byte	0xff1c
 1181 055f 0C       		.uleb128 0xc
 1182 0560 8C070000 		.4byte	.LASF95
 1183 0564 06       		.byte	0x6
 1184 0565 75       		.byte	0x75
 1185 0566 D8000000 		.4byte	0xd8
 1186 056a 20FF     		.2byte	0xff20
 1187 056c 0C       		.uleb128 0xc
 1188 056d 9C130000 		.4byte	.LASF96
 1189 0571 06       		.byte	0x6
 1190 0572 76       		.byte	0x76
 1191 0573 D8000000 		.4byte	0xd8
 1192 0577 24FF     		.2byte	0xff24
 1193 0579 0C       		.uleb128 0xc
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 118


 1194 057a 820C0000 		.4byte	.LASF97
 1195 057e 06       		.byte	0x6
 1196 057f 77       		.byte	0x77
 1197 0580 D8000000 		.4byte	0xd8
 1198 0584 28FF     		.2byte	0xff28
 1199 0586 0C       		.uleb128 0xc
 1200 0587 950C0000 		.4byte	.LASF98
 1201 058b 06       		.byte	0x6
 1202 058c 78       		.byte	0x78
 1203 058d D8000000 		.4byte	0xd8
 1204 0591 2CFF     		.2byte	0xff2c
 1205 0593 00       		.byte	0
 1206 0594 05       		.uleb128 0x5
 1207 0595 E2000000 		.4byte	0xe2
 1208 0599 06       		.uleb128 0x6
 1209 059a 94050000 		.4byte	0x594
 1210 059e 07       		.uleb128 0x7
 1211 059f DD000000 		.4byte	0xdd
 1212 05a3 AE050000 		.4byte	0x5ae
 1213 05a7 08       		.uleb128 0x8
 1214 05a8 9E000000 		.4byte	0x9e
 1215 05ac 17       		.byte	0x17
 1216 05ad 00       		.byte	0
 1217 05ae 05       		.uleb128 0x5
 1218 05af 9E050000 		.4byte	0x59e
 1219 05b3 06       		.uleb128 0x6
 1220 05b4 AE050000 		.4byte	0x5ae
 1221 05b8 05       		.uleb128 0x5
 1222 05b9 02010000 		.4byte	0x102
 1223 05bd 05       		.uleb128 0x5
 1224 05be 12010000 		.4byte	0x112
 1225 05c2 06       		.uleb128 0x6
 1226 05c3 BD050000 		.4byte	0x5bd
 1227 05c7 05       		.uleb128 0x5
 1228 05c8 62010000 		.4byte	0x162
 1229 05cc 06       		.uleb128 0x6
 1230 05cd C7050000 		.4byte	0x5c7
 1231 05d1 07       		.uleb128 0x7
 1232 05d2 15020000 		.4byte	0x215
 1233 05d6 E1050000 		.4byte	0x5e1
 1234 05da 08       		.uleb128 0x8
 1235 05db 9E000000 		.4byte	0x9e
 1236 05df 03       		.byte	0x3
 1237 05e0 00       		.byte	0
 1238 05e1 05       		.uleb128 0x5
 1239 05e2 02010000 		.4byte	0x102
 1240 05e6 05       		.uleb128 0x5
 1241 05e7 02010000 		.4byte	0x102
 1242 05eb 05       		.uleb128 0x5
 1243 05ec 02010000 		.4byte	0x102
 1244 05f0 07       		.uleb128 0x7
 1245 05f1 DD000000 		.4byte	0xdd
 1246 05f5 00060000 		.4byte	0x600
 1247 05f9 08       		.uleb128 0x8
 1248 05fa 9E000000 		.4byte	0x9e
 1249 05fe 4F       		.byte	0x4f
 1250 05ff 00       		.byte	0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 119


 1251 0600 05       		.uleb128 0x5
 1252 0601 F0050000 		.4byte	0x5f0
 1253 0605 06       		.uleb128 0x6
 1254 0606 00060000 		.4byte	0x600
 1255 060a 05       		.uleb128 0x5
 1256 060b E2000000 		.4byte	0xe2
 1257 060f 06       		.uleb128 0x6
 1258 0610 0A060000 		.4byte	0x60a
 1259 0614 05       		.uleb128 0x5
 1260 0615 E2000000 		.4byte	0xe2
 1261 0619 06       		.uleb128 0x6
 1262 061a 14060000 		.4byte	0x614
 1263 061e 05       		.uleb128 0x5
 1264 061f 42010000 		.4byte	0x142
 1265 0623 06       		.uleb128 0x6
 1266 0624 1E060000 		.4byte	0x61e
 1267 0628 05       		.uleb128 0x5
 1268 0629 52010000 		.4byte	0x152
 1269 062d 06       		.uleb128 0x6
 1270 062e 28060000 		.4byte	0x628
 1271 0632 07       		.uleb128 0x7
 1272 0633 D8000000 		.4byte	0xd8
 1273 0637 42060000 		.4byte	0x642
 1274 063b 08       		.uleb128 0x8
 1275 063c 9E000000 		.4byte	0x9e
 1276 0640 0E       		.byte	0xe
 1277 0641 00       		.byte	0
 1278 0642 05       		.uleb128 0x5
 1279 0643 32060000 		.4byte	0x632
 1280 0647 05       		.uleb128 0x5
 1281 0648 32060000 		.4byte	0x632
 1282 064c 07       		.uleb128 0x7
 1283 064d DD000000 		.4byte	0xdd
 1284 0651 5C060000 		.4byte	0x65c
 1285 0655 08       		.uleb128 0x8
 1286 0656 9E000000 		.4byte	0x9e
 1287 065a 20       		.byte	0x20
 1288 065b 00       		.byte	0
 1289 065c 05       		.uleb128 0x5
 1290 065d 4C060000 		.4byte	0x64c
 1291 0661 06       		.uleb128 0x6
 1292 0662 5C060000 		.4byte	0x65c
 1293 0666 07       		.uleb128 0x7
 1294 0667 DD000000 		.4byte	0xdd
 1295 066b 76060000 		.4byte	0x676
 1296 066f 08       		.uleb128 0x8
 1297 0670 9E000000 		.4byte	0x9e
 1298 0674 3A       		.byte	0x3a
 1299 0675 00       		.byte	0
 1300 0676 05       		.uleb128 0x5
 1301 0677 66060000 		.4byte	0x666
 1302 067b 06       		.uleb128 0x6
 1303 067c 76060000 		.4byte	0x676
 1304 0680 07       		.uleb128 0x7
 1305 0681 DD000000 		.4byte	0xdd
 1306 0685 91060000 		.4byte	0x691
 1307 0689 0D       		.uleb128 0xd
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 120


 1308 068a 9E000000 		.4byte	0x9e
 1309 068e BD1D     		.2byte	0x1dbd
 1310 0690 00       		.byte	0
 1311 0691 05       		.uleb128 0x5
 1312 0692 80060000 		.4byte	0x680
 1313 0696 06       		.uleb128 0x6
 1314 0697 91060000 		.4byte	0x691
 1315 069b 05       		.uleb128 0x5
 1316 069c F2000000 		.4byte	0xf2
 1317 06a0 06       		.uleb128 0x6
 1318 06a1 9B060000 		.4byte	0x69b
 1319 06a5 07       		.uleb128 0x7
 1320 06a6 DD000000 		.4byte	0xdd
 1321 06aa B6060000 		.4byte	0x6b6
 1322 06ae 0D       		.uleb128 0xd
 1323 06af 9E000000 		.4byte	0x9e
 1324 06b3 F61F     		.2byte	0x1ff6
 1325 06b5 00       		.byte	0
 1326 06b6 05       		.uleb128 0x5
 1327 06b7 A5060000 		.4byte	0x6a5
 1328 06bb 06       		.uleb128 0x6
 1329 06bc B6060000 		.4byte	0x6b6
 1330 06c0 04       		.uleb128 0x4
 1331 06c1 570F0000 		.4byte	.LASF99
 1332 06c5 06       		.byte	0x6
 1333 06c6 79       		.byte	0x79
 1334 06c7 20020000 		.4byte	0x220
 1335 06cb 0B       		.uleb128 0xb
 1336 06cc 04FF     		.2byte	0xff04
 1337 06ce 07       		.byte	0x7
 1338 06cf 21       		.byte	0x21
 1339 06d0 EC070000 		.4byte	0x7ec
 1340 06d4 0E       		.uleb128 0xe
 1341 06d5 43544C00 		.ascii	"CTL\000"
 1342 06d9 07       		.byte	0x7
 1343 06da 22       		.byte	0x22
 1344 06db D8000000 		.4byte	0xd8
 1345 06df 00       		.byte	0
 1346 06e0 0A       		.uleb128 0xa
 1347 06e1 2F000000 		.4byte	.LASF20
 1348 06e5 07       		.byte	0x7
 1349 06e6 23       		.byte	0x23
 1350 06e7 DD000000 		.4byte	0xdd
 1351 06eb 04       		.byte	0x4
 1352 06ec 0A       		.uleb128 0xa
 1353 06ed 80110000 		.4byte	.LASF100
 1354 06f1 07       		.byte	0x7
 1355 06f2 24       		.byte	0x24
 1356 06f3 D8000000 		.4byte	0xd8
 1357 06f7 08       		.byte	0x8
 1358 06f8 0A       		.uleb128 0xa
 1359 06f9 F1140000 		.4byte	.LASF101
 1360 06fd 07       		.byte	0x7
 1361 06fe 25       		.byte	0x25
 1362 06ff D8000000 		.4byte	0xd8
 1363 0703 0C       		.byte	0xc
 1364 0704 0A       		.uleb128 0xa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 121


 1365 0705 421A0000 		.4byte	.LASF102
 1366 0709 07       		.byte	0x7
 1367 070a 26       		.byte	0x26
 1368 070b DD000000 		.4byte	0xdd
 1369 070f 10       		.byte	0x10
 1370 0710 0A       		.uleb128 0xa
 1371 0711 65040000 		.4byte	.LASF103
 1372 0715 07       		.byte	0x7
 1373 0716 27       		.byte	0x27
 1374 0717 D8000000 		.4byte	0xd8
 1375 071b 14       		.byte	0x14
 1376 071c 0A       		.uleb128 0xa
 1377 071d 4B180000 		.4byte	.LASF104
 1378 0721 07       		.byte	0x7
 1379 0722 28       		.byte	0x28
 1380 0723 D8000000 		.4byte	0xd8
 1381 0727 18       		.byte	0x18
 1382 0728 0A       		.uleb128 0xa
 1383 0729 CD090000 		.4byte	.LASF105
 1384 072d 07       		.byte	0x7
 1385 072e 29       		.byte	0x29
 1386 072f D8000000 		.4byte	0xd8
 1387 0733 1C       		.byte	0x1c
 1388 0734 0A       		.uleb128 0xa
 1389 0735 F40B0000 		.4byte	.LASF106
 1390 0739 07       		.byte	0x7
 1391 073a 2A       		.byte	0x2a
 1392 073b D8000000 		.4byte	0xd8
 1393 073f 20       		.byte	0x20
 1394 0740 0A       		.uleb128 0xa
 1395 0741 D2190000 		.4byte	.LASF107
 1396 0745 07       		.byte	0x7
 1397 0746 2B       		.byte	0x2b
 1398 0747 D8000000 		.4byte	0xd8
 1399 074b 24       		.byte	0x24
 1400 074c 0A       		.uleb128 0xa
 1401 074d D91A0000 		.4byte	.LASF108
 1402 0751 07       		.byte	0x7
 1403 0752 2C       		.byte	0x2c
 1404 0753 D8000000 		.4byte	0xd8
 1405 0757 28       		.byte	0x28
 1406 0758 0A       		.uleb128 0xa
 1407 0759 F6060000 		.4byte	.LASF109
 1408 075d 07       		.byte	0x7
 1409 075e 2D       		.byte	0x2d
 1410 075f D8000000 		.4byte	0xd8
 1411 0763 2C       		.byte	0x2c
 1412 0764 0A       		.uleb128 0xa
 1413 0765 A2040000 		.4byte	.LASF110
 1414 0769 07       		.byte	0x7
 1415 076a 2E       		.byte	0x2e
 1416 076b D8000000 		.4byte	0xd8
 1417 076f 30       		.byte	0x30
 1418 0770 0A       		.uleb128 0xa
 1419 0771 93180000 		.4byte	.LASF111
 1420 0775 07       		.byte	0x7
 1421 0776 2F       		.byte	0x2f
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 122


 1422 0777 D8000000 		.4byte	0xd8
 1423 077b 34       		.byte	0x34
 1424 077c 0A       		.uleb128 0xa
 1425 077d A5150000 		.4byte	.LASF112
 1426 0781 07       		.byte	0x7
 1427 0782 30       		.byte	0x30
 1428 0783 DD000000 		.4byte	0xdd
 1429 0787 38       		.byte	0x38
 1430 0788 0A       		.uleb128 0xa
 1431 0789 99160000 		.4byte	.LASF113
 1432 078d 07       		.byte	0x7
 1433 078e 31       		.byte	0x31
 1434 078f DD000000 		.4byte	0xdd
 1435 0793 3C       		.byte	0x3c
 1436 0794 0A       		.uleb128 0xa
 1437 0795 3B0C0000 		.4byte	.LASF114
 1438 0799 07       		.byte	0x7
 1439 079a 32       		.byte	0x32
 1440 079b DD000000 		.4byte	0xdd
 1441 079f 40       		.byte	0x40
 1442 07a0 0A       		.uleb128 0xa
 1443 07a1 E8070000 		.4byte	.LASF115
 1444 07a5 07       		.byte	0x7
 1445 07a6 33       		.byte	0x33
 1446 07a7 D8000000 		.4byte	0xd8
 1447 07ab 44       		.byte	0x44
 1448 07ac 0A       		.uleb128 0xa
 1449 07ad 55140000 		.4byte	.LASF116
 1450 07b1 07       		.byte	0x7
 1451 07b2 34       		.byte	0x34
 1452 07b3 D8000000 		.4byte	0xd8
 1453 07b7 48       		.byte	0x48
 1454 07b8 0A       		.uleb128 0xa
 1455 07b9 67070000 		.4byte	.LASF31
 1456 07bd 07       		.byte	0x7
 1457 07be 35       		.byte	0x35
 1458 07bf 02080000 		.4byte	0x802
 1459 07c3 4C       		.byte	0x4c
 1460 07c4 0C       		.uleb128 0xc
 1461 07c5 B40E0000 		.4byte	.LASF117
 1462 07c9 07       		.byte	0x7
 1463 07ca 36       		.byte	0x36
 1464 07cb 07080000 		.4byte	0x807
 1465 07cf 0010     		.2byte	0x1000
 1466 07d1 0C       		.uleb128 0xc
 1467 07d2 FC120000 		.4byte	.LASF40
 1468 07d6 07       		.byte	0x7
 1469 07d7 37       		.byte	0x37
 1470 07d8 22080000 		.4byte	0x822
 1471 07dc 0011     		.2byte	0x1100
 1472 07de 0C       		.uleb128 0xc
 1473 07df B20D0000 		.4byte	.LASF118
 1474 07e3 07       		.byte	0x7
 1475 07e4 38       		.byte	0x38
 1476 07e5 D8000000 		.4byte	0xd8
 1477 07e9 00FF     		.2byte	0xff00
 1478 07eb 00       		.byte	0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 123


 1479 07ec 07       		.uleb128 0x7
 1480 07ed DD000000 		.4byte	0xdd
 1481 07f1 FD070000 		.4byte	0x7fd
 1482 07f5 0D       		.uleb128 0xd
 1483 07f6 9E000000 		.4byte	0x9e
 1484 07fa EC03     		.2byte	0x3ec
 1485 07fc 00       		.byte	0
 1486 07fd 05       		.uleb128 0x5
 1487 07fe EC070000 		.4byte	0x7ec
 1488 0802 06       		.uleb128 0x6
 1489 0803 FD070000 		.4byte	0x7fd
 1490 0807 05       		.uleb128 0x5
 1491 0808 22010000 		.4byte	0x122
 1492 080c 07       		.uleb128 0x7
 1493 080d DD000000 		.4byte	0xdd
 1494 0811 1D080000 		.4byte	0x81d
 1495 0815 0D       		.uleb128 0xd
 1496 0816 9E000000 		.4byte	0x9e
 1497 081a 7F3B     		.2byte	0x3b7f
 1498 081c 00       		.byte	0
 1499 081d 05       		.uleb128 0x5
 1500 081e 0C080000 		.4byte	0x80c
 1501 0822 06       		.uleb128 0x6
 1502 0823 1D080000 		.4byte	0x81d
 1503 0827 04       		.uleb128 0x4
 1504 0828 930D0000 		.4byte	.LASF119
 1505 082c 07       		.byte	0x7
 1506 082d 39       		.byte	0x39
 1507 082e CB060000 		.4byte	0x6cb
 1508 0832 09       		.uleb128 0x9
 1509 0833 80       		.byte	0x80
 1510 0834 08       		.byte	0x8
 1511 0835 22       		.byte	0x22
 1512 0836 06090000 		.4byte	0x906
 1513 083a 0E       		.uleb128 0xe
 1514 083b 4F555400 		.ascii	"OUT\000"
 1515 083f 08       		.byte	0x8
 1516 0840 23       		.byte	0x23
 1517 0841 D8000000 		.4byte	0xd8
 1518 0845 00       		.byte	0
 1519 0846 0A       		.uleb128 0xa
 1520 0847 5F070000 		.4byte	.LASF120
 1521 084b 08       		.byte	0x8
 1522 084c 24       		.byte	0x24
 1523 084d D8000000 		.4byte	0xd8
 1524 0851 04       		.byte	0x4
 1525 0852 0A       		.uleb128 0xa
 1526 0853 B10A0000 		.4byte	.LASF121
 1527 0857 08       		.byte	0x8
 1528 0858 25       		.byte	0x25
 1529 0859 D8000000 		.4byte	0xd8
 1530 085d 08       		.byte	0x8
 1531 085e 0A       		.uleb128 0xa
 1532 085f 11150000 		.4byte	.LASF122
 1533 0863 08       		.byte	0x8
 1534 0864 26       		.byte	0x26
 1535 0865 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 124


 1536 0869 0C       		.byte	0xc
 1537 086a 0E       		.uleb128 0xe
 1538 086b 494E00   		.ascii	"IN\000"
 1539 086e 08       		.byte	0x8
 1540 086f 27       		.byte	0x27
 1541 0870 DD000000 		.4byte	0xdd
 1542 0874 10       		.byte	0x10
 1543 0875 0A       		.uleb128 0xa
 1544 0876 F6060000 		.4byte	.LASF109
 1545 087a 08       		.byte	0x8
 1546 087b 28       		.byte	0x28
 1547 087c D8000000 		.4byte	0xd8
 1548 0880 14       		.byte	0x14
 1549 0881 0A       		.uleb128 0xa
 1550 0882 93180000 		.4byte	.LASF111
 1551 0886 08       		.byte	0x8
 1552 0887 29       		.byte	0x29
 1553 0888 D8000000 		.4byte	0xd8
 1554 088c 18       		.byte	0x18
 1555 088d 0A       		.uleb128 0xa
 1556 088e A5150000 		.4byte	.LASF112
 1557 0892 08       		.byte	0x8
 1558 0893 2A       		.byte	0x2a
 1559 0894 DD000000 		.4byte	0xdd
 1560 0898 1C       		.byte	0x1c
 1561 0899 0A       		.uleb128 0xa
 1562 089a A2040000 		.4byte	.LASF110
 1563 089e 08       		.byte	0x8
 1564 089f 2B       		.byte	0x2b
 1565 08a0 D8000000 		.4byte	0xd8
 1566 08a4 20       		.byte	0x20
 1567 08a5 0A       		.uleb128 0xa
 1568 08a6 45170000 		.4byte	.LASF123
 1569 08aa 08       		.byte	0x8
 1570 08ab 2C       		.byte	0x2c
 1571 08ac D8000000 		.4byte	0xd8
 1572 08b0 24       		.byte	0x24
 1573 08b1 0E       		.uleb128 0xe
 1574 08b2 43464700 		.ascii	"CFG\000"
 1575 08b6 08       		.byte	0x8
 1576 08b7 2D       		.byte	0x2d
 1577 08b8 D8000000 		.4byte	0xd8
 1578 08bc 28       		.byte	0x28
 1579 08bd 0A       		.uleb128 0xa
 1580 08be B8050000 		.4byte	.LASF124
 1581 08c2 08       		.byte	0x8
 1582 08c3 2E       		.byte	0x2e
 1583 08c4 D8000000 		.4byte	0xd8
 1584 08c8 2C       		.byte	0x2c
 1585 08c9 0A       		.uleb128 0xa
 1586 08ca C5090000 		.4byte	.LASF125
 1587 08ce 08       		.byte	0x8
 1588 08cf 2F       		.byte	0x2f
 1589 08d0 D8000000 		.4byte	0xd8
 1590 08d4 30       		.byte	0x30
 1591 08d5 0A       		.uleb128 0xa
 1592 08d6 4C020000 		.4byte	.LASF126
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 125


 1593 08da 08       		.byte	0x8
 1594 08db 30       		.byte	0x30
 1595 08dc D8000000 		.4byte	0xd8
 1596 08e0 34       		.byte	0x34
 1597 08e1 0A       		.uleb128 0xa
 1598 08e2 2F000000 		.4byte	.LASF20
 1599 08e6 08       		.byte	0x8
 1600 08e7 31       		.byte	0x31
 1601 08e8 DD000000 		.4byte	0xdd
 1602 08ec 38       		.byte	0x38
 1603 08ed 0A       		.uleb128 0xa
 1604 08ee 8F140000 		.4byte	.LASF127
 1605 08f2 08       		.byte	0x8
 1606 08f3 32       		.byte	0x32
 1607 08f4 D8000000 		.4byte	0xd8
 1608 08f8 3C       		.byte	0x3c
 1609 08f9 0A       		.uleb128 0xa
 1610 08fa 67070000 		.4byte	.LASF31
 1611 08fe 08       		.byte	0x8
 1612 08ff 33       		.byte	0x33
 1613 0900 0B090000 		.4byte	0x90b
 1614 0904 40       		.byte	0x40
 1615 0905 00       		.byte	0
 1616 0906 05       		.uleb128 0x5
 1617 0907 42010000 		.4byte	0x142
 1618 090b 06       		.uleb128 0x6
 1619 090c 06090000 		.4byte	0x906
 1620 0910 04       		.uleb128 0x4
 1621 0911 00140000 		.4byte	.LASF128
 1622 0915 08       		.byte	0x8
 1623 0916 34       		.byte	0x34
 1624 0917 32080000 		.4byte	0x832
 1625 091b 0B       		.uleb128 0xb
 1626 091c 2440     		.2byte	0x4024
 1627 091e 08       		.byte	0x8
 1628 091f 39       		.byte	0x39
 1629 0920 A6090000 		.4byte	0x9a6
 1630 0924 0E       		.uleb128 0xe
 1631 0925 50525400 		.ascii	"PRT\000"
 1632 0929 08       		.byte	0x8
 1633 092a 3A       		.byte	0x3a
 1634 092b A6090000 		.4byte	0x9a6
 1635 092f 00       		.byte	0
 1636 0930 0C       		.uleb128 0xc
 1637 0931 43000000 		.4byte	.LASF129
 1638 0935 08       		.byte	0x8
 1639 0936 3B       		.byte	0x3b
 1640 0937 DD000000 		.4byte	0xdd
 1641 093b 0040     		.2byte	0x4000
 1642 093d 0C       		.uleb128 0xc
 1643 093e 4F000000 		.4byte	.LASF130
 1644 0942 08       		.byte	0x8
 1645 0943 3C       		.byte	0x3c
 1646 0944 DD000000 		.4byte	0xdd
 1647 0948 0440     		.2byte	0x4004
 1648 094a 0C       		.uleb128 0xc
 1649 094b 5B000000 		.4byte	.LASF131
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 126


 1650 094f 08       		.byte	0x8
 1651 0950 3D       		.byte	0x3d
 1652 0951 DD000000 		.4byte	0xdd
 1653 0955 0840     		.2byte	0x4008
 1654 0957 0C       		.uleb128 0xc
 1655 0958 67000000 		.4byte	.LASF132
 1656 095c 08       		.byte	0x8
 1657 095d 3E       		.byte	0x3e
 1658 095e DD000000 		.4byte	0xdd
 1659 0962 0C40     		.2byte	0x400c
 1660 0964 0C       		.uleb128 0xc
 1661 0965 38000000 		.4byte	.LASF133
 1662 0969 08       		.byte	0x8
 1663 096a 3F       		.byte	0x3f
 1664 096b DD000000 		.4byte	0xdd
 1665 096f 1040     		.2byte	0x4010
 1666 0971 0C       		.uleb128 0xc
 1667 0972 FE0B0000 		.4byte	.LASF134
 1668 0976 08       		.byte	0x8
 1669 0977 40       		.byte	0x40
 1670 0978 D8000000 		.4byte	0xd8
 1671 097c 1440     		.2byte	0x4014
 1672 097e 0C       		.uleb128 0xc
 1673 097f 26190000 		.4byte	.LASF135
 1674 0983 08       		.byte	0x8
 1675 0984 41       		.byte	0x41
 1676 0985 D8000000 		.4byte	0xd8
 1677 0989 1840     		.2byte	0x4018
 1678 098b 0C       		.uleb128 0xc
 1679 098c 87110000 		.4byte	.LASF136
 1680 0990 08       		.byte	0x8
 1681 0991 42       		.byte	0x42
 1682 0992 DD000000 		.4byte	0xdd
 1683 0996 1C40     		.2byte	0x401c
 1684 0998 0C       		.uleb128 0xc
 1685 0999 F1110000 		.4byte	.LASF137
 1686 099d 08       		.byte	0x8
 1687 099e 43       		.byte	0x43
 1688 099f D8000000 		.4byte	0xd8
 1689 09a3 2040     		.2byte	0x4020
 1690 09a5 00       		.byte	0
 1691 09a6 07       		.uleb128 0x7
 1692 09a7 10090000 		.4byte	0x910
 1693 09ab B6090000 		.4byte	0x9b6
 1694 09af 08       		.uleb128 0x8
 1695 09b0 9E000000 		.4byte	0x9e
 1696 09b4 7F       		.byte	0x7f
 1697 09b5 00       		.byte	0
 1698 09b6 04       		.uleb128 0x4
 1699 09b7 B8060000 		.4byte	.LASF138
 1700 09bb 08       		.byte	0x8
 1701 09bc 44       		.byte	0x44
 1702 09bd 1B090000 		.4byte	0x91b
 1703 09c1 0F       		.uleb128 0xf
 1704 09c2 73000000 		.4byte	.LASF139
 1705 09c6 09       		.byte	0x9
 1706 09c7 2806     		.2byte	0x628
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 127


 1707 09c9 C0060000 		.4byte	0x6c0
 1708 09cd 0F       		.uleb128 0xf
 1709 09ce 1A000000 		.4byte	.LASF140
 1710 09d2 09       		.byte	0x9
 1711 09d3 2906     		.2byte	0x629
 1712 09d5 27080000 		.4byte	0x827
 1713 09d9 0F       		.uleb128 0xf
 1714 09da 18190000 		.4byte	.LASF141
 1715 09de 09       		.byte	0x9
 1716 09df 3106     		.2byte	0x631
 1717 09e1 10090000 		.4byte	0x910
 1718 09e5 0F       		.uleb128 0xf
 1719 09e6 F5160000 		.4byte	.LASF142
 1720 09ea 09       		.byte	0x9
 1721 09eb 3206     		.2byte	0x632
 1722 09ed B6090000 		.4byte	0x9b6
 1723 09f1 09       		.uleb128 0x9
 1724 09f2 B8       		.byte	0xb8
 1725 09f3 0A       		.byte	0xa
 1726 09f4 34       		.byte	0x34
 1727 09f5 020E0000 		.4byte	0xe02
 1728 09f9 0A       		.uleb128 0xa
 1729 09fa D4020000 		.4byte	.LASF143
 1730 09fe 0A       		.byte	0xa
 1731 09ff 37       		.byte	0x37
 1732 0a00 CD000000 		.4byte	0xcd
 1733 0a04 00       		.byte	0
 1734 0a05 0A       		.uleb128 0xa
 1735 0a06 A20D0000 		.4byte	.LASF144
 1736 0a0a 0A       		.byte	0xa
 1737 0a0b 38       		.byte	0x38
 1738 0a0c CD000000 		.4byte	0xcd
 1739 0a10 04       		.byte	0x4
 1740 0a11 0A       		.uleb128 0xa
 1741 0a12 07010000 		.4byte	.LASF145
 1742 0a16 0A       		.byte	0xa
 1743 0a17 39       		.byte	0x39
 1744 0a18 CD000000 		.4byte	0xcd
 1745 0a1c 08       		.byte	0x8
 1746 0a1d 0A       		.uleb128 0xa
 1747 0a1e DE000000 		.4byte	.LASF146
 1748 0a22 0A       		.byte	0xa
 1749 0a23 3A       		.byte	0x3a
 1750 0a24 CD000000 		.4byte	0xcd
 1751 0a28 0C       		.byte	0xc
 1752 0a29 0A       		.uleb128 0xa
 1753 0a2a E8110000 		.4byte	.LASF147
 1754 0a2e 0A       		.byte	0xa
 1755 0a2f 3B       		.byte	0x3b
 1756 0a30 CD000000 		.4byte	0xcd
 1757 0a34 10       		.byte	0x10
 1758 0a35 0A       		.uleb128 0xa
 1759 0a36 93100000 		.4byte	.LASF148
 1760 0a3a 0A       		.byte	0xa
 1761 0a3b 3C       		.byte	0x3c
 1762 0a3c CD000000 		.4byte	0xcd
 1763 0a40 14       		.byte	0x14
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 128


 1764 0a41 0A       		.uleb128 0xa
 1765 0a42 070C0000 		.4byte	.LASF149
 1766 0a46 0A       		.byte	0xa
 1767 0a47 3D       		.byte	0x3d
 1768 0a48 CD000000 		.4byte	0xcd
 1769 0a4c 18       		.byte	0x18
 1770 0a4d 0A       		.uleb128 0xa
 1771 0a4e F5190000 		.4byte	.LASF150
 1772 0a52 0A       		.byte	0xa
 1773 0a53 3E       		.byte	0x3e
 1774 0a54 CD000000 		.4byte	0xcd
 1775 0a58 1C       		.byte	0x1c
 1776 0a59 0A       		.uleb128 0xa
 1777 0a5a 1B0F0000 		.4byte	.LASF151
 1778 0a5e 0A       		.byte	0xa
 1779 0a5f 3F       		.byte	0x3f
 1780 0a60 CD000000 		.4byte	0xcd
 1781 0a64 20       		.byte	0x20
 1782 0a65 0A       		.uleb128 0xa
 1783 0a66 320F0000 		.4byte	.LASF152
 1784 0a6a 0A       		.byte	0xa
 1785 0a6b 40       		.byte	0x40
 1786 0a6c CD000000 		.4byte	0xcd
 1787 0a70 24       		.byte	0x24
 1788 0a71 0A       		.uleb128 0xa
 1789 0a72 6F130000 		.4byte	.LASF153
 1790 0a76 0A       		.byte	0xa
 1791 0a77 43       		.byte	0x43
 1792 0a78 AC000000 		.4byte	0xac
 1793 0a7c 28       		.byte	0x28
 1794 0a7d 0A       		.uleb128 0xa
 1795 0a7e 3F070000 		.4byte	.LASF154
 1796 0a82 0A       		.byte	0xa
 1797 0a83 44       		.byte	0x44
 1798 0a84 AC000000 		.4byte	0xac
 1799 0a88 29       		.byte	0x29
 1800 0a89 0A       		.uleb128 0xa
 1801 0a8a 80120000 		.4byte	.LASF155
 1802 0a8e 0A       		.byte	0xa
 1803 0a8f 45       		.byte	0x45
 1804 0a90 AC000000 		.4byte	0xac
 1805 0a94 2A       		.byte	0x2a
 1806 0a95 0A       		.uleb128 0xa
 1807 0a96 CC130000 		.4byte	.LASF156
 1808 0a9a 0A       		.byte	0xa
 1809 0a9b 46       		.byte	0x46
 1810 0a9c AC000000 		.4byte	0xac
 1811 0aa0 2B       		.byte	0x2b
 1812 0aa1 0A       		.uleb128 0xa
 1813 0aa2 90130000 		.4byte	.LASF157
 1814 0aa6 0A       		.byte	0xa
 1815 0aa7 47       		.byte	0x47
 1816 0aa8 AC000000 		.4byte	0xac
 1817 0aac 2C       		.byte	0x2c
 1818 0aad 0A       		.uleb128 0xa
 1819 0aae 36160000 		.4byte	.LASF158
 1820 0ab2 0A       		.byte	0xa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 129


 1821 0ab3 48       		.byte	0x48
 1822 0ab4 AC000000 		.4byte	0xac
 1823 0ab8 2D       		.byte	0x2d
 1824 0ab9 0A       		.uleb128 0xa
 1825 0aba 75120000 		.4byte	.LASF159
 1826 0abe 0A       		.byte	0xa
 1827 0abf 49       		.byte	0x49
 1828 0ac0 AC000000 		.4byte	0xac
 1829 0ac4 2E       		.byte	0x2e
 1830 0ac5 0A       		.uleb128 0xa
 1831 0ac6 DC190000 		.4byte	.LASF160
 1832 0aca 0A       		.byte	0xa
 1833 0acb 4A       		.byte	0x4a
 1834 0acc AC000000 		.4byte	0xac
 1835 0ad0 2F       		.byte	0x2f
 1836 0ad1 0A       		.uleb128 0xa
 1837 0ad2 24050000 		.4byte	.LASF161
 1838 0ad6 0A       		.byte	0xa
 1839 0ad7 4B       		.byte	0x4b
 1840 0ad8 AC000000 		.4byte	0xac
 1841 0adc 30       		.byte	0x30
 1842 0add 0A       		.uleb128 0xa
 1843 0ade FD100000 		.4byte	.LASF162
 1844 0ae2 0A       		.byte	0xa
 1845 0ae3 4E       		.byte	0x4e
 1846 0ae4 AC000000 		.4byte	0xac
 1847 0ae8 31       		.byte	0x31
 1848 0ae9 0A       		.uleb128 0xa
 1849 0aea 52190000 		.4byte	.LASF163
 1850 0aee 0A       		.byte	0xa
 1851 0aef 4F       		.byte	0x4f
 1852 0af0 AC000000 		.4byte	0xac
 1853 0af4 32       		.byte	0x32
 1854 0af5 0A       		.uleb128 0xa
 1855 0af6 C9100000 		.4byte	.LASF164
 1856 0afa 0A       		.byte	0xa
 1857 0afb 50       		.byte	0x50
 1858 0afc AC000000 		.4byte	0xac
 1859 0b00 33       		.byte	0x33
 1860 0b01 0A       		.uleb128 0xa
 1861 0b02 1B160000 		.4byte	.LASF165
 1862 0b06 0A       		.byte	0xa
 1863 0b07 51       		.byte	0x51
 1864 0b08 AC000000 		.4byte	0xac
 1865 0b0c 34       		.byte	0x34
 1866 0b0d 0A       		.uleb128 0xa
 1867 0b0e FC070000 		.4byte	.LASF166
 1868 0b12 0A       		.byte	0xa
 1869 0b13 52       		.byte	0x52
 1870 0b14 B7000000 		.4byte	0xb7
 1871 0b18 36       		.byte	0x36
 1872 0b19 0A       		.uleb128 0xa
 1873 0b1a 5A040000 		.4byte	.LASF167
 1874 0b1e 0A       		.byte	0xa
 1875 0b1f 53       		.byte	0x53
 1876 0b20 B7000000 		.4byte	0xb7
 1877 0b24 38       		.byte	0x38
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 130


 1878 0b25 0A       		.uleb128 0xa
 1879 0b26 25040000 		.4byte	.LASF168
 1880 0b2a 0A       		.byte	0xa
 1881 0b2b 54       		.byte	0x54
 1882 0b2c B7000000 		.4byte	0xb7
 1883 0b30 3A       		.byte	0x3a
 1884 0b31 0A       		.uleb128 0xa
 1885 0b32 331A0000 		.4byte	.LASF169
 1886 0b36 0A       		.byte	0xa
 1887 0b37 55       		.byte	0x55
 1888 0b38 AC000000 		.4byte	0xac
 1889 0b3c 3C       		.byte	0x3c
 1890 0b3d 0A       		.uleb128 0xa
 1891 0b3e 540A0000 		.4byte	.LASF170
 1892 0b42 0A       		.byte	0xa
 1893 0b43 56       		.byte	0x56
 1894 0b44 AC000000 		.4byte	0xac
 1895 0b48 3D       		.byte	0x3d
 1896 0b49 0A       		.uleb128 0xa
 1897 0b4a 3E120000 		.4byte	.LASF171
 1898 0b4e 0A       		.byte	0xa
 1899 0b4f 57       		.byte	0x57
 1900 0b50 AC000000 		.4byte	0xac
 1901 0b54 3E       		.byte	0x3e
 1902 0b55 0A       		.uleb128 0xa
 1903 0b56 B9000000 		.4byte	.LASF172
 1904 0b5a 0A       		.byte	0xa
 1905 0b5b 58       		.byte	0x58
 1906 0b5c AC000000 		.4byte	0xac
 1907 0b60 3F       		.byte	0x3f
 1908 0b61 0A       		.uleb128 0xa
 1909 0b62 05020000 		.4byte	.LASF173
 1910 0b66 0A       		.byte	0xa
 1911 0b67 59       		.byte	0x59
 1912 0b68 AC000000 		.4byte	0xac
 1913 0b6c 40       		.byte	0x40
 1914 0b6d 0A       		.uleb128 0xa
 1915 0b6e 1D110000 		.4byte	.LASF174
 1916 0b72 0A       		.byte	0xa
 1917 0b73 5A       		.byte	0x5a
 1918 0b74 AC000000 		.4byte	0xac
 1919 0b78 41       		.byte	0x41
 1920 0b79 0A       		.uleb128 0xa
 1921 0b7a F8180000 		.4byte	.LASF175
 1922 0b7e 0A       		.byte	0xa
 1923 0b7f 5B       		.byte	0x5b
 1924 0b80 AC000000 		.4byte	0xac
 1925 0b84 42       		.byte	0x42
 1926 0b85 0A       		.uleb128 0xa
 1927 0b86 B70D0000 		.4byte	.LASF176
 1928 0b8a 0A       		.byte	0xa
 1929 0b8b 5C       		.byte	0x5c
 1930 0b8c AC000000 		.4byte	0xac
 1931 0b90 43       		.byte	0x43
 1932 0b91 0A       		.uleb128 0xa
 1933 0b92 C20D0000 		.4byte	.LASF177
 1934 0b96 0A       		.byte	0xa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 131


 1935 0b97 5D       		.byte	0x5d
 1936 0b98 AC000000 		.4byte	0xac
 1937 0b9c 44       		.byte	0x44
 1938 0b9d 0A       		.uleb128 0xa
 1939 0b9e DA130000 		.4byte	.LASF178
 1940 0ba2 0A       		.byte	0xa
 1941 0ba3 5E       		.byte	0x5e
 1942 0ba4 CD000000 		.4byte	0xcd
 1943 0ba8 48       		.byte	0x48
 1944 0ba9 0A       		.uleb128 0xa
 1945 0baa AB040000 		.4byte	.LASF179
 1946 0bae 0A       		.byte	0xa
 1947 0baf 5F       		.byte	0x5f
 1948 0bb0 CD000000 		.4byte	0xcd
 1949 0bb4 4C       		.byte	0x4c
 1950 0bb5 0A       		.uleb128 0xa
 1951 0bb6 AA180000 		.4byte	.LASF180
 1952 0bba 0A       		.byte	0xa
 1953 0bbb 60       		.byte	0x60
 1954 0bbc AC000000 		.4byte	0xac
 1955 0bc0 50       		.byte	0x50
 1956 0bc1 0A       		.uleb128 0xa
 1957 0bc2 280B0000 		.4byte	.LASF181
 1958 0bc6 0A       		.byte	0xa
 1959 0bc7 61       		.byte	0x61
 1960 0bc8 AC000000 		.4byte	0xac
 1961 0bcc 51       		.byte	0x51
 1962 0bcd 0A       		.uleb128 0xa
 1963 0bce 640F0000 		.4byte	.LASF182
 1964 0bd2 0A       		.byte	0xa
 1965 0bd3 62       		.byte	0x62
 1966 0bd4 AC000000 		.4byte	0xac
 1967 0bd8 52       		.byte	0x52
 1968 0bd9 0A       		.uleb128 0xa
 1969 0bda 4D070000 		.4byte	.LASF183
 1970 0bde 0A       		.byte	0xa
 1971 0bdf 63       		.byte	0x63
 1972 0be0 AC000000 		.4byte	0xac
 1973 0be4 53       		.byte	0x53
 1974 0be5 0A       		.uleb128 0xa
 1975 0be6 C6140000 		.4byte	.LASF184
 1976 0bea 0A       		.byte	0xa
 1977 0beb 64       		.byte	0x64
 1978 0bec AC000000 		.4byte	0xac
 1979 0bf0 54       		.byte	0x54
 1980 0bf1 0A       		.uleb128 0xa
 1981 0bf2 6E0C0000 		.4byte	.LASF185
 1982 0bf6 0A       		.byte	0xa
 1983 0bf7 65       		.byte	0x65
 1984 0bf8 AC000000 		.4byte	0xac
 1985 0bfc 55       		.byte	0x55
 1986 0bfd 0A       		.uleb128 0xa
 1987 0bfe 04190000 		.4byte	.LASF186
 1988 0c02 0A       		.byte	0xa
 1989 0c03 66       		.byte	0x66
 1990 0c04 AC000000 		.4byte	0xac
 1991 0c08 56       		.byte	0x56
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 132


 1992 0c09 0A       		.uleb128 0xa
 1993 0c0a 8A120000 		.4byte	.LASF187
 1994 0c0e 0A       		.byte	0xa
 1995 0c0f 67       		.byte	0x67
 1996 0c10 AC000000 		.4byte	0xac
 1997 0c14 57       		.byte	0x57
 1998 0c15 0A       		.uleb128 0xa
 1999 0c16 050A0000 		.4byte	.LASF188
 2000 0c1a 0A       		.byte	0xa
 2001 0c1b 68       		.byte	0x68
 2002 0c1c AC000000 		.4byte	0xac
 2003 0c20 58       		.byte	0x58
 2004 0c21 0A       		.uleb128 0xa
 2005 0c22 491A0000 		.4byte	.LASF189
 2006 0c26 0A       		.byte	0xa
 2007 0c27 69       		.byte	0x69
 2008 0c28 AC000000 		.4byte	0xac
 2009 0c2c 59       		.byte	0x59
 2010 0c2d 0A       		.uleb128 0xa
 2011 0c2e D0170000 		.4byte	.LASF190
 2012 0c32 0A       		.byte	0xa
 2013 0c33 6E       		.byte	0x6e
 2014 0c34 C2000000 		.4byte	0xc2
 2015 0c38 5A       		.byte	0x5a
 2016 0c39 0A       		.uleb128 0xa
 2017 0c3a 3A010000 		.4byte	.LASF191
 2018 0c3e 0A       		.byte	0xa
 2019 0c3f 6F       		.byte	0x6f
 2020 0c40 C2000000 		.4byte	0xc2
 2021 0c44 5C       		.byte	0x5c
 2022 0c45 0A       		.uleb128 0xa
 2023 0c46 230F0000 		.4byte	.LASF192
 2024 0c4a 0A       		.byte	0xa
 2025 0c4b 70       		.byte	0x70
 2026 0c4c AC000000 		.4byte	0xac
 2027 0c50 5E       		.byte	0x5e
 2028 0c51 0A       		.uleb128 0xa
 2029 0c52 60190000 		.4byte	.LASF193
 2030 0c56 0A       		.byte	0xa
 2031 0c57 71       		.byte	0x71
 2032 0c58 AC000000 		.4byte	0xac
 2033 0c5c 5F       		.byte	0x5f
 2034 0c5d 0A       		.uleb128 0xa
 2035 0c5e BE0C0000 		.4byte	.LASF194
 2036 0c62 0A       		.byte	0xa
 2037 0c63 72       		.byte	0x72
 2038 0c64 AC000000 		.4byte	0xac
 2039 0c68 60       		.byte	0x60
 2040 0c69 0A       		.uleb128 0xa
 2041 0c6a 0B0E0000 		.4byte	.LASF195
 2042 0c6e 0A       		.byte	0xa
 2043 0c6f 73       		.byte	0x73
 2044 0c70 CD000000 		.4byte	0xcd
 2045 0c74 64       		.byte	0x64
 2046 0c75 0A       		.uleb128 0xa
 2047 0c76 3A0B0000 		.4byte	.LASF196
 2048 0c7a 0A       		.byte	0xa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 133


 2049 0c7b 76       		.byte	0x76
 2050 0c7c C2000000 		.4byte	0xc2
 2051 0c80 68       		.byte	0x68
 2052 0c81 0A       		.uleb128 0xa
 2053 0c82 FE110000 		.4byte	.LASF197
 2054 0c86 0A       		.byte	0xa
 2055 0c87 77       		.byte	0x77
 2056 0c88 C2000000 		.4byte	0xc2
 2057 0c8c 6A       		.byte	0x6a
 2058 0c8d 0A       		.uleb128 0xa
 2059 0c8e BA100000 		.4byte	.LASF198
 2060 0c92 0A       		.byte	0xa
 2061 0c93 78       		.byte	0x78
 2062 0c94 C2000000 		.4byte	0xc2
 2063 0c98 6C       		.byte	0x6c
 2064 0c99 0A       		.uleb128 0xa
 2065 0c9a 0F050000 		.4byte	.LASF199
 2066 0c9e 0A       		.byte	0xa
 2067 0c9f 79       		.byte	0x79
 2068 0ca0 C2000000 		.4byte	0xc2
 2069 0ca4 6E       		.byte	0x6e
 2070 0ca5 0A       		.uleb128 0xa
 2071 0ca6 A00E0000 		.4byte	.LASF200
 2072 0caa 0A       		.byte	0xa
 2073 0cab 7B       		.byte	0x7b
 2074 0cac AC000000 		.4byte	0xac
 2075 0cb0 70       		.byte	0x70
 2076 0cb1 0A       		.uleb128 0xa
 2077 0cb2 71050000 		.4byte	.LASF201
 2078 0cb6 0A       		.byte	0xa
 2079 0cb7 7C       		.byte	0x7c
 2080 0cb8 AC000000 		.4byte	0xac
 2081 0cbc 71       		.byte	0x71
 2082 0cbd 0A       		.uleb128 0xa
 2083 0cbe 78040000 		.4byte	.LASF202
 2084 0cc2 0A       		.byte	0xa
 2085 0cc3 7D       		.byte	0x7d
 2086 0cc4 AC000000 		.4byte	0xac
 2087 0cc8 72       		.byte	0x72
 2088 0cc9 0A       		.uleb128 0xa
 2089 0cca 12020000 		.4byte	.LASF203
 2090 0cce 0A       		.byte	0xa
 2091 0ccf 7E       		.byte	0x7e
 2092 0cd0 AC000000 		.4byte	0xac
 2093 0cd4 73       		.byte	0x73
 2094 0cd5 0A       		.uleb128 0xa
 2095 0cd6 EA120000 		.4byte	.LASF204
 2096 0cda 0A       		.byte	0xa
 2097 0cdb 80       		.byte	0x80
 2098 0cdc C2000000 		.4byte	0xc2
 2099 0ce0 74       		.byte	0x74
 2100 0ce1 0A       		.uleb128 0xa
 2101 0ce2 97110000 		.4byte	.LASF205
 2102 0ce6 0A       		.byte	0xa
 2103 0ce7 81       		.byte	0x81
 2104 0ce8 C2000000 		.4byte	0xc2
 2105 0cec 76       		.byte	0x76
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 134


 2106 0ced 0A       		.uleb128 0xa
 2107 0cee C30E0000 		.4byte	.LASF206
 2108 0cf2 0A       		.byte	0xa
 2109 0cf3 82       		.byte	0x82
 2110 0cf4 C2000000 		.4byte	0xc2
 2111 0cf8 78       		.byte	0x78
 2112 0cf9 0A       		.uleb128 0xa
 2113 0cfa D3070000 		.4byte	.LASF207
 2114 0cfe 0A       		.byte	0xa
 2115 0cff 83       		.byte	0x83
 2116 0d00 C2000000 		.4byte	0xc2
 2117 0d04 7A       		.byte	0x7a
 2118 0d05 0A       		.uleb128 0xa
 2119 0d06 5B150000 		.4byte	.LASF208
 2120 0d0a 0A       		.byte	0xa
 2121 0d0b 86       		.byte	0x86
 2122 0d0c AC000000 		.4byte	0xac
 2123 0d10 7C       		.byte	0x7c
 2124 0d11 0A       		.uleb128 0xa
 2125 0d12 CF180000 		.4byte	.LASF209
 2126 0d16 0A       		.byte	0xa
 2127 0d17 87       		.byte	0x87
 2128 0d18 AC000000 		.4byte	0xac
 2129 0d1c 7D       		.byte	0x7d
 2130 0d1d 0A       		.uleb128 0xa
 2131 0d1e 79070000 		.4byte	.LASF210
 2132 0d22 0A       		.byte	0xa
 2133 0d23 88       		.byte	0x88
 2134 0d24 AC000000 		.4byte	0xac
 2135 0d28 7E       		.byte	0x7e
 2136 0d29 0A       		.uleb128 0xa
 2137 0d2a C5060000 		.4byte	.LASF211
 2138 0d2e 0A       		.byte	0xa
 2139 0d2f 89       		.byte	0x89
 2140 0d30 AC000000 		.4byte	0xac
 2141 0d34 7F       		.byte	0x7f
 2142 0d35 0A       		.uleb128 0xa
 2143 0d36 7C130000 		.4byte	.LASF212
 2144 0d3a 0A       		.byte	0xa
 2145 0d3b 8A       		.byte	0x8a
 2146 0d3c AC000000 		.4byte	0xac
 2147 0d40 80       		.byte	0x80
 2148 0d41 0A       		.uleb128 0xa
 2149 0d42 A2000000 		.4byte	.LASF213
 2150 0d46 0A       		.byte	0xa
 2151 0d47 8D       		.byte	0x8d
 2152 0d48 CD000000 		.4byte	0xcd
 2153 0d4c 84       		.byte	0x84
 2154 0d4d 0A       		.uleb128 0xa
 2155 0d4e 8E150000 		.4byte	.LASF214
 2156 0d52 0A       		.byte	0xa
 2157 0d53 8E       		.byte	0x8e
 2158 0d54 CD000000 		.4byte	0xcd
 2159 0d58 88       		.byte	0x88
 2160 0d59 0A       		.uleb128 0xa
 2161 0d5a 08110000 		.4byte	.LASF215
 2162 0d5e 0A       		.byte	0xa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 135


 2163 0d5f 8F       		.byte	0x8f
 2164 0d60 CD000000 		.4byte	0xcd
 2165 0d64 8C       		.byte	0x8c
 2166 0d65 0A       		.uleb128 0xa
 2167 0d66 BF160000 		.4byte	.LASF216
 2168 0d6a 0A       		.byte	0xa
 2169 0d6b 90       		.byte	0x90
 2170 0d6c CD000000 		.4byte	0xcd
 2171 0d70 90       		.byte	0x90
 2172 0d71 0A       		.uleb128 0xa
 2173 0d72 19150000 		.4byte	.LASF217
 2174 0d76 0A       		.byte	0xa
 2175 0d77 91       		.byte	0x91
 2176 0d78 CD000000 		.4byte	0xcd
 2177 0d7c 94       		.byte	0x94
 2178 0d7d 0A       		.uleb128 0xa
 2179 0d7e A2050000 		.4byte	.LASF218
 2180 0d82 0A       		.byte	0xa
 2181 0d83 92       		.byte	0x92
 2182 0d84 CD000000 		.4byte	0xcd
 2183 0d88 98       		.byte	0x98
 2184 0d89 0A       		.uleb128 0xa
 2185 0d8a CC150000 		.4byte	.LASF219
 2186 0d8e 0A       		.byte	0xa
 2187 0d8f 93       		.byte	0x93
 2188 0d90 CD000000 		.4byte	0xcd
 2189 0d94 9C       		.byte	0x9c
 2190 0d95 0A       		.uleb128 0xa
 2191 0d96 580C0000 		.4byte	.LASF220
 2192 0d9a 0A       		.byte	0xa
 2193 0d9b 94       		.byte	0x94
 2194 0d9c CD000000 		.4byte	0xcd
 2195 0da0 A0       		.byte	0xa0
 2196 0da1 0A       		.uleb128 0xa
 2197 0da2 25010000 		.4byte	.LASF221
 2198 0da6 0A       		.byte	0xa
 2199 0da7 95       		.byte	0x95
 2200 0da8 C2000000 		.4byte	0xc2
 2201 0dac A4       		.byte	0xa4
 2202 0dad 0A       		.uleb128 0xa
 2203 0dae BB120000 		.4byte	.LASF222
 2204 0db2 0A       		.byte	0xa
 2205 0db3 96       		.byte	0x96
 2206 0db4 C2000000 		.4byte	0xc2
 2207 0db8 A6       		.byte	0xa6
 2208 0db9 0A       		.uleb128 0xa
 2209 0dba 83160000 		.4byte	.LASF223
 2210 0dbe 0A       		.byte	0xa
 2211 0dbf 97       		.byte	0x97
 2212 0dc0 C2000000 		.4byte	0xc2
 2213 0dc4 A8       		.byte	0xa8
 2214 0dc5 0A       		.uleb128 0xa
 2215 0dc6 E50E0000 		.4byte	.LASF224
 2216 0dca 0A       		.byte	0xa
 2217 0dcb 98       		.byte	0x98
 2218 0dcc C2000000 		.4byte	0xc2
 2219 0dd0 AA       		.byte	0xaa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 136


 2220 0dd1 0A       		.uleb128 0xa
 2221 0dd2 B9040000 		.4byte	.LASF225
 2222 0dd6 0A       		.byte	0xa
 2223 0dd7 99       		.byte	0x99
 2224 0dd8 C2000000 		.4byte	0xc2
 2225 0ddc AC       		.byte	0xac
 2226 0ddd 0A       		.uleb128 0xa
 2227 0dde 3B110000 		.4byte	.LASF226
 2228 0de2 0A       		.byte	0xa
 2229 0de3 9A       		.byte	0x9a
 2230 0de4 C2000000 		.4byte	0xc2
 2231 0de8 AE       		.byte	0xae
 2232 0de9 0A       		.uleb128 0xa
 2233 0dea ED040000 		.4byte	.LASF227
 2234 0dee 0A       		.byte	0xa
 2235 0def 9D       		.byte	0x9d
 2236 0df0 C2000000 		.4byte	0xc2
 2237 0df4 B0       		.byte	0xb0
 2238 0df5 0A       		.uleb128 0xa
 2239 0df6 FF160000 		.4byte	.LASF228
 2240 0dfa 0A       		.byte	0xa
 2241 0dfb 9E       		.byte	0x9e
 2242 0dfc CD000000 		.4byte	0xcd
 2243 0e00 B4       		.byte	0xb4
 2244 0e01 00       		.byte	0
 2245 0e02 04       		.uleb128 0x4
 2246 0e03 76190000 		.4byte	.LASF229
 2247 0e07 0A       		.byte	0xa
 2248 0e08 9F       		.byte	0x9f
 2249 0e09 F1090000 		.4byte	0x9f1
 2250 0e0d 0F       		.uleb128 0xf
 2251 0e0e 4E140000 		.4byte	.LASF230
 2252 0e12 0B       		.byte	0xb
 2253 0e13 F601     		.2byte	0x1f6
 2254 0e15 A5000000 		.4byte	0xa5
 2255 0e19 03       		.uleb128 0x3
 2256 0e1a 04       		.byte	0x4
 2257 0e1b 04       		.byte	0x4
 2258 0e1c 1E070000 		.4byte	.LASF231
 2259 0e20 03       		.uleb128 0x3
 2260 0e21 08       		.byte	0x8
 2261 0e22 04       		.byte	0x4
 2262 0e23 EE190000 		.4byte	.LASF232
 2263 0e27 0F       		.uleb128 0xf
 2264 0e28 E8190000 		.4byte	.LASF233
 2265 0e2c 0B       		.byte	0xb
 2266 0e2d EA03     		.2byte	0x3ea
 2267 0e2f AC000000 		.4byte	0xac
 2268 0e33 09       		.uleb128 0x9
 2269 0e34 24       		.byte	0x24
 2270 0e35 0C       		.byte	0xc
 2271 0e36 EF       		.byte	0xef
 2272 0e37 A80E0000 		.4byte	0xea8
 2273 0e3b 0E       		.uleb128 0xe
 2274 0e3c 6F757400 		.ascii	"out\000"
 2275 0e40 0C       		.byte	0xc
 2276 0e41 F1       		.byte	0xf1
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 137


 2277 0e42 CD000000 		.4byte	0xcd
 2278 0e46 00       		.byte	0
 2279 0e47 0A       		.uleb128 0xa
 2280 0e48 D01A0000 		.4byte	.LASF234
 2281 0e4c 0C       		.byte	0xc
 2282 0e4d F2       		.byte	0xf2
 2283 0e4e CD000000 		.4byte	0xcd
 2284 0e52 04       		.byte	0x4
 2285 0e53 0A       		.uleb128 0xa
 2286 0e54 630B0000 		.4byte	.LASF235
 2287 0e58 0C       		.byte	0xc
 2288 0e59 F3       		.byte	0xf3
 2289 0e5a CD000000 		.4byte	0xcd
 2290 0e5e 08       		.byte	0x8
 2291 0e5f 0E       		.uleb128 0xe
 2292 0e60 63666700 		.ascii	"cfg\000"
 2293 0e64 0C       		.byte	0xc
 2294 0e65 F4       		.byte	0xf4
 2295 0e66 CD000000 		.4byte	0xcd
 2296 0e6a 0C       		.byte	0xc
 2297 0e6b 0A       		.uleb128 0xa
 2298 0e6c 01010000 		.4byte	.LASF236
 2299 0e70 0C       		.byte	0xc
 2300 0e71 F5       		.byte	0xf5
 2301 0e72 CD000000 		.4byte	0xcd
 2302 0e76 10       		.byte	0x10
 2303 0e77 0A       		.uleb128 0xa
 2304 0e78 DF0D0000 		.4byte	.LASF237
 2305 0e7c 0C       		.byte	0xc
 2306 0e7d F6       		.byte	0xf6
 2307 0e7e CD000000 		.4byte	0xcd
 2308 0e82 14       		.byte	0x14
 2309 0e83 0A       		.uleb128 0xa
 2310 0e84 A5020000 		.4byte	.LASF238
 2311 0e88 0C       		.byte	0xc
 2312 0e89 F7       		.byte	0xf7
 2313 0e8a CD000000 		.4byte	0xcd
 2314 0e8e 18       		.byte	0x18
 2315 0e8f 0A       		.uleb128 0xa
 2316 0e90 64130000 		.4byte	.LASF239
 2317 0e94 0C       		.byte	0xc
 2318 0e95 F8       		.byte	0xf8
 2319 0e96 CD000000 		.4byte	0xcd
 2320 0e9a 1C       		.byte	0x1c
 2321 0e9b 0A       		.uleb128 0xa
 2322 0e9c F1070000 		.4byte	.LASF240
 2323 0ea0 0C       		.byte	0xc
 2324 0ea1 F9       		.byte	0xf9
 2325 0ea2 CD000000 		.4byte	0xcd
 2326 0ea6 20       		.byte	0x20
 2327 0ea7 00       		.byte	0
 2328 0ea8 04       		.uleb128 0x4
 2329 0ea9 2C170000 		.4byte	.LASF241
 2330 0ead 0C       		.byte	0xc
 2331 0eae FA       		.byte	0xfa
 2332 0eaf 330E0000 		.4byte	0xe33
 2333 0eb3 10       		.uleb128 0x10
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 138


 2334 0eb4 01       		.byte	0x1
 2335 0eb5 53000000 		.4byte	0x53
 2336 0eb9 03       		.byte	0x3
 2337 0eba 4E05     		.2byte	0x54e
 2338 0ebc D90E0000 		.4byte	0xed9
 2339 0ec0 11       		.uleb128 0x11
 2340 0ec1 C5000000 		.4byte	.LASF242
 2341 0ec5 00       		.byte	0
 2342 0ec6 11       		.uleb128 0x11
 2343 0ec7 B2010000 		.4byte	.LASF243
 2344 0ecb 01       		.byte	0x1
 2345 0ecc 11       		.uleb128 0x11
 2346 0ecd 0D1A0000 		.4byte	.LASF244
 2347 0ed1 00       		.byte	0
 2348 0ed2 11       		.uleb128 0x11
 2349 0ed3 00000000 		.4byte	.LASF245
 2350 0ed7 01       		.byte	0x1
 2351 0ed8 00       		.byte	0
 2352 0ed9 10       		.uleb128 0x10
 2353 0eda 04       		.byte	0x4
 2354 0edb 2C000000 		.4byte	0x2c
 2355 0edf 02       		.byte	0x2
 2356 0ee0 5102     		.2byte	0x251
 2357 0ee2 080F0000 		.4byte	0xf08
 2358 0ee6 11       		.uleb128 0x11
 2359 0ee7 C7040000 		.4byte	.LASF246
 2360 0eeb 00       		.byte	0
 2361 0eec 12       		.uleb128 0x12
 2362 0eed A7120000 		.4byte	.LASF247
 2363 0ef1 01004A00 		.4byte	0x4a0001
 2364 0ef5 12       		.uleb128 0x12
 2365 0ef6 6E010000 		.4byte	.LASF248
 2366 0efa 02004A00 		.4byte	0x4a0002
 2367 0efe 12       		.uleb128 0x12
 2368 0eff 10120000 		.4byte	.LASF249
 2369 0f03 03004A00 		.4byte	0x4a0003
 2370 0f07 00       		.byte	0
 2371 0f08 0F       		.uleb128 0xf
 2372 0f09 B90A0000 		.4byte	.LASF250
 2373 0f0d 02       		.byte	0x2
 2374 0f0e 5602     		.2byte	0x256
 2375 0f10 D90E0000 		.4byte	0xed9
 2376 0f14 10       		.uleb128 0x10
 2377 0f15 02       		.byte	0x2
 2378 0f16 77000000 		.4byte	0x77
 2379 0f1a 02       		.byte	0x2
 2380 0f1b B302     		.2byte	0x2b3
 2381 0f1d 630F0000 		.4byte	0xf63
 2382 0f21 11       		.uleb128 0x11
 2383 0f22 28140000 		.4byte	.LASF251
 2384 0f26 00       		.byte	0
 2385 0f27 11       		.uleb128 0x11
 2386 0f28 4E170000 		.4byte	.LASF252
 2387 0f2c 01       		.byte	0x1
 2388 0f2d 11       		.uleb128 0x11
 2389 0f2e 870E0000 		.4byte	.LASF253
 2390 0f32 02       		.byte	0x2
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 139


 2391 0f33 11       		.uleb128 0x11
 2392 0f34 D6140000 		.4byte	.LASF254
 2393 0f38 03       		.byte	0x3
 2394 0f39 11       		.uleb128 0x11
 2395 0f3a 3F150000 		.4byte	.LASF255
 2396 0f3e 04       		.byte	0x4
 2397 0f3f 13       		.uleb128 0x13
 2398 0f40 9F060000 		.4byte	.LASF256
 2399 0f44 0001     		.2byte	0x100
 2400 0f46 13       		.uleb128 0x13
 2401 0f47 4C120000 		.4byte	.LASF257
 2402 0f4b 1001     		.2byte	0x110
 2403 0f4d 13       		.uleb128 0x13
 2404 0f4e DB0B0000 		.4byte	.LASF258
 2405 0f52 1101     		.2byte	0x111
 2406 0f54 13       		.uleb128 0x13
 2407 0f55 FA1A0000 		.4byte	.LASF259
 2408 0f59 1201     		.2byte	0x112
 2409 0f5b 13       		.uleb128 0x13
 2410 0f5c 7B0A0000 		.4byte	.LASF260
 2411 0f60 1301     		.2byte	0x113
 2412 0f62 00       		.byte	0
 2413 0f63 10       		.uleb128 0x10
 2414 0f64 01       		.byte	0x1
 2415 0f65 53000000 		.4byte	0x53
 2416 0f69 02       		.byte	0x2
 2417 0f6a DD02     		.2byte	0x2dd
 2418 0f6c 890F0000 		.4byte	0xf89
 2419 0f70 11       		.uleb128 0x11
 2420 0f71 66160000 		.4byte	.LASF261
 2421 0f75 00       		.byte	0
 2422 0f76 11       		.uleb128 0x11
 2423 0f77 70150000 		.4byte	.LASF262
 2424 0f7b 01       		.byte	0x1
 2425 0f7c 11       		.uleb128 0x11
 2426 0f7d FD150000 		.4byte	.LASF263
 2427 0f81 02       		.byte	0x2
 2428 0f82 11       		.uleb128 0x11
 2429 0f83 190A0000 		.4byte	.LASF264
 2430 0f87 03       		.byte	0x3
 2431 0f88 00       		.byte	0
 2432 0f89 0F       		.uleb128 0xf
 2433 0f8a 1F0C0000 		.4byte	.LASF265
 2434 0f8e 02       		.byte	0x2
 2435 0f8f E202     		.2byte	0x2e2
 2436 0f91 630F0000 		.4byte	0xf63
 2437 0f95 10       		.uleb128 0x10
 2438 0f96 01       		.byte	0x1
 2439 0f97 53000000 		.4byte	0x53
 2440 0f9b 02       		.byte	0x2
 2441 0f9c E802     		.2byte	0x2e8
 2442 0f9e C10F0000 		.4byte	0xfc1
 2443 0fa2 11       		.uleb128 0x11
 2444 0fa3 160D0000 		.4byte	.LASF266
 2445 0fa7 00       		.byte	0
 2446 0fa8 11       		.uleb128 0x11
 2447 0fa9 2F0D0000 		.4byte	.LASF267
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 140


 2448 0fad 01       		.byte	0x1
 2449 0fae 11       		.uleb128 0x11
 2450 0faf 480D0000 		.4byte	.LASF268
 2451 0fb3 02       		.byte	0x2
 2452 0fb4 11       		.uleb128 0x11
 2453 0fb5 610D0000 		.4byte	.LASF269
 2454 0fb9 03       		.byte	0x3
 2455 0fba 11       		.uleb128 0x11
 2456 0fbb 7A0D0000 		.4byte	.LASF270
 2457 0fbf 04       		.byte	0x4
 2458 0fc0 00       		.byte	0
 2459 0fc1 0F       		.uleb128 0xf
 2460 0fc2 410C0000 		.4byte	.LASF271
 2461 0fc6 02       		.byte	0x2
 2462 0fc7 EE02     		.2byte	0x2ee
 2463 0fc9 950F0000 		.4byte	0xf95
 2464 0fcd 14       		.uleb128 0x14
 2465 0fce 14       		.byte	0x14
 2466 0fcf 02       		.byte	0x2
 2467 0fd0 F702     		.2byte	0x2f7
 2468 0fd2 59100000 		.4byte	0x1059
 2469 0fd6 15       		.uleb128 0x15
 2470 0fd7 1C050000 		.4byte	.LASF272
 2471 0fdb 02       		.byte	0x2
 2472 0fdc F902     		.2byte	0x2f9
 2473 0fde CD000000 		.4byte	0xcd
 2474 0fe2 00       		.byte	0
 2475 0fe3 15       		.uleb128 0x15
 2476 0fe4 FB020000 		.4byte	.LASF273
 2477 0fe8 02       		.byte	0x2
 2478 0fe9 FA02     		.2byte	0x2fa
 2479 0feb C2000000 		.4byte	0xc2
 2480 0fef 04       		.byte	0x4
 2481 0ff0 15       		.uleb128 0x15
 2482 0ff1 5B140000 		.4byte	.LASF274
 2483 0ff5 02       		.byte	0x2
 2484 0ff6 FB02     		.2byte	0x2fb
 2485 0ff8 C10F0000 		.4byte	0xfc1
 2486 0ffc 06       		.byte	0x6
 2487 0ffd 15       		.uleb128 0x15
 2488 0ffe E60D0000 		.4byte	.LASF275
 2489 1002 02       		.byte	0x2
 2490 1003 FC02     		.2byte	0x2fc
 2491 1005 59100000 		.4byte	0x1059
 2492 1009 07       		.byte	0x7
 2493 100a 15       		.uleb128 0x15
 2494 100b ED020000 		.4byte	.LASF276
 2495 100f 02       		.byte	0x2
 2496 1010 FD02     		.2byte	0x2fd
 2497 1012 C2000000 		.4byte	0xc2
 2498 1016 08       		.byte	0x8
 2499 1017 15       		.uleb128 0x15
 2500 1018 09080000 		.4byte	.LASF277
 2501 101c 02       		.byte	0x2
 2502 101d FE02     		.2byte	0x2fe
 2503 101f AC000000 		.4byte	0xac
 2504 1023 0A       		.byte	0xa
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 141


 2505 1024 15       		.uleb128 0x15
 2506 1025 B9160000 		.4byte	.LASF278
 2507 1029 02       		.byte	0x2
 2508 102a FF02     		.2byte	0x2ff
 2509 102c AC000000 		.4byte	0xac
 2510 1030 0B       		.byte	0xb
 2511 1031 15       		.uleb128 0x15
 2512 1032 9D070000 		.4byte	.LASF279
 2513 1036 02       		.byte	0x2
 2514 1037 0003     		.2byte	0x300
 2515 1039 C2000000 		.4byte	0xc2
 2516 103d 0C       		.byte	0xc
 2517 103e 15       		.uleb128 0x15
 2518 103f 3A040000 		.4byte	.LASF280
 2519 1043 02       		.byte	0x2
 2520 1044 0103     		.2byte	0x301
 2521 1046 890F0000 		.4byte	0xf89
 2522 104a 0E       		.byte	0xe
 2523 104b 15       		.uleb128 0x15
 2524 104c CA010000 		.4byte	.LASF281
 2525 1050 02       		.byte	0x2
 2526 1051 0203     		.2byte	0x302
 2527 1053 C2000000 		.4byte	0xc2
 2528 1057 10       		.byte	0x10
 2529 1058 00       		.byte	0
 2530 1059 03       		.uleb128 0x3
 2531 105a 01       		.byte	0x1
 2532 105b 02       		.byte	0x2
 2533 105c 6B0B0000 		.4byte	.LASF282
 2534 1060 0F       		.uleb128 0xf
 2535 1061 E2150000 		.4byte	.LASF283
 2536 1065 02       		.byte	0x2
 2537 1066 0303     		.2byte	0x303
 2538 1068 CD0F0000 		.4byte	0xfcd
 2539 106c 10       		.uleb128 0x10
 2540 106d 01       		.byte	0x1
 2541 106e 53000000 		.4byte	0x53
 2542 1072 02       		.byte	0x2
 2543 1073 A105     		.2byte	0x5a1
 2544 1075 DA100000 		.4byte	0x10da
 2545 1079 11       		.uleb128 0x11
 2546 107a 0F080000 		.4byte	.LASF284
 2547 107e 00       		.byte	0
 2548 107f 11       		.uleb128 0x11
 2549 1080 2B080000 		.4byte	.LASF285
 2550 1084 01       		.byte	0x1
 2551 1085 11       		.uleb128 0x11
 2552 1086 47080000 		.4byte	.LASF286
 2553 108a 02       		.byte	0x2
 2554 108b 11       		.uleb128 0x11
 2555 108c 63080000 		.4byte	.LASF287
 2556 1090 03       		.byte	0x3
 2557 1091 11       		.uleb128 0x11
 2558 1092 7F080000 		.4byte	.LASF288
 2559 1096 04       		.byte	0x4
 2560 1097 11       		.uleb128 0x11
 2561 1098 9B080000 		.4byte	.LASF289
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 142


 2562 109c 05       		.byte	0x5
 2563 109d 11       		.uleb128 0x11
 2564 109e B7080000 		.4byte	.LASF290
 2565 10a2 06       		.byte	0x6
 2566 10a3 11       		.uleb128 0x11
 2567 10a4 D3080000 		.4byte	.LASF291
 2568 10a8 07       		.byte	0x7
 2569 10a9 11       		.uleb128 0x11
 2570 10aa EF080000 		.4byte	.LASF292
 2571 10ae 08       		.byte	0x8
 2572 10af 11       		.uleb128 0x11
 2573 10b0 0B090000 		.4byte	.LASF293
 2574 10b4 09       		.byte	0x9
 2575 10b5 11       		.uleb128 0x11
 2576 10b6 82060000 		.4byte	.LASF294
 2577 10ba 0A       		.byte	0xa
 2578 10bb 11       		.uleb128 0x11
 2579 10bc 3C100000 		.4byte	.LASF295
 2580 10c0 0B       		.byte	0xb
 2581 10c1 11       		.uleb128 0x11
 2582 10c2 59100000 		.4byte	.LASF296
 2583 10c6 0C       		.byte	0xc
 2584 10c7 11       		.uleb128 0x11
 2585 10c8 76100000 		.4byte	.LASF297
 2586 10cc 0D       		.byte	0xd
 2587 10cd 11       		.uleb128 0x11
 2588 10ce D9060000 		.4byte	.LASF298
 2589 10d2 0E       		.byte	0xe
 2590 10d3 11       		.uleb128 0x11
 2591 10d4 9D100000 		.4byte	.LASF299
 2592 10d8 0F       		.byte	0xf
 2593 10d9 00       		.byte	0
 2594 10da 0F       		.uleb128 0xf
 2595 10db 4A0B0000 		.4byte	.LASF300
 2596 10df 02       		.byte	0x2
 2597 10e0 B205     		.2byte	0x5b2
 2598 10e2 6C100000 		.4byte	0x106c
 2599 10e6 10       		.uleb128 0x10
 2600 10e7 01       		.byte	0x1
 2601 10e8 53000000 		.4byte	0x53
 2602 10ec 02       		.byte	0x2
 2603 10ed BA05     		.2byte	0x5ba
 2604 10ef 0C110000 		.4byte	0x110c
 2605 10f3 11       		.uleb128 0x11
 2606 10f4 75140000 		.4byte	.LASF301
 2607 10f8 00       		.byte	0
 2608 10f9 11       		.uleb128 0x11
 2609 10fa 380A0000 		.4byte	.LASF302
 2610 10fe 01       		.byte	0x1
 2611 10ff 11       		.uleb128 0x11
 2612 1100 5F0A0000 		.4byte	.LASF303
 2613 1104 02       		.byte	0x2
 2614 1105 11       		.uleb128 0x11
 2615 1106 950A0000 		.4byte	.LASF304
 2616 110a 03       		.byte	0x3
 2617 110b 00       		.byte	0
 2618 110c 0F       		.uleb128 0xf
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 143


 2619 110d 3E050000 		.4byte	.LASF305
 2620 1111 02       		.byte	0x2
 2621 1112 BF05     		.2byte	0x5bf
 2622 1114 E6100000 		.4byte	0x10e6
 2623 1118 10       		.uleb128 0x10
 2624 1119 01       		.byte	0x1
 2625 111a 53000000 		.4byte	0x53
 2626 111e 02       		.byte	0x2
 2627 111f 2009     		.2byte	0x920
 2628 1121 3E110000 		.4byte	0x113e
 2629 1125 11       		.uleb128 0x11
 2630 1126 E31A0000 		.4byte	.LASF306
 2631 112a 00       		.byte	0
 2632 112b 11       		.uleb128 0x11
 2633 112c 9B010000 		.4byte	.LASF307
 2634 1130 01       		.byte	0x1
 2635 1131 11       		.uleb128 0x11
 2636 1132 13170000 		.4byte	.LASF308
 2637 1136 02       		.byte	0x2
 2638 1137 11       		.uleb128 0x11
 2639 1138 E0180000 		.4byte	.LASF309
 2640 113c 03       		.byte	0x3
 2641 113d 00       		.byte	0
 2642 113e 0F       		.uleb128 0xf
 2643 113f A0160000 		.4byte	.LASF310
 2644 1143 02       		.byte	0x2
 2645 1144 2509     		.2byte	0x925
 2646 1146 18110000 		.4byte	0x1118
 2647 114a 10       		.uleb128 0x10
 2648 114b 02       		.byte	0x2
 2649 114c 77000000 		.4byte	0x77
 2650 1150 02       		.byte	0x2
 2651 1151 6309     		.2byte	0x963
 2652 1153 79110000 		.4byte	0x1179
 2653 1157 11       		.uleb128 0x11
 2654 1158 AC140000 		.4byte	.LASF311
 2655 115c 00       		.byte	0
 2656 115d 11       		.uleb128 0x11
 2657 115e 7B0B0000 		.4byte	.LASF312
 2658 1162 01       		.byte	0x1
 2659 1163 13       		.uleb128 0x13
 2660 1164 78090000 		.4byte	.LASF313
 2661 1168 0101     		.2byte	0x101
 2662 116a 13       		.uleb128 0x13
 2663 116b 97090000 		.4byte	.LASF314
 2664 116f 0102     		.2byte	0x201
 2665 1171 13       		.uleb128 0x13
 2666 1172 D7090000 		.4byte	.LASF315
 2667 1176 0103     		.2byte	0x301
 2668 1178 00       		.byte	0
 2669 1179 0F       		.uleb128 0xf
 2670 117a 5C090000 		.4byte	.LASF316
 2671 117e 02       		.byte	0x2
 2672 117f 6909     		.2byte	0x969
 2673 1181 4A110000 		.4byte	0x114a
 2674 1185 10       		.uleb128 0x10
 2675 1186 01       		.byte	0x1
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 144


 2676 1187 53000000 		.4byte	0x53
 2677 118b 02       		.byte	0x2
 2678 118c F709     		.2byte	0x9f7
 2679 118e F3110000 		.4byte	0x11f3
 2680 1192 11       		.uleb128 0x11
 2681 1193 22030000 		.4byte	.LASF317
 2682 1197 00       		.byte	0
 2683 1198 11       		.uleb128 0x11
 2684 1199 3D030000 		.4byte	.LASF318
 2685 119d 01       		.byte	0x1
 2686 119e 11       		.uleb128 0x11
 2687 119f 58030000 		.4byte	.LASF319
 2688 11a3 02       		.byte	0x2
 2689 11a4 11       		.uleb128 0x11
 2690 11a5 73030000 		.4byte	.LASF320
 2691 11a9 03       		.byte	0x3
 2692 11aa 11       		.uleb128 0x11
 2693 11ab 8E030000 		.4byte	.LASF321
 2694 11af 04       		.byte	0x4
 2695 11b0 11       		.uleb128 0x11
 2696 11b1 A9030000 		.4byte	.LASF322
 2697 11b5 05       		.byte	0x5
 2698 11b6 11       		.uleb128 0x11
 2699 11b7 C4030000 		.4byte	.LASF323
 2700 11bb 06       		.byte	0x6
 2701 11bc 11       		.uleb128 0x11
 2702 11bd DF030000 		.4byte	.LASF324
 2703 11c1 07       		.byte	0x7
 2704 11c2 11       		.uleb128 0x11
 2705 11c3 B51A0000 		.4byte	.LASF325
 2706 11c7 08       		.byte	0x8
 2707 11c8 11       		.uleb128 0x11
 2708 11c9 0A040000 		.4byte	.LASF326
 2709 11cd 09       		.byte	0x9
 2710 11ce 11       		.uleb128 0x11
 2711 11cf B4170000 		.4byte	.LASF327
 2712 11d3 0A       		.byte	0xa
 2713 11d4 11       		.uleb128 0x11
 2714 11d5 20100000 		.4byte	.LASF328
 2715 11d9 0B       		.byte	0xb
 2716 11da 11       		.uleb128 0x11
 2717 11db DB170000 		.4byte	.LASF329
 2718 11df 0C       		.byte	0xc
 2719 11e0 11       		.uleb128 0x11
 2720 11e1 F7170000 		.4byte	.LASF330
 2721 11e5 0D       		.byte	0xd
 2722 11e6 11       		.uleb128 0x11
 2723 11e7 13180000 		.4byte	.LASF331
 2724 11eb 0E       		.byte	0xe
 2725 11ec 11       		.uleb128 0x11
 2726 11ed 2F180000 		.4byte	.LASF332
 2727 11f1 0F       		.byte	0xf
 2728 11f2 00       		.byte	0
 2729 11f3 0F       		.uleb128 0xf
 2730 11f4 80010000 		.4byte	.LASF333
 2731 11f8 02       		.byte	0x2
 2732 11f9 080A     		.2byte	0xa08
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 145


 2733 11fb 85110000 		.4byte	0x1185
 2734 11ff 10       		.uleb128 0x10
 2735 1200 01       		.byte	0x1
 2736 1201 53000000 		.4byte	0x53
 2737 1205 02       		.byte	0x2
 2738 1206 100A     		.2byte	0xa10
 2739 1208 2B120000 		.4byte	0x122b
 2740 120c 11       		.uleb128 0x11
 2741 120d 59110000 		.4byte	.LASF334
 2742 1211 00       		.byte	0
 2743 1212 11       		.uleb128 0x11
 2744 1213 761A0000 		.4byte	.LASF335
 2745 1217 01       		.byte	0x1
 2746 1218 11       		.uleb128 0x11
 2747 1219 8B1A0000 		.4byte	.LASF336
 2748 121d 02       		.byte	0x2
 2749 121e 11       		.uleb128 0x11
 2750 121f A01A0000 		.4byte	.LASF337
 2751 1223 03       		.byte	0x3
 2752 1224 11       		.uleb128 0x11
 2753 1225 28120000 		.4byte	.LASF338
 2754 1229 04       		.byte	0x4
 2755 122a 00       		.byte	0
 2756 122b 0F       		.uleb128 0xf
 2757 122c 4E060000 		.4byte	.LASF339
 2758 1230 02       		.byte	0x2
 2759 1231 160A     		.2byte	0xa16
 2760 1233 FF110000 		.4byte	0x11ff
 2761 1237 10       		.uleb128 0x10
 2762 1238 01       		.byte	0x1
 2763 1239 53000000 		.4byte	0x53
 2764 123d 02       		.byte	0x2
 2765 123e A70A     		.2byte	0xaa7
 2766 1240 51120000 		.4byte	0x1251
 2767 1244 11       		.uleb128 0x11
 2768 1245 8D000000 		.4byte	.LASF340
 2769 1249 00       		.byte	0
 2770 124a 11       		.uleb128 0x11
 2771 124b 11140000 		.4byte	.LASF341
 2772 124f 01       		.byte	0x1
 2773 1250 00       		.byte	0
 2774 1251 0F       		.uleb128 0xf
 2775 1252 F30E0000 		.4byte	.LASF342
 2776 1256 02       		.byte	0x2
 2777 1257 AA0A     		.2byte	0xaaa
 2778 1259 37120000 		.4byte	0x1237
 2779 125d 16       		.uleb128 0x16
 2780 125e 01       		.byte	0x1
 2781 125f 53000000 		.4byte	0x53
 2782 1263 0D       		.byte	0xd
 2783 1264 7B       		.byte	0x7b
 2784 1265 88120000 		.4byte	0x1288
 2785 1269 11       		.uleb128 0x11
 2786 126a F8050000 		.4byte	.LASF343
 2787 126e 00       		.byte	0
 2788 126f 11       		.uleb128 0x11
 2789 1270 02030000 		.4byte	.LASF344
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 146


 2790 1274 01       		.byte	0x1
 2791 1275 11       		.uleb128 0x11
 2792 1276 25060000 		.4byte	.LASF345
 2793 127a 02       		.byte	0x2
 2794 127b 11       		.uleb128 0x11
 2795 127c A6190000 		.4byte	.LASF346
 2796 1280 03       		.byte	0x3
 2797 1281 11       		.uleb128 0x11
 2798 1282 86190000 		.4byte	.LASF347
 2799 1286 04       		.byte	0x4
 2800 1287 00       		.byte	0
 2801 1288 17       		.uleb128 0x17
 2802 1289 A80C0000 		.4byte	.LASF348
 2803 128d 02       		.byte	0x2
 2804 128e FB05     		.2byte	0x5fb
 2805 1290 080F0000 		.4byte	0xf08
 2806 1294 03       		.byte	0x3
 2807 1295 B2120000 		.4byte	0x12b2
 2808 1299 18       		.uleb128 0x18
 2809 129a 87000000 		.4byte	.LASF350
 2810 129e 02       		.byte	0x2
 2811 129f FB05     		.2byte	0x5fb
 2812 12a1 CD000000 		.4byte	0xcd
 2813 12a5 19       		.uleb128 0x19
 2814 12a6 5F160000 		.4byte	.LASF352
 2815 12aa 02       		.byte	0x2
 2816 12ab FD05     		.2byte	0x5fd
 2817 12ad 080F0000 		.4byte	0xf08
 2818 12b1 00       		.byte	0
 2819 12b2 17       		.uleb128 0x17
 2820 12b3 470E0000 		.4byte	.LASF349
 2821 12b7 02       		.byte	0x2
 2822 12b8 7B06     		.2byte	0x67b
 2823 12ba 080F0000 		.4byte	0xf08
 2824 12be 03       		.byte	0x3
 2825 12bf E8120000 		.4byte	0x12e8
 2826 12c3 18       		.uleb128 0x18
 2827 12c4 87000000 		.4byte	.LASF350
 2828 12c8 02       		.byte	0x2
 2829 12c9 7B06     		.2byte	0x67b
 2830 12cb CD000000 		.4byte	0xcd
 2831 12cf 18       		.uleb128 0x18
 2832 12d0 4C130000 		.4byte	.LASF351
 2833 12d4 02       		.byte	0x2
 2834 12d5 7B06     		.2byte	0x67b
 2835 12d7 0C110000 		.4byte	0x110c
 2836 12db 19       		.uleb128 0x19
 2837 12dc 5F160000 		.4byte	.LASF352
 2838 12e0 02       		.byte	0x2
 2839 12e1 7D06     		.2byte	0x67d
 2840 12e3 080F0000 		.4byte	0xf08
 2841 12e7 00       		.byte	0
 2842 12e8 17       		.uleb128 0x17
 2843 12e9 D5100000 		.4byte	.LASF353
 2844 12ed 02       		.byte	0x2
 2845 12ee 3E06     		.2byte	0x63e
 2846 12f0 080F0000 		.4byte	0xf08
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 147


 2847 12f4 03       		.byte	0x3
 2848 12f5 1E130000 		.4byte	0x131e
 2849 12f9 18       		.uleb128 0x18
 2850 12fa 87000000 		.4byte	.LASF350
 2851 12fe 02       		.byte	0x2
 2852 12ff 3E06     		.2byte	0x63e
 2853 1301 CD000000 		.4byte	0xcd
 2854 1305 18       		.uleb128 0x18
 2855 1306 38150000 		.4byte	.LASF354
 2856 130a 02       		.byte	0x2
 2857 130b 3E06     		.2byte	0x63e
 2858 130d DA100000 		.4byte	0x10da
 2859 1311 19       		.uleb128 0x19
 2860 1312 5F160000 		.4byte	.LASF352
 2861 1316 02       		.byte	0x2
 2862 1317 4006     		.2byte	0x640
 2863 1319 080F0000 		.4byte	0xf08
 2864 131d 00       		.byte	0
 2865 131e 1A       		.uleb128 0x1a
 2866 131f 86050000 		.4byte	.LASF355
 2867 1323 02       		.byte	0x2
 2868 1324 FB08     		.2byte	0x8fb
 2869 1326 03       		.byte	0x3
 2870 1327 38130000 		.4byte	0x1338
 2871 132b 18       		.uleb128 0x18
 2872 132c 4C130000 		.4byte	.LASF351
 2873 1330 02       		.byte	0x2
 2874 1331 FB08     		.2byte	0x8fb
 2875 1333 AC000000 		.4byte	0xac
 2876 1337 00       		.byte	0
 2877 1338 1A       		.uleb128 0x1a
 2878 1339 40090000 		.4byte	.LASF356
 2879 133d 02       		.byte	0x2
 2880 133e F406     		.2byte	0x6f4
 2881 1340 03       		.byte	0x3
 2882 1341 52130000 		.4byte	0x1352
 2883 1345 18       		.uleb128 0x18
 2884 1346 4C130000 		.4byte	.LASF351
 2885 134a 02       		.byte	0x2
 2886 134b F406     		.2byte	0x6f4
 2887 134d AC000000 		.4byte	0xac
 2888 1351 00       		.byte	0
 2889 1352 1A       		.uleb128 0x1a
 2890 1353 5E180000 		.4byte	.LASF357
 2891 1357 02       		.byte	0x2
 2892 1358 BF06     		.2byte	0x6bf
 2893 135a 03       		.byte	0x3
 2894 135b 6C130000 		.4byte	0x136c
 2895 135f 18       		.uleb128 0x18
 2896 1360 4C130000 		.4byte	.LASF351
 2897 1364 02       		.byte	0x2
 2898 1365 BF06     		.2byte	0x6bf
 2899 1367 AC000000 		.4byte	0xac
 2900 136b 00       		.byte	0
 2901 136c 1A       		.uleb128 0x1a
 2902 136d 7A180000 		.4byte	.LASF358
 2903 1371 02       		.byte	0x2
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 148


 2904 1372 3D09     		.2byte	0x93d
 2905 1374 03       		.byte	0x3
 2906 1375 86130000 		.4byte	0x1386
 2907 1379 18       		.uleb128 0x18
 2908 137a 38150000 		.4byte	.LASF354
 2909 137e 02       		.byte	0x2
 2910 137f 3D09     		.2byte	0x93d
 2911 1381 3E110000 		.4byte	0x113e
 2912 1385 00       		.byte	0
 2913 1386 1A       		.uleb128 0x1a
 2914 1387 5D1A0000 		.4byte	.LASF359
 2915 138b 02       		.byte	0x2
 2916 138c 1C04     		.2byte	0x41c
 2917 138e 03       		.byte	0x3
 2918 138f 9F130000 		.4byte	0x139f
 2919 1393 1B       		.uleb128 0x1b
 2920 1394 6F6E00   		.ascii	"on\000"
 2921 1397 02       		.byte	0x2
 2922 1398 1C04     		.2byte	0x41c
 2923 139a 59100000 		.4byte	0x1059
 2924 139e 00       		.byte	0
 2925 139f 1C       		.uleb128 0x1c
 2926 13a0 EC130000 		.4byte	.LASF361
 2927 13a4 02       		.byte	0x2
 2928 13a5 E903     		.2byte	0x3e9
 2929 13a7 03       		.byte	0x3
 2930 13a8 1A       		.uleb128 0x1a
 2931 13a9 3D0F0000 		.4byte	.LASF360
 2932 13ad 02       		.byte	0x2
 2933 13ae C50A     		.2byte	0xac5
 2934 13b0 03       		.byte	0x3
 2935 13b1 C2130000 		.4byte	0x13c2
 2936 13b5 18       		.uleb128 0x18
 2937 13b6 38150000 		.4byte	.LASF354
 2938 13ba 02       		.byte	0x2
 2939 13bb C50A     		.2byte	0xac5
 2940 13bd 51120000 		.4byte	0x1251
 2941 13c1 00       		.byte	0
 2942 13c2 1C       		.uleb128 0x1c
 2943 13c3 ED010000 		.4byte	.LASF362
 2944 13c7 02       		.byte	0x2
 2945 13c8 840A     		.2byte	0xa84
 2946 13ca 03       		.byte	0x3
 2947 13cb 1A       		.uleb128 0x1a
 2948 13cc 55050000 		.4byte	.LASF363
 2949 13d0 02       		.byte	0x2
 2950 13d1 620A     		.2byte	0xa62
 2951 13d3 03       		.byte	0x3
 2952 13d4 E5130000 		.4byte	0x13e5
 2953 13d8 18       		.uleb128 0x18
 2954 13d9 4C130000 		.4byte	.LASF351
 2955 13dd 02       		.byte	0x2
 2956 13de 620A     		.2byte	0xa62
 2957 13e0 2B120000 		.4byte	0x122b
 2958 13e4 00       		.byte	0
 2959 13e5 1A       		.uleb128 0x1a
 2960 13e6 24070000 		.4byte	.LASF364
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 149


 2961 13ea 02       		.byte	0x2
 2962 13eb 3C0A     		.2byte	0xa3c
 2963 13ed 03       		.byte	0x3
 2964 13ee FF130000 		.4byte	0x13ff
 2965 13f2 18       		.uleb128 0x18
 2966 13f3 38150000 		.4byte	.LASF354
 2967 13f7 02       		.byte	0x2
 2968 13f8 3C0A     		.2byte	0xa3c
 2969 13fa F3110000 		.4byte	0x11f3
 2970 13fe 00       		.byte	0
 2971 13ff 1C       		.uleb128 0x1c
 2972 1400 AC020000 		.4byte	.LASF365
 2973 1404 02       		.byte	0x2
 2974 1405 D409     		.2byte	0x9d4
 2975 1407 03       		.byte	0x3
 2976 1408 1A       		.uleb128 0x1a
 2977 1409 65060000 		.4byte	.LASF366
 2978 140d 02       		.byte	0x2
 2979 140e B309     		.2byte	0x9b3
 2980 1410 03       		.byte	0x3
 2981 1411 22140000 		.4byte	0x1422
 2982 1415 18       		.uleb128 0x18
 2983 1416 4C130000 		.4byte	.LASF351
 2984 141a 02       		.byte	0x2
 2985 141b B309     		.2byte	0x9b3
 2986 141d AC000000 		.4byte	0xac
 2987 1421 00       		.byte	0
 2988 1422 1A       		.uleb128 0x1a
 2989 1423 43010000 		.4byte	.LASF367
 2990 1427 02       		.byte	0x2
 2991 1428 8A09     		.2byte	0x98a
 2992 142a 03       		.byte	0x3
 2993 142b 3C140000 		.4byte	0x143c
 2994 142f 18       		.uleb128 0x18
 2995 1430 38150000 		.4byte	.LASF354
 2996 1434 02       		.byte	0x2
 2997 1435 8A09     		.2byte	0x98a
 2998 1437 79110000 		.4byte	0x1179
 2999 143b 00       		.byte	0
 3000 143c 1C       		.uleb128 0x1c
 3001 143d B1150000 		.4byte	.LASF368
 3002 1441 03       		.byte	0x3
 3003 1442 2E09     		.2byte	0x92e
 3004 1444 03       		.byte	0x3
 3005 1445 1C       		.uleb128 0x1c
 3006 1446 8E040000 		.4byte	.LASF369
 3007 144a 03       		.byte	0x3
 3008 144b 6109     		.2byte	0x961
 3009 144d 03       		.byte	0x3
 3010 144e 1D       		.uleb128 0x1d
 3011 144f 29020000 		.4byte	.LASF385
 3012 1453 01       		.byte	0x1
 3013 1454 82       		.byte	0x82
 3014 1455 00000000 		.4byte	.LFB187
 3015 1459 02000000 		.4byte	.LFE187-.LFB187
 3016 145d 01       		.uleb128 0x1
 3017 145e 9C       		.byte	0x9c
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 150


 3018 145f 71140000 		.4byte	0x1471
 3019 1463 1E       		.uleb128 0x1e
 3020 1464 2C160000 		.4byte	.LASF386
 3021 1468 01       		.byte	0x1
 3022 1469 82       		.byte	0x82
 3023 146a 270E0000 		.4byte	0xe27
 3024 146e 01       		.uleb128 0x1
 3025 146f 50       		.byte	0x50
 3026 1470 00       		.byte	0
 3027 1471 1F       		.uleb128 0x1f
 3028 1472 8F160000 		.4byte	.LASF387
 3029 1476 01       		.byte	0x1
 3030 1477 94       		.byte	0x94
 3031 1478 00000000 		.4byte	.LFB188
 3032 147c A4010000 		.4byte	.LFE188-.LFB188
 3033 1480 01       		.uleb128 0x1
 3034 1481 9C       		.byte	0x9c
 3035 1482 90170000 		.4byte	0x1790
 3036 1486 20       		.uleb128 0x20
 3037 1487 400E0000 		.4byte	.LASF370
 3038 148b 01       		.byte	0x1
 3039 148c 96       		.byte	0x96
 3040 148d CD000000 		.4byte	0xcd
 3041 1491 00000000 		.4byte	.LLST0
 3042 1495 21       		.uleb128 0x21
 3043 1496 6C130000 		.4byte	0x136c
 3044 149a 04000000 		.4byte	.LBB40
 3045 149e 0E000000 		.4byte	.LBE40-.LBB40
 3046 14a2 01       		.byte	0x1
 3047 14a3 99       		.byte	0x99
 3048 14a4 B2140000 		.4byte	0x14b2
 3049 14a8 22       		.uleb128 0x22
 3050 14a9 79130000 		.4byte	0x1379
 3051 14ad 34000000 		.4byte	.LLST1
 3052 14b1 00       		.byte	0
 3053 14b2 21       		.uleb128 0x21
 3054 14b3 52130000 		.4byte	0x1352
 3055 14b7 12000000 		.4byte	.LBB42
 3056 14bb 14000000 		.4byte	.LBE42-.LBB42
 3057 14bf 01       		.byte	0x1
 3058 14c0 9C       		.byte	0x9c
 3059 14c1 CF140000 		.4byte	0x14cf
 3060 14c5 22       		.uleb128 0x22
 3061 14c6 5F130000 		.4byte	0x135f
 3062 14ca 48000000 		.4byte	.LLST2
 3063 14ce 00       		.byte	0
 3064 14cf 21       		.uleb128 0x21
 3065 14d0 38130000 		.4byte	0x1338
 3066 14d4 26000000 		.4byte	.LBB44
 3067 14d8 18000000 		.4byte	.LBE44-.LBB44
 3068 14dc 01       		.byte	0x1
 3069 14dd 9D       		.byte	0x9d
 3070 14de EC140000 		.4byte	0x14ec
 3071 14e2 22       		.uleb128 0x22
 3072 14e3 45130000 		.4byte	0x1345
 3073 14e7 5C000000 		.4byte	.LLST3
 3074 14eb 00       		.byte	0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 151


 3075 14ec 21       		.uleb128 0x21
 3076 14ed 1E130000 		.4byte	0x131e
 3077 14f1 3E000000 		.4byte	.LBB46
 3078 14f5 0E000000 		.4byte	.LBE46-.LBB46
 3079 14f9 01       		.byte	0x1
 3080 14fa 9E       		.byte	0x9e
 3081 14fb 09150000 		.4byte	0x1509
 3082 14ff 22       		.uleb128 0x22
 3083 1500 2B130000 		.4byte	0x132b
 3084 1504 70000000 		.4byte	.LLST4
 3085 1508 00       		.byte	0
 3086 1509 21       		.uleb128 0x21
 3087 150a E8120000 		.4byte	0x12e8
 3088 150e 4C000000 		.4byte	.LBB48
 3089 1512 18000000 		.4byte	.LBE48-.LBB48
 3090 1516 01       		.byte	0x1
 3091 1517 A1       		.byte	0xa1
 3092 1518 42150000 		.4byte	0x1542
 3093 151c 22       		.uleb128 0x22
 3094 151d 05130000 		.4byte	0x1305
 3095 1521 84000000 		.4byte	.LLST5
 3096 1525 22       		.uleb128 0x22
 3097 1526 F9120000 		.4byte	0x12f9
 3098 152a 84000000 		.4byte	.LLST5
 3099 152e 23       		.uleb128 0x23
 3100 152f 4C000000 		.4byte	.LBB49
 3101 1533 18000000 		.4byte	.LBE49-.LBB49
 3102 1537 24       		.uleb128 0x24
 3103 1538 11130000 		.4byte	0x1311
 3104 153c 98000000 		.4byte	.LLST7
 3105 1540 00       		.byte	0
 3106 1541 00       		.byte	0
 3107 1542 21       		.uleb128 0x21
 3108 1543 B2120000 		.4byte	0x12b2
 3109 1547 64000000 		.4byte	.LBB50
 3110 154b 16000000 		.4byte	.LBE50-.LBB50
 3111 154f 01       		.byte	0x1
 3112 1550 A2       		.byte	0xa2
 3113 1551 7B150000 		.4byte	0x157b
 3114 1555 22       		.uleb128 0x22
 3115 1556 CF120000 		.4byte	0x12cf
 3116 155a B0000000 		.4byte	.LLST8
 3117 155e 22       		.uleb128 0x22
 3118 155f C3120000 		.4byte	0x12c3
 3119 1563 B0000000 		.4byte	.LLST8
 3120 1567 23       		.uleb128 0x23
 3121 1568 64000000 		.4byte	.LBB51
 3122 156c 16000000 		.4byte	.LBE51-.LBB51
 3123 1570 24       		.uleb128 0x24
 3124 1571 DB120000 		.4byte	0x12db
 3125 1575 C4000000 		.4byte	.LLST10
 3126 1579 00       		.byte	0
 3127 157a 00       		.byte	0
 3128 157b 21       		.uleb128 0x21
 3129 157c 88120000 		.4byte	0x1288
 3130 1580 7A000000 		.4byte	.LBB52
 3131 1584 18000000 		.4byte	.LBE52-.LBB52
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 152


 3132 1588 01       		.byte	0x1
 3133 1589 A3       		.byte	0xa3
 3134 158a AB150000 		.4byte	0x15ab
 3135 158e 22       		.uleb128 0x22
 3136 158f 99120000 		.4byte	0x1299
 3137 1593 DC000000 		.4byte	.LLST11
 3138 1597 23       		.uleb128 0x23
 3139 1598 7A000000 		.4byte	.LBB53
 3140 159c 18000000 		.4byte	.LBE53-.LBB53
 3141 15a0 24       		.uleb128 0x24
 3142 15a1 A5120000 		.4byte	0x12a5
 3143 15a5 F0000000 		.4byte	.LLST12
 3144 15a9 00       		.byte	0
 3145 15aa 00       		.byte	0
 3146 15ab 25       		.uleb128 0x25
 3147 15ac BA000000 		.4byte	.LBB54
 3148 15b0 1E000000 		.4byte	.LBE54-.LBB54
 3149 15b4 EA150000 		.4byte	0x15ea
 3150 15b8 26       		.uleb128 0x26
 3151 15b9 6E040000 		.4byte	.LASF371
 3152 15bd 01       		.byte	0x1
 3153 15be AC       		.byte	0xac
 3154 15bf 90170000 		.4byte	0x1790
 3155 15c3 02       		.uleb128 0x2
 3156 15c4 91       		.byte	0x91
 3157 15c5 5C       		.sleb128 -36
 3158 15c6 27       		.uleb128 0x27
 3159 15c7 CE000000 		.4byte	.LVL14
 3160 15cb 64180000 		.4byte	0x1864
 3161 15cf DA150000 		.4byte	0x15da
 3162 15d3 28       		.uleb128 0x28
 3163 15d4 01       		.uleb128 0x1
 3164 15d5 50       		.byte	0x50
 3165 15d6 02       		.uleb128 0x2
 3166 15d7 91       		.byte	0x91
 3167 15d8 5C       		.sleb128 -36
 3168 15d9 00       		.byte	0
 3169 15da 29       		.uleb128 0x29
 3170 15db D8000000 		.4byte	.LVL16
 3171 15df 4E140000 		.4byte	0x144e
 3172 15e3 28       		.uleb128 0x28
 3173 15e4 01       		.uleb128 0x1
 3174 15e5 50       		.byte	0x50
 3175 15e6 01       		.uleb128 0x1
 3176 15e7 34       		.byte	0x34
 3177 15e8 00       		.byte	0
 3178 15e9 00       		.byte	0
 3179 15ea 21       		.uleb128 0x21
 3180 15eb 22140000 		.4byte	0x1422
 3181 15ef F6000000 		.4byte	.LBB55
 3182 15f3 0C000000 		.4byte	.LBE55-.LBB55
 3183 15f7 01       		.byte	0x1
 3184 15f8 C7       		.byte	0xc7
 3185 15f9 07160000 		.4byte	0x1607
 3186 15fd 22       		.uleb128 0x22
 3187 15fe 2F140000 		.4byte	0x142f
 3188 1602 08010000 		.4byte	.LLST13
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 153


 3189 1606 00       		.byte	0
 3190 1607 21       		.uleb128 0x21
 3191 1608 08140000 		.4byte	0x1408
 3192 160c 02010000 		.4byte	.LBB57
 3193 1610 08000000 		.4byte	.LBE57-.LBB57
 3194 1614 01       		.byte	0x1
 3195 1615 C8       		.byte	0xc8
 3196 1616 24160000 		.4byte	0x1624
 3197 161a 22       		.uleb128 0x22
 3198 161b 15140000 		.4byte	0x1415
 3199 161f 1C010000 		.4byte	.LLST14
 3200 1623 00       		.byte	0
 3201 1624 2A       		.uleb128 0x2a
 3202 1625 FF130000 		.4byte	0x13ff
 3203 1629 0A010000 		.4byte	.LBB59
 3204 162d 0A000000 		.4byte	.LBE59-.LBB59
 3205 1631 01       		.byte	0x1
 3206 1632 C9       		.byte	0xc9
 3207 1633 21       		.uleb128 0x21
 3208 1634 E5130000 		.4byte	0x13e5
 3209 1638 14010000 		.4byte	.LBB61
 3210 163c 0A000000 		.4byte	.LBE61-.LBB61
 3211 1640 01       		.byte	0x1
 3212 1641 CA       		.byte	0xca
 3213 1642 50160000 		.4byte	0x1650
 3214 1646 22       		.uleb128 0x22
 3215 1647 F2130000 		.4byte	0x13f2
 3216 164b 30010000 		.4byte	.LLST15
 3217 164f 00       		.byte	0
 3218 1650 21       		.uleb128 0x21
 3219 1651 CB130000 		.4byte	0x13cb
 3220 1655 1E010000 		.4byte	.LBB63
 3221 1659 0E000000 		.4byte	.LBE63-.LBB63
 3222 165d 01       		.byte	0x1
 3223 165e CB       		.byte	0xcb
 3224 165f 6D160000 		.4byte	0x166d
 3225 1663 22       		.uleb128 0x22
 3226 1664 D8130000 		.4byte	0x13d8
 3227 1668 44010000 		.4byte	.LLST16
 3228 166c 00       		.byte	0
 3229 166d 2A       		.uleb128 0x2a
 3230 166e C2130000 		.4byte	0x13c2
 3231 1672 2C010000 		.4byte	.LBB65
 3232 1676 0A000000 		.4byte	.LBE65-.LBB65
 3233 167a 01       		.byte	0x1
 3234 167b CC       		.byte	0xcc
 3235 167c 21       		.uleb128 0x21
 3236 167d A8130000 		.4byte	0x13a8
 3237 1681 36010000 		.4byte	.LBB67
 3238 1685 10000000 		.4byte	.LBE67-.LBB67
 3239 1689 01       		.byte	0x1
 3240 168a CD       		.byte	0xcd
 3241 168b 99160000 		.4byte	0x1699
 3242 168f 22       		.uleb128 0x22
 3243 1690 B5130000 		.4byte	0x13b5
 3244 1694 58010000 		.4byte	.LLST17
 3245 1698 00       		.byte	0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 154


 3246 1699 2A       		.uleb128 0x2a
 3247 169a 9F130000 		.4byte	0x139f
 3248 169e 4C010000 		.4byte	.LBB69
 3249 16a2 08000000 		.4byte	.LBE69-.LBB69
 3250 16a6 01       		.byte	0x1
 3251 16a7 CF       		.byte	0xcf
 3252 16a8 21       		.uleb128 0x21
 3253 16a9 86130000 		.4byte	0x1386
 3254 16ad 54010000 		.4byte	.LBB71
 3255 16b1 0A000000 		.4byte	.LBE71-.LBB71
 3256 16b5 01       		.byte	0x1
 3257 16b6 D0       		.byte	0xd0
 3258 16b7 C5160000 		.4byte	0x16c5
 3259 16bb 22       		.uleb128 0x22
 3260 16bc 93130000 		.4byte	0x1393
 3261 16c0 6C010000 		.4byte	.LLST18
 3262 16c4 00       		.byte	0
 3263 16c5 27       		.uleb128 0x27
 3264 16c6 9A000000 		.4byte	.LVL9
 3265 16ca 70180000 		.4byte	0x1870
 3266 16ce DD160000 		.4byte	0x16dd
 3267 16d2 28       		.uleb128 0x28
 3268 16d3 01       		.uleb128 0x1
 3269 16d4 50       		.byte	0x50
 3270 16d5 01       		.uleb128 0x1
 3271 16d6 31       		.byte	0x31
 3272 16d7 28       		.uleb128 0x28
 3273 16d8 01       		.uleb128 0x1
 3274 16d9 51       		.byte	0x51
 3275 16da 01       		.uleb128 0x1
 3276 16db 30       		.byte	0x30
 3277 16dc 00       		.byte	0
 3278 16dd 27       		.uleb128 0x27
 3279 16de A2000000 		.4byte	.LVL10
 3280 16e2 70180000 		.4byte	0x1870
 3281 16e6 F5160000 		.4byte	0x16f5
 3282 16ea 28       		.uleb128 0x28
 3283 16eb 01       		.uleb128 0x1
 3284 16ec 50       		.byte	0x50
 3285 16ed 01       		.uleb128 0x1
 3286 16ee 32       		.byte	0x32
 3287 16ef 28       		.uleb128 0x28
 3288 16f0 01       		.uleb128 0x1
 3289 16f1 51       		.byte	0x51
 3290 16f2 01       		.uleb128 0x1
 3291 16f3 30       		.byte	0x30
 3292 16f4 00       		.byte	0
 3293 16f5 27       		.uleb128 0x27
 3294 16f6 AA000000 		.4byte	.LVL11
 3295 16fa 70180000 		.4byte	0x1870
 3296 16fe 0D170000 		.4byte	0x170d
 3297 1702 28       		.uleb128 0x28
 3298 1703 01       		.uleb128 0x1
 3299 1704 50       		.byte	0x50
 3300 1705 01       		.uleb128 0x1
 3301 1706 33       		.byte	0x33
 3302 1707 28       		.uleb128 0x28
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 155


 3303 1708 01       		.uleb128 0x1
 3304 1709 51       		.byte	0x51
 3305 170a 01       		.uleb128 0x1
 3306 170b 30       		.byte	0x30
 3307 170c 00       		.byte	0
 3308 170d 27       		.uleb128 0x27
 3309 170e B2000000 		.4byte	.LVL12
 3310 1712 70180000 		.4byte	0x1870
 3311 1716 25170000 		.4byte	0x1725
 3312 171a 28       		.uleb128 0x28
 3313 171b 01       		.uleb128 0x1
 3314 171c 50       		.byte	0x50
 3315 171d 01       		.uleb128 0x1
 3316 171e 34       		.byte	0x34
 3317 171f 28       		.uleb128 0x28
 3318 1720 01       		.uleb128 0x1
 3319 1721 51       		.byte	0x51
 3320 1722 01       		.uleb128 0x1
 3321 1723 30       		.byte	0x30
 3322 1724 00       		.byte	0
 3323 1725 27       		.uleb128 0x27
 3324 1726 BA000000 		.4byte	.LVL13
 3325 172a 70180000 		.4byte	0x1870
 3326 172e 3D170000 		.4byte	0x173d
 3327 1732 28       		.uleb128 0x28
 3328 1733 01       		.uleb128 0x1
 3329 1734 50       		.byte	0x50
 3330 1735 01       		.uleb128 0x1
 3331 1736 30       		.byte	0x30
 3332 1737 28       		.uleb128 0x28
 3333 1738 01       		.uleb128 0x1
 3334 1739 51       		.byte	0x51
 3335 173a 01       		.uleb128 0x1
 3336 173b 30       		.byte	0x30
 3337 173c 00       		.byte	0
 3338 173d 27       		.uleb128 0x27
 3339 173e EC000000 		.4byte	.LVL18
 3340 1742 7C180000 		.4byte	0x187c
 3341 1746 54170000 		.4byte	0x1754
 3342 174a 28       		.uleb128 0x28
 3343 174b 01       		.uleb128 0x1
 3344 174c 50       		.byte	0x50
 3345 174d 05       		.uleb128 0x5
 3346 174e 0C       		.byte	0xc
 3347 174f 400D0300 		.4byte	0x30d40
 3348 1753 00       		.byte	0
 3349 1754 27       		.uleb128 0x27
 3350 1755 F6000000 		.4byte	.LVL20
 3351 1759 4E140000 		.4byte	0x144e
 3352 175d 67170000 		.4byte	0x1767
 3353 1761 28       		.uleb128 0x28
 3354 1762 01       		.uleb128 0x1
 3355 1763 50       		.byte	0x50
 3356 1764 01       		.uleb128 0x1
 3357 1765 34       		.byte	0x34
 3358 1766 00       		.byte	0
 3359 1767 27       		.uleb128 0x27
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 156


 3360 1768 4C010000 		.4byte	.LVL29
 3361 176c 88180000 		.4byte	0x1888
 3362 1770 7A170000 		.4byte	0x177a
 3363 1774 28       		.uleb128 0x28
 3364 1775 01       		.uleb128 0x1
 3365 1776 50       		.byte	0x50
 3366 1777 01       		.uleb128 0x1
 3367 1778 30       		.byte	0x30
 3368 1779 00       		.byte	0
 3369 177a 29       		.uleb128 0x29
 3370 177b 66010000 		.4byte	.LVL32
 3371 177f 93180000 		.4byte	0x1893
 3372 1783 28       		.uleb128 0x28
 3373 1784 01       		.uleb128 0x1
 3374 1785 50       		.byte	0x50
 3375 1786 01       		.uleb128 0x1
 3376 1787 30       		.byte	0x30
 3377 1788 28       		.uleb128 0x28
 3378 1789 01       		.uleb128 0x1
 3379 178a 51       		.byte	0x51
 3380 178b 02       		.uleb128 0x2
 3381 178c 08       		.byte	0x8
 3382 178d 64       		.byte	0x64
 3383 178e 00       		.byte	0
 3384 178f 00       		.byte	0
 3385 1790 06       		.uleb128 0x6
 3386 1791 60100000 		.4byte	0x1060
 3387 1795 2B       		.uleb128 0x2b
 3388 1796 080D0000 		.4byte	.LASF388
 3389 179a 01       		.byte	0x1
 3390 179b 0201     		.2byte	0x102
 3391 179d 00000000 		.4byte	.LFB190
 3392 17a1 80000000 		.4byte	.LFE190-.LFB190
 3393 17a5 01       		.uleb128 0x1
 3394 17a6 9C       		.byte	0x9c
 3395 17a7 49180000 		.4byte	0x1849
 3396 17ab 2C       		.uleb128 0x2c
 3397 17ac 45140000 		.4byte	0x1445
 3398 17b0 1E000000 		.4byte	.LBB73
 3399 17b4 10000000 		.4byte	.LBE73-.LBB73
 3400 17b8 01       		.byte	0x1
 3401 17b9 1001     		.2byte	0x110
 3402 17bb 2C       		.uleb128 0x2c
 3403 17bc 3C140000 		.4byte	0x143c
 3404 17c0 2E000000 		.4byte	.LBB75
 3405 17c4 1C000000 		.4byte	.LBE75-.LBB75
 3406 17c8 01       		.byte	0x1
 3407 17c9 1101     		.2byte	0x111
 3408 17cb 25       		.uleb128 0x25
 3409 17cc 4E000000 		.4byte	.LBB77
 3410 17d0 1A000000 		.4byte	.LBE77-.LBB77
 3411 17d4 01180000 		.4byte	0x1801
 3412 17d8 2D       		.uleb128 0x2d
 3413 17d9 710B0000 		.4byte	.LASF372
 3414 17dd 01       		.byte	0x1
 3415 17de 1801     		.2byte	0x118
 3416 17e0 49180000 		.4byte	0x1849
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 157


 3417 17e4 02       		.uleb128 0x2
 3418 17e5 91       		.byte	0x91
 3419 17e6 4C       		.sleb128 -52
 3420 17e7 29       		.uleb128 0x29
 3421 17e8 68000000 		.4byte	.LVL38
 3422 17ec 9F180000 		.4byte	0x189f
 3423 17f0 28       		.uleb128 0x28
 3424 17f1 01       		.uleb128 0x1
 3425 17f2 50       		.byte	0x50
 3426 17f3 05       		.uleb128 0x5
 3427 17f4 0C       		.byte	0xc
 3428 17f5 00033240 		.4byte	0x40320300
 3429 17f9 28       		.uleb128 0x28
 3430 17fa 01       		.uleb128 0x1
 3431 17fb 51       		.byte	0x51
 3432 17fc 02       		.uleb128 0x2
 3433 17fd 91       		.byte	0x91
 3434 17fe 4C       		.sleb128 -52
 3435 17ff 00       		.byte	0
 3436 1800 00       		.byte	0
 3437 1801 27       		.uleb128 0x27
 3438 1802 0C000000 		.4byte	.LVL33
 3439 1806 93180000 		.4byte	0x1893
 3440 180a 1A180000 		.4byte	0x181a
 3441 180e 28       		.uleb128 0x28
 3442 180f 01       		.uleb128 0x1
 3443 1810 50       		.byte	0x50
 3444 1811 01       		.uleb128 0x1
 3445 1812 30       		.byte	0x30
 3446 1813 28       		.uleb128 0x28
 3447 1814 01       		.uleb128 0x1
 3448 1815 51       		.byte	0x51
 3449 1816 02       		.uleb128 0x2
 3450 1817 08       		.byte	0x8
 3451 1818 96       		.byte	0x96
 3452 1819 00       		.byte	0
 3453 181a 2E       		.uleb128 0x2e
 3454 181b 10000000 		.4byte	.LVL34
 3455 181f AB180000 		.4byte	0x18ab
 3456 1823 2E       		.uleb128 0x2e
 3457 1824 18000000 		.4byte	.LVL35
 3458 1828 B7180000 		.4byte	0x18b7
 3459 182c 27       		.uleb128 0x27
 3460 182d 1E000000 		.4byte	.LVL36
 3461 1831 C3180000 		.4byte	0x18c3
 3462 1835 3F180000 		.4byte	0x183f
 3463 1839 28       		.uleb128 0x28
 3464 183a 01       		.uleb128 0x1
 3465 183b 50       		.byte	0x50
 3466 183c 01       		.uleb128 0x1
 3467 183d 31       		.byte	0x31
 3468 183e 00       		.byte	0
 3469 183f 2E       		.uleb128 0x2e
 3470 1840 4E000000 		.4byte	.LVL37
 3471 1844 71140000 		.4byte	0x1471
 3472 1848 00       		.byte	0
 3473 1849 06       		.uleb128 0x6
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 158


 3474 184a A80E0000 		.4byte	0xea8
 3475 184e 2F       		.uleb128 0x2f
 3476 184f 7D000000 		.4byte	.LASF389
 3477 1853 0A       		.byte	0xa
 3478 1854 A7       		.byte	0xa7
 3479 1855 59180000 		.4byte	0x1859
 3480 1859 30       		.uleb128 0x30
 3481 185a 04       		.byte	0x4
 3482 185b 5F180000 		.4byte	0x185f
 3483 185f 06       		.uleb128 0x6
 3484 1860 020E0000 		.4byte	0xe02
 3485 1864 31       		.uleb128 0x31
 3486 1865 EB0C0000 		.4byte	.LASF373
 3487 1869 EB0C0000 		.4byte	.LASF373
 3488 186d 02       		.byte	0x2
 3489 186e 0B03     		.2byte	0x30b
 3490 1870 31       		.uleb128 0x31
 3491 1871 E6000000 		.4byte	.LASF374
 3492 1875 E6000000 		.4byte	.LASF374
 3493 1879 02       		.byte	0x2
 3494 187a CD02     		.2byte	0x2cd
 3495 187c 31       		.uleb128 0x31
 3496 187d D9040000 		.4byte	.LASF375
 3497 1881 D9040000 		.4byte	.LASF375
 3498 1885 02       		.byte	0x2
 3499 1886 0D03     		.2byte	0x30d
 3500 1888 32       		.uleb128 0x32
 3501 1889 D0120000 		.4byte	.LASF376
 3502 188d D0120000 		.4byte	.LASF376
 3503 1891 0D       		.byte	0xd
 3504 1892 90       		.byte	0x90
 3505 1893 31       		.uleb128 0x31
 3506 1894 F9140000 		.4byte	.LASF377
 3507 1898 F9140000 		.4byte	.LASF377
 3508 189c 0B       		.byte	0xb
 3509 189d A003     		.2byte	0x3a0
 3510 189f 31       		.uleb128 0x31
 3511 18a0 BF050000 		.4byte	.LASF378
 3512 18a4 BF050000 		.4byte	.LASF378
 3513 18a8 0C       		.byte	0xc
 3514 18a9 1702     		.2byte	0x217
 3515 18ab 31       		.uleb128 0x31
 3516 18ac C20B0000 		.4byte	.LASF379
 3517 18b0 C20B0000 		.4byte	.LASF379
 3518 18b4 0B       		.byte	0xb
 3519 18b5 9603     		.2byte	0x396
 3520 18b7 31       		.uleb128 0x31
 3521 18b8 CF0C0000 		.4byte	.LASF380
 3522 18bc CF0C0000 		.4byte	.LASF380
 3523 18c0 0B       		.byte	0xb
 3524 18c1 9503     		.2byte	0x395
 3525 18c3 31       		.uleb128 0x31
 3526 18c4 9B0B0000 		.4byte	.LASF381
 3527 18c8 9B0B0000 		.4byte	.LASF381
 3528 18cc 03       		.byte	0x3
 3529 18cd 6606     		.2byte	0x666
 3530 18cf 00       		.byte	0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 159


 3531              		.section	.debug_abbrev,"",%progbits
 3532              	.Ldebug_abbrev0:
 3533 0000 01       		.uleb128 0x1
 3534 0001 11       		.uleb128 0x11
 3535 0002 01       		.byte	0x1
 3536 0003 25       		.uleb128 0x25
 3537 0004 0E       		.uleb128 0xe
 3538 0005 13       		.uleb128 0x13
 3539 0006 0B       		.uleb128 0xb
 3540 0007 03       		.uleb128 0x3
 3541 0008 0E       		.uleb128 0xe
 3542 0009 1B       		.uleb128 0x1b
 3543 000a 0E       		.uleb128 0xe
 3544 000b 55       		.uleb128 0x55
 3545 000c 17       		.uleb128 0x17
 3546 000d 11       		.uleb128 0x11
 3547 000e 01       		.uleb128 0x1
 3548 000f 10       		.uleb128 0x10
 3549 0010 17       		.uleb128 0x17
 3550 0011 00       		.byte	0
 3551 0012 00       		.byte	0
 3552 0013 02       		.uleb128 0x2
 3553 0014 24       		.uleb128 0x24
 3554 0015 00       		.byte	0
 3555 0016 0B       		.uleb128 0xb
 3556 0017 0B       		.uleb128 0xb
 3557 0018 3E       		.uleb128 0x3e
 3558 0019 0B       		.uleb128 0xb
 3559 001a 03       		.uleb128 0x3
 3560 001b 08       		.uleb128 0x8
 3561 001c 00       		.byte	0
 3562 001d 00       		.byte	0
 3563 001e 03       		.uleb128 0x3
 3564 001f 24       		.uleb128 0x24
 3565 0020 00       		.byte	0
 3566 0021 0B       		.uleb128 0xb
 3567 0022 0B       		.uleb128 0xb
 3568 0023 3E       		.uleb128 0x3e
 3569 0024 0B       		.uleb128 0xb
 3570 0025 03       		.uleb128 0x3
 3571 0026 0E       		.uleb128 0xe
 3572 0027 00       		.byte	0
 3573 0028 00       		.byte	0
 3574 0029 04       		.uleb128 0x4
 3575 002a 16       		.uleb128 0x16
 3576 002b 00       		.byte	0
 3577 002c 03       		.uleb128 0x3
 3578 002d 0E       		.uleb128 0xe
 3579 002e 3A       		.uleb128 0x3a
 3580 002f 0B       		.uleb128 0xb
 3581 0030 3B       		.uleb128 0x3b
 3582 0031 0B       		.uleb128 0xb
 3583 0032 49       		.uleb128 0x49
 3584 0033 13       		.uleb128 0x13
 3585 0034 00       		.byte	0
 3586 0035 00       		.byte	0
 3587 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 160


 3588 0037 35       		.uleb128 0x35
 3589 0038 00       		.byte	0
 3590 0039 49       		.uleb128 0x49
 3591 003a 13       		.uleb128 0x13
 3592 003b 00       		.byte	0
 3593 003c 00       		.byte	0
 3594 003d 06       		.uleb128 0x6
 3595 003e 26       		.uleb128 0x26
 3596 003f 00       		.byte	0
 3597 0040 49       		.uleb128 0x49
 3598 0041 13       		.uleb128 0x13
 3599 0042 00       		.byte	0
 3600 0043 00       		.byte	0
 3601 0044 07       		.uleb128 0x7
 3602 0045 01       		.uleb128 0x1
 3603 0046 01       		.byte	0x1
 3604 0047 49       		.uleb128 0x49
 3605 0048 13       		.uleb128 0x13
 3606 0049 01       		.uleb128 0x1
 3607 004a 13       		.uleb128 0x13
 3608 004b 00       		.byte	0
 3609 004c 00       		.byte	0
 3610 004d 08       		.uleb128 0x8
 3611 004e 21       		.uleb128 0x21
 3612 004f 00       		.byte	0
 3613 0050 49       		.uleb128 0x49
 3614 0051 13       		.uleb128 0x13
 3615 0052 2F       		.uleb128 0x2f
 3616 0053 0B       		.uleb128 0xb
 3617 0054 00       		.byte	0
 3618 0055 00       		.byte	0
 3619 0056 09       		.uleb128 0x9
 3620 0057 13       		.uleb128 0x13
 3621 0058 01       		.byte	0x1
 3622 0059 0B       		.uleb128 0xb
 3623 005a 0B       		.uleb128 0xb
 3624 005b 3A       		.uleb128 0x3a
 3625 005c 0B       		.uleb128 0xb
 3626 005d 3B       		.uleb128 0x3b
 3627 005e 0B       		.uleb128 0xb
 3628 005f 01       		.uleb128 0x1
 3629 0060 13       		.uleb128 0x13
 3630 0061 00       		.byte	0
 3631 0062 00       		.byte	0
 3632 0063 0A       		.uleb128 0xa
 3633 0064 0D       		.uleb128 0xd
 3634 0065 00       		.byte	0
 3635 0066 03       		.uleb128 0x3
 3636 0067 0E       		.uleb128 0xe
 3637 0068 3A       		.uleb128 0x3a
 3638 0069 0B       		.uleb128 0xb
 3639 006a 3B       		.uleb128 0x3b
 3640 006b 0B       		.uleb128 0xb
 3641 006c 49       		.uleb128 0x49
 3642 006d 13       		.uleb128 0x13
 3643 006e 38       		.uleb128 0x38
 3644 006f 0B       		.uleb128 0xb
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 161


 3645 0070 00       		.byte	0
 3646 0071 00       		.byte	0
 3647 0072 0B       		.uleb128 0xb
 3648 0073 13       		.uleb128 0x13
 3649 0074 01       		.byte	0x1
 3650 0075 0B       		.uleb128 0xb
 3651 0076 05       		.uleb128 0x5
 3652 0077 3A       		.uleb128 0x3a
 3653 0078 0B       		.uleb128 0xb
 3654 0079 3B       		.uleb128 0x3b
 3655 007a 0B       		.uleb128 0xb
 3656 007b 01       		.uleb128 0x1
 3657 007c 13       		.uleb128 0x13
 3658 007d 00       		.byte	0
 3659 007e 00       		.byte	0
 3660 007f 0C       		.uleb128 0xc
 3661 0080 0D       		.uleb128 0xd
 3662 0081 00       		.byte	0
 3663 0082 03       		.uleb128 0x3
 3664 0083 0E       		.uleb128 0xe
 3665 0084 3A       		.uleb128 0x3a
 3666 0085 0B       		.uleb128 0xb
 3667 0086 3B       		.uleb128 0x3b
 3668 0087 0B       		.uleb128 0xb
 3669 0088 49       		.uleb128 0x49
 3670 0089 13       		.uleb128 0x13
 3671 008a 38       		.uleb128 0x38
 3672 008b 05       		.uleb128 0x5
 3673 008c 00       		.byte	0
 3674 008d 00       		.byte	0
 3675 008e 0D       		.uleb128 0xd
 3676 008f 21       		.uleb128 0x21
 3677 0090 00       		.byte	0
 3678 0091 49       		.uleb128 0x49
 3679 0092 13       		.uleb128 0x13
 3680 0093 2F       		.uleb128 0x2f
 3681 0094 05       		.uleb128 0x5
 3682 0095 00       		.byte	0
 3683 0096 00       		.byte	0
 3684 0097 0E       		.uleb128 0xe
 3685 0098 0D       		.uleb128 0xd
 3686 0099 00       		.byte	0
 3687 009a 03       		.uleb128 0x3
 3688 009b 08       		.uleb128 0x8
 3689 009c 3A       		.uleb128 0x3a
 3690 009d 0B       		.uleb128 0xb
 3691 009e 3B       		.uleb128 0x3b
 3692 009f 0B       		.uleb128 0xb
 3693 00a0 49       		.uleb128 0x49
 3694 00a1 13       		.uleb128 0x13
 3695 00a2 38       		.uleb128 0x38
 3696 00a3 0B       		.uleb128 0xb
 3697 00a4 00       		.byte	0
 3698 00a5 00       		.byte	0
 3699 00a6 0F       		.uleb128 0xf
 3700 00a7 16       		.uleb128 0x16
 3701 00a8 00       		.byte	0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 162


 3702 00a9 03       		.uleb128 0x3
 3703 00aa 0E       		.uleb128 0xe
 3704 00ab 3A       		.uleb128 0x3a
 3705 00ac 0B       		.uleb128 0xb
 3706 00ad 3B       		.uleb128 0x3b
 3707 00ae 05       		.uleb128 0x5
 3708 00af 49       		.uleb128 0x49
 3709 00b0 13       		.uleb128 0x13
 3710 00b1 00       		.byte	0
 3711 00b2 00       		.byte	0
 3712 00b3 10       		.uleb128 0x10
 3713 00b4 04       		.uleb128 0x4
 3714 00b5 01       		.byte	0x1
 3715 00b6 0B       		.uleb128 0xb
 3716 00b7 0B       		.uleb128 0xb
 3717 00b8 49       		.uleb128 0x49
 3718 00b9 13       		.uleb128 0x13
 3719 00ba 3A       		.uleb128 0x3a
 3720 00bb 0B       		.uleb128 0xb
 3721 00bc 3B       		.uleb128 0x3b
 3722 00bd 05       		.uleb128 0x5
 3723 00be 01       		.uleb128 0x1
 3724 00bf 13       		.uleb128 0x13
 3725 00c0 00       		.byte	0
 3726 00c1 00       		.byte	0
 3727 00c2 11       		.uleb128 0x11
 3728 00c3 28       		.uleb128 0x28
 3729 00c4 00       		.byte	0
 3730 00c5 03       		.uleb128 0x3
 3731 00c6 0E       		.uleb128 0xe
 3732 00c7 1C       		.uleb128 0x1c
 3733 00c8 0B       		.uleb128 0xb
 3734 00c9 00       		.byte	0
 3735 00ca 00       		.byte	0
 3736 00cb 12       		.uleb128 0x12
 3737 00cc 28       		.uleb128 0x28
 3738 00cd 00       		.byte	0
 3739 00ce 03       		.uleb128 0x3
 3740 00cf 0E       		.uleb128 0xe
 3741 00d0 1C       		.uleb128 0x1c
 3742 00d1 06       		.uleb128 0x6
 3743 00d2 00       		.byte	0
 3744 00d3 00       		.byte	0
 3745 00d4 13       		.uleb128 0x13
 3746 00d5 28       		.uleb128 0x28
 3747 00d6 00       		.byte	0
 3748 00d7 03       		.uleb128 0x3
 3749 00d8 0E       		.uleb128 0xe
 3750 00d9 1C       		.uleb128 0x1c
 3751 00da 05       		.uleb128 0x5
 3752 00db 00       		.byte	0
 3753 00dc 00       		.byte	0
 3754 00dd 14       		.uleb128 0x14
 3755 00de 13       		.uleb128 0x13
 3756 00df 01       		.byte	0x1
 3757 00e0 0B       		.uleb128 0xb
 3758 00e1 0B       		.uleb128 0xb
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 163


 3759 00e2 3A       		.uleb128 0x3a
 3760 00e3 0B       		.uleb128 0xb
 3761 00e4 3B       		.uleb128 0x3b
 3762 00e5 05       		.uleb128 0x5
 3763 00e6 01       		.uleb128 0x1
 3764 00e7 13       		.uleb128 0x13
 3765 00e8 00       		.byte	0
 3766 00e9 00       		.byte	0
 3767 00ea 15       		.uleb128 0x15
 3768 00eb 0D       		.uleb128 0xd
 3769 00ec 00       		.byte	0
 3770 00ed 03       		.uleb128 0x3
 3771 00ee 0E       		.uleb128 0xe
 3772 00ef 3A       		.uleb128 0x3a
 3773 00f0 0B       		.uleb128 0xb
 3774 00f1 3B       		.uleb128 0x3b
 3775 00f2 05       		.uleb128 0x5
 3776 00f3 49       		.uleb128 0x49
 3777 00f4 13       		.uleb128 0x13
 3778 00f5 38       		.uleb128 0x38
 3779 00f6 0B       		.uleb128 0xb
 3780 00f7 00       		.byte	0
 3781 00f8 00       		.byte	0
 3782 00f9 16       		.uleb128 0x16
 3783 00fa 04       		.uleb128 0x4
 3784 00fb 01       		.byte	0x1
 3785 00fc 0B       		.uleb128 0xb
 3786 00fd 0B       		.uleb128 0xb
 3787 00fe 49       		.uleb128 0x49
 3788 00ff 13       		.uleb128 0x13
 3789 0100 3A       		.uleb128 0x3a
 3790 0101 0B       		.uleb128 0xb
 3791 0102 3B       		.uleb128 0x3b
 3792 0103 0B       		.uleb128 0xb
 3793 0104 01       		.uleb128 0x1
 3794 0105 13       		.uleb128 0x13
 3795 0106 00       		.byte	0
 3796 0107 00       		.byte	0
 3797 0108 17       		.uleb128 0x17
 3798 0109 2E       		.uleb128 0x2e
 3799 010a 01       		.byte	0x1
 3800 010b 03       		.uleb128 0x3
 3801 010c 0E       		.uleb128 0xe
 3802 010d 3A       		.uleb128 0x3a
 3803 010e 0B       		.uleb128 0xb
 3804 010f 3B       		.uleb128 0x3b
 3805 0110 05       		.uleb128 0x5
 3806 0111 27       		.uleb128 0x27
 3807 0112 19       		.uleb128 0x19
 3808 0113 49       		.uleb128 0x49
 3809 0114 13       		.uleb128 0x13
 3810 0115 20       		.uleb128 0x20
 3811 0116 0B       		.uleb128 0xb
 3812 0117 01       		.uleb128 0x1
 3813 0118 13       		.uleb128 0x13
 3814 0119 00       		.byte	0
 3815 011a 00       		.byte	0
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 164


 3816 011b 18       		.uleb128 0x18
 3817 011c 05       		.uleb128 0x5
 3818 011d 00       		.byte	0
 3819 011e 03       		.uleb128 0x3
 3820 011f 0E       		.uleb128 0xe
 3821 0120 3A       		.uleb128 0x3a
 3822 0121 0B       		.uleb128 0xb
 3823 0122 3B       		.uleb128 0x3b
 3824 0123 05       		.uleb128 0x5
 3825 0124 49       		.uleb128 0x49
 3826 0125 13       		.uleb128 0x13
 3827 0126 00       		.byte	0
 3828 0127 00       		.byte	0
 3829 0128 19       		.uleb128 0x19
 3830 0129 34       		.uleb128 0x34
 3831 012a 00       		.byte	0
 3832 012b 03       		.uleb128 0x3
 3833 012c 0E       		.uleb128 0xe
 3834 012d 3A       		.uleb128 0x3a
 3835 012e 0B       		.uleb128 0xb
 3836 012f 3B       		.uleb128 0x3b
 3837 0130 05       		.uleb128 0x5
 3838 0131 49       		.uleb128 0x49
 3839 0132 13       		.uleb128 0x13
 3840 0133 00       		.byte	0
 3841 0134 00       		.byte	0
 3842 0135 1A       		.uleb128 0x1a
 3843 0136 2E       		.uleb128 0x2e
 3844 0137 01       		.byte	0x1
 3845 0138 03       		.uleb128 0x3
 3846 0139 0E       		.uleb128 0xe
 3847 013a 3A       		.uleb128 0x3a
 3848 013b 0B       		.uleb128 0xb
 3849 013c 3B       		.uleb128 0x3b
 3850 013d 05       		.uleb128 0x5
 3851 013e 27       		.uleb128 0x27
 3852 013f 19       		.uleb128 0x19
 3853 0140 20       		.uleb128 0x20
 3854 0141 0B       		.uleb128 0xb
 3855 0142 01       		.uleb128 0x1
 3856 0143 13       		.uleb128 0x13
 3857 0144 00       		.byte	0
 3858 0145 00       		.byte	0
 3859 0146 1B       		.uleb128 0x1b
 3860 0147 05       		.uleb128 0x5
 3861 0148 00       		.byte	0
 3862 0149 03       		.uleb128 0x3
 3863 014a 08       		.uleb128 0x8
 3864 014b 3A       		.uleb128 0x3a
 3865 014c 0B       		.uleb128 0xb
 3866 014d 3B       		.uleb128 0x3b
 3867 014e 05       		.uleb128 0x5
 3868 014f 49       		.uleb128 0x49
 3869 0150 13       		.uleb128 0x13
 3870 0151 00       		.byte	0
 3871 0152 00       		.byte	0
 3872 0153 1C       		.uleb128 0x1c
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 165


 3873 0154 2E       		.uleb128 0x2e
 3874 0155 00       		.byte	0
 3875 0156 03       		.uleb128 0x3
 3876 0157 0E       		.uleb128 0xe
 3877 0158 3A       		.uleb128 0x3a
 3878 0159 0B       		.uleb128 0xb
 3879 015a 3B       		.uleb128 0x3b
 3880 015b 05       		.uleb128 0x5
 3881 015c 27       		.uleb128 0x27
 3882 015d 19       		.uleb128 0x19
 3883 015e 20       		.uleb128 0x20
 3884 015f 0B       		.uleb128 0xb
 3885 0160 00       		.byte	0
 3886 0161 00       		.byte	0
 3887 0162 1D       		.uleb128 0x1d
 3888 0163 2E       		.uleb128 0x2e
 3889 0164 01       		.byte	0x1
 3890 0165 03       		.uleb128 0x3
 3891 0166 0E       		.uleb128 0xe
 3892 0167 3A       		.uleb128 0x3a
 3893 0168 0B       		.uleb128 0xb
 3894 0169 3B       		.uleb128 0x3b
 3895 016a 0B       		.uleb128 0xb
 3896 016b 27       		.uleb128 0x27
 3897 016c 19       		.uleb128 0x19
 3898 016d 8701     		.uleb128 0x87
 3899 016f 19       		.uleb128 0x19
 3900 0170 11       		.uleb128 0x11
 3901 0171 01       		.uleb128 0x1
 3902 0172 12       		.uleb128 0x12
 3903 0173 06       		.uleb128 0x6
 3904 0174 40       		.uleb128 0x40
 3905 0175 18       		.uleb128 0x18
 3906 0176 9742     		.uleb128 0x2117
 3907 0178 19       		.uleb128 0x19
 3908 0179 01       		.uleb128 0x1
 3909 017a 13       		.uleb128 0x13
 3910 017b 00       		.byte	0
 3911 017c 00       		.byte	0
 3912 017d 1E       		.uleb128 0x1e
 3913 017e 05       		.uleb128 0x5
 3914 017f 00       		.byte	0
 3915 0180 03       		.uleb128 0x3
 3916 0181 0E       		.uleb128 0xe
 3917 0182 3A       		.uleb128 0x3a
 3918 0183 0B       		.uleb128 0xb
 3919 0184 3B       		.uleb128 0x3b
 3920 0185 0B       		.uleb128 0xb
 3921 0186 49       		.uleb128 0x49
 3922 0187 13       		.uleb128 0x13
 3923 0188 02       		.uleb128 0x2
 3924 0189 18       		.uleb128 0x18
 3925 018a 00       		.byte	0
 3926 018b 00       		.byte	0
 3927 018c 1F       		.uleb128 0x1f
 3928 018d 2E       		.uleb128 0x2e
 3929 018e 01       		.byte	0x1
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 166


 3930 018f 03       		.uleb128 0x3
 3931 0190 0E       		.uleb128 0xe
 3932 0191 3A       		.uleb128 0x3a
 3933 0192 0B       		.uleb128 0xb
 3934 0193 3B       		.uleb128 0x3b
 3935 0194 0B       		.uleb128 0xb
 3936 0195 27       		.uleb128 0x27
 3937 0196 19       		.uleb128 0x19
 3938 0197 11       		.uleb128 0x11
 3939 0198 01       		.uleb128 0x1
 3940 0199 12       		.uleb128 0x12
 3941 019a 06       		.uleb128 0x6
 3942 019b 40       		.uleb128 0x40
 3943 019c 18       		.uleb128 0x18
 3944 019d 9742     		.uleb128 0x2117
 3945 019f 19       		.uleb128 0x19
 3946 01a0 01       		.uleb128 0x1
 3947 01a1 13       		.uleb128 0x13
 3948 01a2 00       		.byte	0
 3949 01a3 00       		.byte	0
 3950 01a4 20       		.uleb128 0x20
 3951 01a5 34       		.uleb128 0x34
 3952 01a6 00       		.byte	0
 3953 01a7 03       		.uleb128 0x3
 3954 01a8 0E       		.uleb128 0xe
 3955 01a9 3A       		.uleb128 0x3a
 3956 01aa 0B       		.uleb128 0xb
 3957 01ab 3B       		.uleb128 0x3b
 3958 01ac 0B       		.uleb128 0xb
 3959 01ad 49       		.uleb128 0x49
 3960 01ae 13       		.uleb128 0x13
 3961 01af 02       		.uleb128 0x2
 3962 01b0 17       		.uleb128 0x17
 3963 01b1 00       		.byte	0
 3964 01b2 00       		.byte	0
 3965 01b3 21       		.uleb128 0x21
 3966 01b4 1D       		.uleb128 0x1d
 3967 01b5 01       		.byte	0x1
 3968 01b6 31       		.uleb128 0x31
 3969 01b7 13       		.uleb128 0x13
 3970 01b8 11       		.uleb128 0x11
 3971 01b9 01       		.uleb128 0x1
 3972 01ba 12       		.uleb128 0x12
 3973 01bb 06       		.uleb128 0x6
 3974 01bc 58       		.uleb128 0x58
 3975 01bd 0B       		.uleb128 0xb
 3976 01be 59       		.uleb128 0x59
 3977 01bf 0B       		.uleb128 0xb
 3978 01c0 01       		.uleb128 0x1
 3979 01c1 13       		.uleb128 0x13
 3980 01c2 00       		.byte	0
 3981 01c3 00       		.byte	0
 3982 01c4 22       		.uleb128 0x22
 3983 01c5 05       		.uleb128 0x5
 3984 01c6 00       		.byte	0
 3985 01c7 31       		.uleb128 0x31
 3986 01c8 13       		.uleb128 0x13
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 167


 3987 01c9 02       		.uleb128 0x2
 3988 01ca 17       		.uleb128 0x17
 3989 01cb 00       		.byte	0
 3990 01cc 00       		.byte	0
 3991 01cd 23       		.uleb128 0x23
 3992 01ce 0B       		.uleb128 0xb
 3993 01cf 01       		.byte	0x1
 3994 01d0 11       		.uleb128 0x11
 3995 01d1 01       		.uleb128 0x1
 3996 01d2 12       		.uleb128 0x12
 3997 01d3 06       		.uleb128 0x6
 3998 01d4 00       		.byte	0
 3999 01d5 00       		.byte	0
 4000 01d6 24       		.uleb128 0x24
 4001 01d7 34       		.uleb128 0x34
 4002 01d8 00       		.byte	0
 4003 01d9 31       		.uleb128 0x31
 4004 01da 13       		.uleb128 0x13
 4005 01db 02       		.uleb128 0x2
 4006 01dc 17       		.uleb128 0x17
 4007 01dd 00       		.byte	0
 4008 01de 00       		.byte	0
 4009 01df 25       		.uleb128 0x25
 4010 01e0 0B       		.uleb128 0xb
 4011 01e1 01       		.byte	0x1
 4012 01e2 11       		.uleb128 0x11
 4013 01e3 01       		.uleb128 0x1
 4014 01e4 12       		.uleb128 0x12
 4015 01e5 06       		.uleb128 0x6
 4016 01e6 01       		.uleb128 0x1
 4017 01e7 13       		.uleb128 0x13
 4018 01e8 00       		.byte	0
 4019 01e9 00       		.byte	0
 4020 01ea 26       		.uleb128 0x26
 4021 01eb 34       		.uleb128 0x34
 4022 01ec 00       		.byte	0
 4023 01ed 03       		.uleb128 0x3
 4024 01ee 0E       		.uleb128 0xe
 4025 01ef 3A       		.uleb128 0x3a
 4026 01f0 0B       		.uleb128 0xb
 4027 01f1 3B       		.uleb128 0x3b
 4028 01f2 0B       		.uleb128 0xb
 4029 01f3 49       		.uleb128 0x49
 4030 01f4 13       		.uleb128 0x13
 4031 01f5 02       		.uleb128 0x2
 4032 01f6 18       		.uleb128 0x18
 4033 01f7 00       		.byte	0
 4034 01f8 00       		.byte	0
 4035 01f9 27       		.uleb128 0x27
 4036 01fa 898201   		.uleb128 0x4109
 4037 01fd 01       		.byte	0x1
 4038 01fe 11       		.uleb128 0x11
 4039 01ff 01       		.uleb128 0x1
 4040 0200 31       		.uleb128 0x31
 4041 0201 13       		.uleb128 0x13
 4042 0202 01       		.uleb128 0x1
 4043 0203 13       		.uleb128 0x13
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 168


 4044 0204 00       		.byte	0
 4045 0205 00       		.byte	0
 4046 0206 28       		.uleb128 0x28
 4047 0207 8A8201   		.uleb128 0x410a
 4048 020a 00       		.byte	0
 4049 020b 02       		.uleb128 0x2
 4050 020c 18       		.uleb128 0x18
 4051 020d 9142     		.uleb128 0x2111
 4052 020f 18       		.uleb128 0x18
 4053 0210 00       		.byte	0
 4054 0211 00       		.byte	0
 4055 0212 29       		.uleb128 0x29
 4056 0213 898201   		.uleb128 0x4109
 4057 0216 01       		.byte	0x1
 4058 0217 11       		.uleb128 0x11
 4059 0218 01       		.uleb128 0x1
 4060 0219 31       		.uleb128 0x31
 4061 021a 13       		.uleb128 0x13
 4062 021b 00       		.byte	0
 4063 021c 00       		.byte	0
 4064 021d 2A       		.uleb128 0x2a
 4065 021e 1D       		.uleb128 0x1d
 4066 021f 00       		.byte	0
 4067 0220 31       		.uleb128 0x31
 4068 0221 13       		.uleb128 0x13
 4069 0222 11       		.uleb128 0x11
 4070 0223 01       		.uleb128 0x1
 4071 0224 12       		.uleb128 0x12
 4072 0225 06       		.uleb128 0x6
 4073 0226 58       		.uleb128 0x58
 4074 0227 0B       		.uleb128 0xb
 4075 0228 59       		.uleb128 0x59
 4076 0229 0B       		.uleb128 0xb
 4077 022a 00       		.byte	0
 4078 022b 00       		.byte	0
 4079 022c 2B       		.uleb128 0x2b
 4080 022d 2E       		.uleb128 0x2e
 4081 022e 01       		.byte	0x1
 4082 022f 3F       		.uleb128 0x3f
 4083 0230 19       		.uleb128 0x19
 4084 0231 03       		.uleb128 0x3
 4085 0232 0E       		.uleb128 0xe
 4086 0233 3A       		.uleb128 0x3a
 4087 0234 0B       		.uleb128 0xb
 4088 0235 3B       		.uleb128 0x3b
 4089 0236 05       		.uleb128 0x5
 4090 0237 27       		.uleb128 0x27
 4091 0238 19       		.uleb128 0x19
 4092 0239 11       		.uleb128 0x11
 4093 023a 01       		.uleb128 0x1
 4094 023b 12       		.uleb128 0x12
 4095 023c 06       		.uleb128 0x6
 4096 023d 40       		.uleb128 0x40
 4097 023e 18       		.uleb128 0x18
 4098 023f 9742     		.uleb128 0x2117
 4099 0241 19       		.uleb128 0x19
 4100 0242 01       		.uleb128 0x1
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 169


 4101 0243 13       		.uleb128 0x13
 4102 0244 00       		.byte	0
 4103 0245 00       		.byte	0
 4104 0246 2C       		.uleb128 0x2c
 4105 0247 1D       		.uleb128 0x1d
 4106 0248 00       		.byte	0
 4107 0249 31       		.uleb128 0x31
 4108 024a 13       		.uleb128 0x13
 4109 024b 11       		.uleb128 0x11
 4110 024c 01       		.uleb128 0x1
 4111 024d 12       		.uleb128 0x12
 4112 024e 06       		.uleb128 0x6
 4113 024f 58       		.uleb128 0x58
 4114 0250 0B       		.uleb128 0xb
 4115 0251 59       		.uleb128 0x59
 4116 0252 05       		.uleb128 0x5
 4117 0253 00       		.byte	0
 4118 0254 00       		.byte	0
 4119 0255 2D       		.uleb128 0x2d
 4120 0256 34       		.uleb128 0x34
 4121 0257 00       		.byte	0
 4122 0258 03       		.uleb128 0x3
 4123 0259 0E       		.uleb128 0xe
 4124 025a 3A       		.uleb128 0x3a
 4125 025b 0B       		.uleb128 0xb
 4126 025c 3B       		.uleb128 0x3b
 4127 025d 05       		.uleb128 0x5
 4128 025e 49       		.uleb128 0x49
 4129 025f 13       		.uleb128 0x13
 4130 0260 02       		.uleb128 0x2
 4131 0261 18       		.uleb128 0x18
 4132 0262 00       		.byte	0
 4133 0263 00       		.byte	0
 4134 0264 2E       		.uleb128 0x2e
 4135 0265 898201   		.uleb128 0x4109
 4136 0268 00       		.byte	0
 4137 0269 11       		.uleb128 0x11
 4138 026a 01       		.uleb128 0x1
 4139 026b 31       		.uleb128 0x31
 4140 026c 13       		.uleb128 0x13
 4141 026d 00       		.byte	0
 4142 026e 00       		.byte	0
 4143 026f 2F       		.uleb128 0x2f
 4144 0270 34       		.uleb128 0x34
 4145 0271 00       		.byte	0
 4146 0272 03       		.uleb128 0x3
 4147 0273 0E       		.uleb128 0xe
 4148 0274 3A       		.uleb128 0x3a
 4149 0275 0B       		.uleb128 0xb
 4150 0276 3B       		.uleb128 0x3b
 4151 0277 0B       		.uleb128 0xb
 4152 0278 49       		.uleb128 0x49
 4153 0279 13       		.uleb128 0x13
 4154 027a 3F       		.uleb128 0x3f
 4155 027b 19       		.uleb128 0x19
 4156 027c 3C       		.uleb128 0x3c
 4157 027d 19       		.uleb128 0x19
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 170


 4158 027e 00       		.byte	0
 4159 027f 00       		.byte	0
 4160 0280 30       		.uleb128 0x30
 4161 0281 0F       		.uleb128 0xf
 4162 0282 00       		.byte	0
 4163 0283 0B       		.uleb128 0xb
 4164 0284 0B       		.uleb128 0xb
 4165 0285 49       		.uleb128 0x49
 4166 0286 13       		.uleb128 0x13
 4167 0287 00       		.byte	0
 4168 0288 00       		.byte	0
 4169 0289 31       		.uleb128 0x31
 4170 028a 2E       		.uleb128 0x2e
 4171 028b 00       		.byte	0
 4172 028c 3F       		.uleb128 0x3f
 4173 028d 19       		.uleb128 0x19
 4174 028e 3C       		.uleb128 0x3c
 4175 028f 19       		.uleb128 0x19
 4176 0290 6E       		.uleb128 0x6e
 4177 0291 0E       		.uleb128 0xe
 4178 0292 03       		.uleb128 0x3
 4179 0293 0E       		.uleb128 0xe
 4180 0294 3A       		.uleb128 0x3a
 4181 0295 0B       		.uleb128 0xb
 4182 0296 3B       		.uleb128 0x3b
 4183 0297 05       		.uleb128 0x5
 4184 0298 00       		.byte	0
 4185 0299 00       		.byte	0
 4186 029a 32       		.uleb128 0x32
 4187 029b 2E       		.uleb128 0x2e
 4188 029c 00       		.byte	0
 4189 029d 3F       		.uleb128 0x3f
 4190 029e 19       		.uleb128 0x19
 4191 029f 3C       		.uleb128 0x3c
 4192 02a0 19       		.uleb128 0x19
 4193 02a1 6E       		.uleb128 0x6e
 4194 02a2 0E       		.uleb128 0xe
 4195 02a3 03       		.uleb128 0x3
 4196 02a4 0E       		.uleb128 0xe
 4197 02a5 3A       		.uleb128 0x3a
 4198 02a6 0B       		.uleb128 0xb
 4199 02a7 3B       		.uleb128 0x3b
 4200 02a8 0B       		.uleb128 0xb
 4201 02a9 00       		.byte	0
 4202 02aa 00       		.byte	0
 4203 02ab 00       		.byte	0
 4204              		.section	.debug_loc,"",%progbits
 4205              	.Ldebug_loc0:
 4206              	.LLST0:
 4207 0000 CE000000 		.4byte	.LVL14
 4208 0004 D4000000 		.4byte	.LVL15
 4209 0008 0100     		.2byte	0x1
 4210 000a 50       		.byte	0x50
 4211 000b D8000000 		.4byte	.LVL16
 4212 000f E0000000 		.4byte	.LVL17
 4213 0013 0100     		.2byte	0x1
 4214 0015 50       		.byte	0x50
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 171


 4215 0016 EC000000 		.4byte	.LVL18
 4216 001a F2000000 		.4byte	.LVL19
 4217 001e 0100     		.2byte	0x1
 4218 0020 50       		.byte	0x50
 4219 0021 F6000000 		.4byte	.LVL20
 4220 0025 48010000 		.4byte	.LVL28
 4221 0029 0100     		.2byte	0x1
 4222 002b 50       		.byte	0x50
 4223 002c 00000000 		.4byte	0
 4224 0030 00000000 		.4byte	0
 4225              	.LLST1:
 4226 0034 04000000 		.4byte	.LVL1
 4227 0038 12000000 		.4byte	.LVL2
 4228 003c 0200     		.2byte	0x2
 4229 003e 30       		.byte	0x30
 4230 003f 9F       		.byte	0x9f
 4231 0040 00000000 		.4byte	0
 4232 0044 00000000 		.4byte	0
 4233              	.LLST2:
 4234 0048 12000000 		.4byte	.LVL2
 4235 004c 26000000 		.4byte	.LVL3
 4236 0050 0200     		.2byte	0x2
 4237 0052 30       		.byte	0x30
 4238 0053 9F       		.byte	0x9f
 4239 0054 00000000 		.4byte	0
 4240 0058 00000000 		.4byte	0
 4241              	.LLST3:
 4242 005c 26000000 		.4byte	.LVL3
 4243 0060 3E000000 		.4byte	.LVL4
 4244 0064 0200     		.2byte	0x2
 4245 0066 31       		.byte	0x31
 4246 0067 9F       		.byte	0x9f
 4247 0068 00000000 		.4byte	0
 4248 006c 00000000 		.4byte	0
 4249              	.LLST4:
 4250 0070 3E000000 		.4byte	.LVL4
 4251 0074 4C000000 		.4byte	.LVL5
 4252 0078 0200     		.2byte	0x2
 4253 007a 30       		.byte	0x30
 4254 007b 9F       		.byte	0x9f
 4255 007c 00000000 		.4byte	0
 4256 0080 00000000 		.4byte	0
 4257              	.LLST5:
 4258 0084 4C000000 		.4byte	.LVL5
 4259 0088 64000000 		.4byte	.LVL6
 4260 008c 0200     		.2byte	0x2
 4261 008e 30       		.byte	0x30
 4262 008f 9F       		.byte	0x9f
 4263 0090 00000000 		.4byte	0
 4264 0094 00000000 		.4byte	0
 4265              	.LLST7:
 4266 0098 4C000000 		.4byte	.LVL5
 4267 009c 64000000 		.4byte	.LVL6
 4268 00a0 0600     		.2byte	0x6
 4269 00a2 0C       		.byte	0xc
 4270 00a3 01004A00 		.4byte	0x4a0001
 4271 00a7 9F       		.byte	0x9f
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 172


 4272 00a8 00000000 		.4byte	0
 4273 00ac 00000000 		.4byte	0
 4274              	.LLST8:
 4275 00b0 64000000 		.4byte	.LVL6
 4276 00b4 7A000000 		.4byte	.LVL7
 4277 00b8 0200     		.2byte	0x2
 4278 00ba 30       		.byte	0x30
 4279 00bb 9F       		.byte	0x9f
 4280 00bc 00000000 		.4byte	0
 4281 00c0 00000000 		.4byte	0
 4282              	.LLST10:
 4283 00c4 64000000 		.4byte	.LVL6
 4284 00c8 7A000000 		.4byte	.LVL7
 4285 00cc 0600     		.2byte	0x6
 4286 00ce 0C       		.byte	0xc
 4287 00cf 01004A00 		.4byte	0x4a0001
 4288 00d3 9F       		.byte	0x9f
 4289 00d4 00000000 		.4byte	0
 4290 00d8 00000000 		.4byte	0
 4291              	.LLST11:
 4292 00dc 7A000000 		.4byte	.LVL7
 4293 00e0 92000000 		.4byte	.LVL8
 4294 00e4 0200     		.2byte	0x2
 4295 00e6 30       		.byte	0x30
 4296 00e7 9F       		.byte	0x9f
 4297 00e8 00000000 		.4byte	0
 4298 00ec 00000000 		.4byte	0
 4299              	.LLST12:
 4300 00f0 7A000000 		.4byte	.LVL7
 4301 00f4 92000000 		.4byte	.LVL8
 4302 00f8 0600     		.2byte	0x6
 4303 00fa 0C       		.byte	0xc
 4304 00fb 01004A00 		.4byte	0x4a0001
 4305 00ff 9F       		.byte	0x9f
 4306 0100 00000000 		.4byte	0
 4307 0104 00000000 		.4byte	0
 4308              	.LLST13:
 4309 0108 F6000000 		.4byte	.LVL20
 4310 010c 02010000 		.4byte	.LVL21
 4311 0110 0200     		.2byte	0x2
 4312 0112 30       		.byte	0x30
 4313 0113 9F       		.byte	0x9f
 4314 0114 00000000 		.4byte	0
 4315 0118 00000000 		.4byte	0
 4316              	.LLST14:
 4317 011c 02010000 		.4byte	.LVL21
 4318 0120 0A010000 		.4byte	.LVL22
 4319 0124 0200     		.2byte	0x2
 4320 0126 30       		.byte	0x30
 4321 0127 9F       		.byte	0x9f
 4322 0128 00000000 		.4byte	0
 4323 012c 00000000 		.4byte	0
 4324              	.LLST15:
 4325 0130 14010000 		.4byte	.LVL23
 4326 0134 1E010000 		.4byte	.LVL24
 4327 0138 0200     		.2byte	0x2
 4328 013a 30       		.byte	0x30
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 173


 4329 013b 9F       		.byte	0x9f
 4330 013c 00000000 		.4byte	0
 4331 0140 00000000 		.4byte	0
 4332              	.LLST16:
 4333 0144 1E010000 		.4byte	.LVL24
 4334 0148 2C010000 		.4byte	.LVL25
 4335 014c 0200     		.2byte	0x2
 4336 014e 32       		.byte	0x32
 4337 014f 9F       		.byte	0x9f
 4338 0150 00000000 		.4byte	0
 4339 0154 00000000 		.4byte	0
 4340              	.LLST17:
 4341 0158 36010000 		.4byte	.LVL26
 4342 015c 46010000 		.4byte	.LVL27
 4343 0160 0200     		.2byte	0x2
 4344 0162 31       		.byte	0x31
 4345 0163 9F       		.byte	0x9f
 4346 0164 00000000 		.4byte	0
 4347 0168 00000000 		.4byte	0
 4348              	.LLST18:
 4349 016c 54010000 		.4byte	.LVL30
 4350 0170 5E010000 		.4byte	.LVL31
 4351 0174 0200     		.2byte	0x2
 4352 0176 31       		.byte	0x31
 4353 0177 9F       		.byte	0x9f
 4354 0178 00000000 		.4byte	0
 4355 017c 00000000 		.4byte	0
 4356              		.section	.debug_aranges,"",%progbits
 4357 0000 2C000000 		.4byte	0x2c
 4358 0004 0200     		.2byte	0x2
 4359 0006 00000000 		.4byte	.Ldebug_info0
 4360 000a 04       		.byte	0x4
 4361 000b 00       		.byte	0
 4362 000c 0000     		.2byte	0
 4363 000e 0000     		.2byte	0
 4364 0010 00000000 		.4byte	.LFB187
 4365 0014 02000000 		.4byte	.LFE187-.LFB187
 4366 0018 00000000 		.4byte	.LFB188
 4367 001c A4010000 		.4byte	.LFE188-.LFB188
 4368 0020 00000000 		.4byte	.LFB190
 4369 0024 80000000 		.4byte	.LFE190-.LFB190
 4370 0028 00000000 		.4byte	0
 4371 002c 00000000 		.4byte	0
 4372              		.section	.debug_ranges,"",%progbits
 4373              	.Ldebug_ranges0:
 4374 0000 00000000 		.4byte	.LFB187
 4375 0004 02000000 		.4byte	.LFE187
 4376 0008 00000000 		.4byte	.LFB188
 4377 000c A4010000 		.4byte	.LFE188
 4378 0010 00000000 		.4byte	.LFB190
 4379 0014 80000000 		.4byte	.LFE190
 4380 0018 00000000 		.4byte	0
 4381 001c 00000000 		.4byte	0
 4382              		.section	.debug_line,"",%progbits
 4383              	.Ldebug_line0:
 4384 0000 2A040000 		.section	.debug_str,"MS",%progbits,1
 4384      02007603 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 174


 4384      00000201 
 4384      FB0E0D00 
 4384      01010101 
 4385              	.LASF245:
 4386 0000 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_1_1V\000"
 4386      5953504D 
 4386      5F4C444F 
 4386      5F564F4C 
 4386      54414745 
 4387              	.LASF140:
 4388 001a 4241434B 		.ascii	"BACKUP_Type\000"
 4388      55505F54 
 4388      79706500 
 4389              	.LASF10:
 4390 0026 6C6F6E67 		.ascii	"long int\000"
 4390      20696E74 
 4390      00
 4391              	.LASF20:
 4392 002f 52455345 		.ascii	"RESERVED\000"
 4392      52564544 
 4392      00
 4393              	.LASF133:
 4394 0038 5644445F 		.ascii	"VDD_ACTIVE\000"
 4394      41435449 
 4394      564500
 4395              	.LASF129:
 4396 0043 494E5452 		.ascii	"INTR_CAUSE0\000"
 4396      5F434155 
 4396      53453000 
 4397              	.LASF130:
 4398 004f 494E5452 		.ascii	"INTR_CAUSE1\000"
 4398      5F434155 
 4398      53453100 
 4399              	.LASF131:
 4400 005b 494E5452 		.ascii	"INTR_CAUSE2\000"
 4400      5F434155 
 4400      53453200 
 4401              	.LASF132:
 4402 0067 494E5452 		.ascii	"INTR_CAUSE3\000"
 4402      5F434155 
 4402      53453300 
 4403              	.LASF139:
 4404 0073 53525353 		.ascii	"SRSS_Type\000"
 4404      5F547970 
 4404      6500
 4405              	.LASF389:
 4406 007d 63795F64 		.ascii	"cy_device\000"
 4406      65766963 
 4406      6500
 4407              	.LASF350:
 4408 0087 636C6B48 		.ascii	"clkHf\000"
 4408      6600
 4409              	.LASF340:
 4410 008d 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_WCO\000"
 4410      5953434C 
 4410      4B5F4241 
 4410      4B5F494E 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 175


 4410      5F57434F 
 4411              	.LASF213:
 4412 00a2 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4412      73436D30 
 4412      436C6F63 
 4412      6B43746C 
 4412      4F666673 
 4413              	.LASF172:
 4414 00b9 70657269 		.ascii	"periClockNr\000"
 4414      436C6F63 
 4414      6B4E7200 
 4415              	.LASF242:
 4416 00c5 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_ULP\000"
 4416      5953504D 
 4416      5F4C444F 
 4416      5F564F4C 
 4416      54414745 
 4417              	.LASF146:
 4418 00de 75646242 		.ascii	"udbBase\000"
 4418      61736500 
 4419              	.LASF374:
 4420 00e6 43795F53 		.ascii	"Cy_SysClk_ClkPathSetSource\000"
 4420      7973436C 
 4420      6B5F436C 
 4420      6B506174 
 4420      68536574 
 4421              	.LASF236:
 4422 0101 63666749 		.ascii	"cfgIn\000"
 4422      6E00
 4423              	.LASF145:
 4424 0107 70657269 		.ascii	"periBase\000"
 4424      42617365 
 4424      00
 4425              	.LASF32:
 4426 0110 4D435744 		.ascii	"MCWDT_STRUCT_V1_Type\000"
 4426      545F5354 
 4426      52554354 
 4426      5F56315F 
 4426      54797065 
 4427              	.LASF221:
 4428 0125 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4428      73436D30 
 4428      4E6D6943 
 4428      746C4F66 
 4428      66736574 
 4429              	.LASF191:
 4430 013a 64774368 		.ascii	"dwChSize\000"
 4430      53697A65 
 4430      00
 4431              	.LASF367:
 4432 0143 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetSource\000"
 4432      7973436C 
 4432      6B5F436C 
 4432      6B54696D 
 4432      65725365 
 4433              	.LASF69:
 4434 015f 434C4B5F 		.ascii	"CLK_FLL_STATUS\000"
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 176


 4434      464C4C5F 
 4434      53544154 
 4434      555300
 4435              	.LASF248:
 4436 016e 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4436      5953434C 
 4436      4B5F5449 
 4436      4D454F55 
 4436      5400
 4437              	.LASF333:
 4438 0180 63795F65 		.ascii	"cy_en_clkpump_in_sources_t\000"
 4438      6E5F636C 
 4438      6B70756D 
 4438      705F696E 
 4438      5F736F75 
 4439              	.LASF307:
 4440 019b 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_WCO\000"
 4440      5953434C 
 4440      4B5F434C 
 4440      4B4C465F 
 4440      494E5F57 
 4441              	.LASF243:
 4442 01b2 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_LP\000"
 4442      5953504D 
 4442      5F4C444F 
 4442      5F564F4C 
 4442      54414745 
 4443              	.LASF281:
 4444 01ca 63636F5F 		.ascii	"cco_Freq\000"
 4444      46726571 
 4444      00
 4445              	.LASF38:
 4446 01d3 5057525F 		.ascii	"PWR_LVD_STATUS\000"
 4446      4C56445F 
 4446      53544154 
 4446      555300
 4447              	.LASF82:
 4448 01e2 5245535F 		.ascii	"RES_CAUSE2\000"
 4448      43415553 
 4448      453200
 4449              	.LASF362:
 4450 01ed 43795F53 		.ascii	"Cy_SysClk_ClkPumpEnable\000"
 4450      7973436C 
 4450      6B5F436C 
 4450      6B50756D 
 4450      70456E61 
 4451              	.LASF173:
 4452 0205 736D6966 		.ascii	"smifDeviceNr\000"
 4452      44657669 
 4452      63654E72 
 4452      00
 4453              	.LASF203:
 4454 0212 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4454      44697643 
 4454      6D645061 
 4454      54797065 
 4454      53656C50 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 177


 4455              	.LASF385:
 4456 0229 4379436C 		.ascii	"CyClockStartupError\000"
 4456      6F636B53 
 4456      74617274 
 4456      75704572 
 4456      726F7200 
 4457              	.LASF77:
 4458 023d 53525353 		.ascii	"SRSS_INTR_MASK\000"
 4458      5F494E54 
 4458      525F4D41 
 4458      534B00
 4459              	.LASF126:
 4460 024c 4346475F 		.ascii	"CFG_SIO\000"
 4460      53494F00 
 4461              	.LASF384:
 4462 0254 433A5C55 		.ascii	"C:\\Users\\tester\\Documents\\GitHub\\Smartbottle_0"
 4462      73657273 
 4462      5C746573 
 4462      7465725C 
 4462      446F6375 
 4463 0282 5F315C66 		.ascii	"_1\\flash\\Kit_flash\\Kit_flash.cydsn\000"
 4463      6C617368 
 4463      5C4B6974 
 4463      5F666C61 
 4463      73685C4B 
 4464              	.LASF238:
 4465 02a5 63666753 		.ascii	"cfgSIO\000"
 4465      494F00
 4466              	.LASF365:
 4467 02ac 43795F53 		.ascii	"Cy_SysClk_ClkTimerEnable\000"
 4467      7973436C 
 4467      6B5F436C 
 4467      6B54696D 
 4467      6572456E 
 4468              	.LASF53:
 4469 02c5 434C4B5F 		.ascii	"CLK_ILO_CONFIG\000"
 4469      494C4F5F 
 4469      434F4E46 
 4469      494700
 4470              	.LASF143:
 4471 02d4 63707573 		.ascii	"cpussBase\000"
 4471      73426173 
 4471      6500
 4472              	.LASF54:
 4473 02de 434C4B5F 		.ascii	"CLK_IMO_CONFIG\000"
 4473      494D4F5F 
 4473      434F4E46 
 4473      494700
 4474              	.LASF276:
 4475 02ed 6C6F636B 		.ascii	"lockTolerance\000"
 4475      546F6C65 
 4475      72616E63 
 4475      6500
 4476              	.LASF273:
 4477 02fb 72656644 		.ascii	"refDiv\000"
 4477      697600
 4478              	.LASF344:
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 178


 4479 0302 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_IMO\000"
 4479      59535449 
 4479      434B5F43 
 4479      4C4F434B 
 4479      5F534F55 
 4480              	.LASF317:
 4481 0322 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH0\000"
 4481      5953434C 
 4481      4B5F5055 
 4481      4D505F49 
 4481      4E5F434C 
 4482              	.LASF318:
 4483 033d 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH1\000"
 4483      5953434C 
 4483      4B5F5055 
 4483      4D505F49 
 4483      4E5F434C 
 4484              	.LASF319:
 4485 0358 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH2\000"
 4485      5953434C 
 4485      4B5F5055 
 4485      4D505F49 
 4485      4E5F434C 
 4486              	.LASF320:
 4487 0373 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH3\000"
 4487      5953434C 
 4487      4B5F5055 
 4487      4D505F49 
 4487      4E5F434C 
 4488              	.LASF321:
 4489 038e 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH4\000"
 4489      5953434C 
 4489      4B5F5055 
 4489      4D505F49 
 4489      4E5F434C 
 4490              	.LASF322:
 4491 03a9 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH5\000"
 4491      5953434C 
 4491      4B5F5055 
 4491      4D505F49 
 4491      4E5F434C 
 4492              	.LASF323:
 4493 03c4 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH6\000"
 4493      5953434C 
 4493      4B5F5055 
 4493      4D505F49 
 4493      4E5F434C 
 4494              	.LASF324:
 4495 03df 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH7\000"
 4495      5953434C 
 4495      4B5F5055 
 4495      4D505F49 
 4495      4E5F434C 
 4496              	.LASF56:
 4497 03fa 434C4B5F 		.ascii	"CLK_OUTPUT_SLOW\000"
 4497      4F555450 
 4497      55545F53 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 179


 4497      4C4F5700 
 4498              	.LASF326:
 4499 040a 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH9\000"
 4499      5953434C 
 4499      4B5F5055 
 4499      4D505F49 
 4499      4E5F434C 
 4500              	.LASF168:
 4501 0425 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4501      734E6F74 
 4501      436F6E6E 
 4501      65637465 
 4501      64497271 
 4502              	.LASF280:
 4503 043a 6F757470 		.ascii	"outputMode\000"
 4503      75744D6F 
 4503      646500
 4504              	.LASF7:
 4505 0445 73686F72 		.ascii	"short int\000"
 4505      7420696E 
 4505      7400
 4506              	.LASF50:
 4507 044f 434C4B5F 		.ascii	"CLK_SELECT\000"
 4507      53454C45 
 4507      435400
 4508              	.LASF167:
 4509 045a 63707573 		.ascii	"cpussFmIrq\000"
 4509      73466D49 
 4509      727100
 4510              	.LASF103:
 4511 0465 5254435F 		.ascii	"RTC_TIME\000"
 4511      54494D45 
 4511      00
 4512              	.LASF371:
 4513 046e 666C6C43 		.ascii	"fllConfig\000"
 4513      6F6E6669 
 4513      6700
 4514              	.LASF202:
 4515 0478 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4515      44697643 
 4515      6D645061 
 4515      44697653 
 4515      656C506F 
 4516              	.LASF369:
 4517 048e 43795F53 		.ascii	"Cy_SysPm_PmicUnlock\000"
 4517      7973506D 
 4517      5F506D69 
 4517      63556E6C 
 4517      6F636B00 
 4518              	.LASF110:
 4519 04a2 494E5452 		.ascii	"INTR_SET\000"
 4519      5F534554 
 4519      00
 4520              	.LASF179:
 4521 04ab 63727970 		.ascii	"cryptoMemSize\000"
 4521      746F4D65 
 4521      6D53697A 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 180


 4521      6500
 4522              	.LASF225:
 4523 04b9 63707573 		.ascii	"cpussRam1Ctl0\000"
 4523      7352616D 
 4523      3143746C 
 4523      3000
 4524              	.LASF246:
 4525 04c7 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4525      5953434C 
 4525      4B5F5355 
 4525      43434553 
 4525      5300
 4526              	.LASF375:
 4527 04d9 43795F53 		.ascii	"Cy_SysClk_FllEnable\000"
 4527      7973436C 
 4527      6B5F466C 
 4527      6C456E61 
 4527      626C6500 
 4528              	.LASF227:
 4529 04ed 69706353 		.ascii	"ipcStructSize\000"
 4529      74727563 
 4529      7453697A 
 4529      6500
 4530              	.LASF85:
 4531 04fb 5057525F 		.ascii	"PWR_TRIM_BODOVP_CTL\000"
 4531      5452494D 
 4531      5F424F44 
 4531      4F56505F 
 4531      43544C00 
 4532              	.LASF199:
 4533 050f 70657269 		.ascii	"periTrGrSize\000"
 4533      54724772 
 4533      53697A65 
 4533      00
 4534              	.LASF272:
 4535 051c 666C6C4D 		.ascii	"fllMult\000"
 4535      756C7400 
 4536              	.LASF161:
 4537 0524 70726F74 		.ascii	"protVersion\000"
 4537      56657273 
 4537      696F6E00 
 4538              	.LASF79:
 4539 0530 53525353 		.ascii	"SRSS_INTR_CFG\000"
 4539      5F494E54 
 4539      525F4346 
 4539      4700
 4540              	.LASF305:
 4541 053e 63795F65 		.ascii	"cy_en_clkhf_dividers_t\000"
 4541      6E5F636C 
 4541      6B68665F 
 4541      64697669 
 4541      64657273 
 4542              	.LASF363:
 4543 0555 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetDivider\000"
 4543      7973436C 
 4543      6B5F436C 
 4543      6B50756D 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 181


 4543      70536574 
 4544              	.LASF201:
 4545 0571 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4545      44697643 
 4545      6D645479 
 4545      70655365 
 4545      6C506F73 
 4546              	.LASF355:
 4547 0586 43795F53 		.ascii	"Cy_SysClk_ClkSlowSetDivider\000"
 4547      7973436C 
 4547      6B5F436C 
 4547      6B536C6F 
 4547      77536574 
 4548              	.LASF218:
 4549 05a2 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4549      73547269 
 4549      6D52616D 
 4549      43746C4F 
 4549      66667365 
 4550              	.LASF124:
 4551 05b8 4346475F 		.ascii	"CFG_IN\000"
 4551      494E00
 4552              	.LASF378:
 4553 05bf 43795F47 		.ascii	"Cy_GPIO_Port_Init\000"
 4553      50494F5F 
 4553      506F7274 
 4553      5F496E69 
 4553      7400
 4554              	.LASF33:
 4555 05d1 5057525F 		.ascii	"PWR_CTL\000"
 4555      43544C00 
 4556              	.LASF89:
 4557 05d9 5057525F 		.ascii	"PWR_TRIM_WAKE_CTL\000"
 4557      5452494D 
 4557      5F57414B 
 4557      455F4354 
 4557      4C00
 4558              	.LASF39:
 4559 05eb 5057525F 		.ascii	"PWR_HIB_DATA\000"
 4559      4849425F 
 4559      44415441 
 4559      00
 4560              	.LASF343:
 4561 05f8 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_LF\000"
 4561      59535449 
 4561      434B5F43 
 4561      4C4F434B 
 4561      5F534F55 
 4562              	.LASF22:
 4563 0617 4D435744 		.ascii	"MCWDT_CNTHIGH\000"
 4563      545F434E 
 4563      54484947 
 4563      4800
 4564              	.LASF345:
 4565 0625 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_ECO\000"
 4565      59535449 
 4565      434B5F43 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 182


 4565      4C4F434B 
 4565      5F534F55 
 4566              	.LASF19:
 4567 0645 75696E74 		.ascii	"uint32_t\000"
 4567      33325F74 
 4567      00
 4568              	.LASF339:
 4569 064e 63795F65 		.ascii	"cy_en_clkpump_divide_t\000"
 4569      6E5F636C 
 4569      6B70756D 
 4569      705F6469 
 4569      76696465 
 4570              	.LASF366:
 4571 0665 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetDivider\000"
 4571      7973436C 
 4571      6B5F436C 
 4571      6B54696D 
 4571      65725365 
 4572              	.LASF294:
 4573 0682 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH10\000"
 4573      5953434C 
 4573      4B5F434C 
 4573      4B48465F 
 4573      494E5F43 
 4574              	.LASF256:
 4575 069f 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSI\000"
 4575      5953434C 
 4575      4B5F434C 
 4575      4B504154 
 4575      485F494E 
 4576              	.LASF138:
 4577 06b8 4750494F 		.ascii	"GPIO_V1_Type\000"
 4577      5F56315F 
 4577      54797065 
 4577      00
 4578              	.LASF211:
 4579 06c5 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4579      50727443 
 4579      66674F75 
 4579      744F6666 
 4579      73657400 
 4580              	.LASF298:
 4581 06d9 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH14\000"
 4581      5953434C 
 4581      4B5F434C 
 4581      4B48465F 
 4581      494E5F43 
 4582              	.LASF109:
 4583 06f6 494E5452 		.ascii	"INTR\000"
 4583      00
 4584              	.LASF93:
 4585 06fb 434C4B5F 		.ascii	"CLK_TRIM_ILO_CTL\000"
 4585      5452494D 
 4585      5F494C4F 
 4585      5F43544C 
 4585      00
 4586              	.LASF29:
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 183


 4587 070c 4D435744 		.ascii	"MCWDT_INTR_MASKED\000"
 4587      545F494E 
 4587      54525F4D 
 4587      41534B45 
 4587      4400
 4588              	.LASF231:
 4589 071e 666C6F61 		.ascii	"float\000"
 4589      7400
 4590              	.LASF364:
 4591 0724 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetSource\000"
 4591      7973436C 
 4591      6B5F436C 
 4591      6B50756D 
 4591      70536574 
 4592              	.LASF154:
 4593 073f 63727970 		.ascii	"cryptoVersion\000"
 4593      746F5665 
 4593      7273696F 
 4593      6E00
 4594              	.LASF183:
 4595 074d 666C6173 		.ascii	"flashProgramDelay\000"
 4595      6850726F 
 4595      6772616D 
 4595      44656C61 
 4595      7900
 4596              	.LASF120:
 4597 075f 4F55545F 		.ascii	"OUT_CLR\000"
 4597      434C5200 
 4598              	.LASF31:
 4599 0767 52455345 		.ascii	"RESERVED1\000"
 4599      52564544 
 4599      3100
 4600              	.LASF17:
 4601 0771 696E7431 		.ascii	"int16_t\000"
 4601      365F7400 
 4602              	.LASF210:
 4603 0779 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4603      50727443 
 4603      6667496E 
 4603      4F666673 
 4603      657400
 4604              	.LASF95:
 4605 078c 434C4B5F 		.ascii	"CLK_TRIM_ECO_CTL\000"
 4605      5452494D 
 4605      5F45434F 
 4605      5F43544C 
 4605      00
 4606              	.LASF279:
 4607 079d 73657474 		.ascii	"settlingCount\000"
 4607      6C696E67 
 4607      436F756E 
 4607      7400
 4608              	.LASF91:
 4609 07ab 5057525F 		.ascii	"PWR_TRIM_LVD_CTL\000"
 4609      5452494D 
 4609      5F4C5644 
 4609      5F43544C 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 184


 4609      00
 4610              	.LASF13:
 4611 07bc 6C6F6E67 		.ascii	"long long unsigned int\000"
 4611      206C6F6E 
 4611      6720756E 
 4611      7369676E 
 4611      65642069 
 4612              	.LASF207:
 4613 07d3 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4613      44697632 
 4613      345F3543 
 4613      746C4F66 
 4613      66736574 
 4614              	.LASF115:
 4615 07e8 504D4943 		.ascii	"PMIC_CTL\000"
 4615      5F43544C 
 4615      00
 4616              	.LASF240:
 4617 07f1 73656C31 		.ascii	"sel1Active\000"
 4617      41637469 
 4617      766500
 4618              	.LASF166:
 4619 07fc 63707573 		.ascii	"cpussIpc0Irq\000"
 4619      73497063 
 4619      30497271 
 4619      00
 4620              	.LASF277:
 4621 0809 69676169 		.ascii	"igain\000"
 4621      6E00
 4622              	.LASF284:
 4623 080f 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH0\000"
 4623      5953434C 
 4623      4B5F434C 
 4623      4B48465F 
 4623      494E5F43 
 4624              	.LASF285:
 4625 082b 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH1\000"
 4625      5953434C 
 4625      4B5F434C 
 4625      4B48465F 
 4625      494E5F43 
 4626              	.LASF286:
 4627 0847 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH2\000"
 4627      5953434C 
 4627      4B5F434C 
 4627      4B48465F 
 4627      494E5F43 
 4628              	.LASF287:
 4629 0863 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH3\000"
 4629      5953434C 
 4629      4B5F434C 
 4629      4B48465F 
 4629      494E5F43 
 4630              	.LASF288:
 4631 087f 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH4\000"
 4631      5953434C 
 4631      4B5F434C 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 185


 4631      4B48465F 
 4631      494E5F43 
 4632              	.LASF289:
 4633 089b 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH5\000"
 4633      5953434C 
 4633      4B5F434C 
 4633      4B48465F 
 4633      494E5F43 
 4634              	.LASF290:
 4635 08b7 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH6\000"
 4635      5953434C 
 4635      4B5F434C 
 4635      4B48465F 
 4635      494E5F43 
 4636              	.LASF291:
 4637 08d3 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH7\000"
 4637      5953434C 
 4637      4B5F434C 
 4637      4B48465F 
 4637      494E5F43 
 4638              	.LASF292:
 4639 08ef 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH8\000"
 4639      5953434C 
 4639      4B5F434C 
 4639      4B48465F 
 4639      494E5F43 
 4640              	.LASF293:
 4641 090b 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH9\000"
 4641      5953434C 
 4641      4B5F434C 
 4641      4B48465F 
 4641      494E5F43 
 4642              	.LASF8:
 4643 0927 5F5F7569 		.ascii	"__uint16_t\000"
 4643      6E743136 
 4643      5F7400
 4644              	.LASF37:
 4645 0932 5057525F 		.ascii	"PWR_BUCK_CTL2\000"
 4645      4255434B 
 4645      5F43544C 
 4645      3200
 4646              	.LASF356:
 4647 0940 43795F53 		.ascii	"Cy_SysClk_ClkPeriSetDivider\000"
 4647      7973436C 
 4647      6B5F436C 
 4647      6B506572 
 4647      69536574 
 4648              	.LASF316:
 4649 095c 63795F65 		.ascii	"cy_en_clktimer_in_sources_t\000"
 4649      6E5F636C 
 4649      6B74696D 
 4649      65725F69 
 4649      6E5F736F 
 4650              	.LASF313:
 4651 0978 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV2\000"
 4651      5953434C 
 4651      4B5F434C 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 186


 4651      4B54494D 
 4651      45525F49 
 4652              	.LASF314:
 4653 0997 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV4\000"
 4653      5953434C 
 4653      4B5F434C 
 4653      4B54494D 
 4653      45525F49 
 4654              	.LASF65:
 4655 09b6 434C4B5F 		.ascii	"CLK_FLL_CONFIG\000"
 4655      464C4C5F 
 4655      434F4E46 
 4655      494700
 4656              	.LASF125:
 4657 09c5 4346475F 		.ascii	"CFG_OUT\000"
 4657      4F555400 
 4658              	.LASF105:
 4659 09cd 414C4D31 		.ascii	"ALM1_TIME\000"
 4659      5F54494D 
 4659      4500
 4660              	.LASF315:
 4661 09d7 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV8\000"
 4661      5953434C 
 4661      4B5F434C 
 4661      4B54494D 
 4661      45525F49 
 4662              	.LASF61:
 4663 09f6 434C4B5F 		.ascii	"CLK_ECO_STATUS\000"
 4663      45434F5F 
 4663      53544154 
 4663      555300
 4664              	.LASF188:
 4665 0a05 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4665      6843746C 
 4665      4D61696E 
 4665      57733346 
 4665      72657100 
 4666              	.LASF264:
 4667 0a19 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT\000"
 4667      5953434C 
 4667      4B5F464C 
 4667      4C504C4C 
 4667      5F4F5554 
 4668              	.LASF302:
 4669 0a38 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_2\000"
 4669      5953434C 
 4669      4B5F434C 
 4669      4B48465F 
 4669      44495649 
 4670              	.LASF170:
 4671 0a54 73727373 		.ascii	"srssNumPll\000"
 4671      4E756D50 
 4671      6C6C00
 4672              	.LASF303:
 4673 0a5f 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_4\000"
 4673      5953434C 
 4673      4B5F434C 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 187


 4673      4B48465F 
 4673      44495649 
 4674              	.LASF260:
 4675 0a7b 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_PILO\000"
 4675      5953434C 
 4675      4B5F434C 
 4675      4B504154 
 4675      485F494E 
 4676              	.LASF304:
 4677 0a95 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_8\000"
 4677      5953434C 
 4677      4B5F434C 
 4677      4B48465F 
 4677      44495649 
 4678              	.LASF121:
 4679 0ab1 4F55545F 		.ascii	"OUT_SET\000"
 4679      53455400 
 4680              	.LASF250:
 4681 0ab9 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4681      6E5F7379 
 4681      73636C6B 
 4681      5F737461 
 4681      7475735F 
 4682              	.LASF66:
 4683 0acf 434C4B5F 		.ascii	"CLK_FLL_CONFIG2\000"
 4683      464C4C5F 
 4683      434F4E46 
 4683      49473200 
 4684              	.LASF67:
 4685 0adf 434C4B5F 		.ascii	"CLK_FLL_CONFIG3\000"
 4685      464C4C5F 
 4685      434F4E46 
 4685      49473300 
 4686              	.LASF68:
 4687 0aef 434C4B5F 		.ascii	"CLK_FLL_CONFIG4\000"
 4687      464C4C5F 
 4687      434F4E46 
 4687      49473400 
 4688              	.LASF60:
 4689 0aff 434C4B5F 		.ascii	"CLK_ECO_CONFIG\000"
 4689      45434F5F 
 4689      434F4E46 
 4689      494700
 4690              	.LASF57:
 4691 0b0e 434C4B5F 		.ascii	"CLK_CAL_CNT1\000"
 4691      43414C5F 
 4691      434E5431 
 4691      00
 4692              	.LASF58:
 4693 0b1b 434C4B5F 		.ascii	"CLK_CAL_CNT2\000"
 4693      43414C5F 
 4693      434E5432 
 4693      00
 4694              	.LASF181:
 4695 0b28 666C6173 		.ascii	"flashPipeRequired\000"
 4695      68506970 
 4695      65526571 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 188


 4695      75697265 
 4695      6400
 4696              	.LASF196:
 4697 0b3a 70657269 		.ascii	"periTrCmdOffset\000"
 4697      5472436D 
 4697      644F6666 
 4697      73657400 
 4698              	.LASF300:
 4699 0b4a 63795F65 		.ascii	"cy_en_clkhf_in_sources_t\000"
 4699      6E5F636C 
 4699      6B68665F 
 4699      696E5F73 
 4699      6F757263 
 4700              	.LASF235:
 4701 0b63 696E7472 		.ascii	"intrCfg\000"
 4701      43666700 
 4702              	.LASF282:
 4703 0b6b 5F426F6F 		.ascii	"_Bool\000"
 4703      6C00
 4704              	.LASF372:
 4705 0b71 706F7274 		.ascii	"port6_cfg\000"
 4705      365F6366 
 4705      6700
 4706              	.LASF312:
 4707 0b7b 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_NODIV\000"
 4707      5953434C 
 4707      4B5F434C 
 4707      4B54494D 
 4707      45525F49 
 4708              	.LASF381:
 4709 0b9b 43795F53 		.ascii	"Cy_SysPm_LdoSetVoltage\000"
 4709      7973506D 
 4709      5F4C646F 
 4709      53657456 
 4709      6F6C7461 
 4710              	.LASF28:
 4711 0bb2 4D435744 		.ascii	"MCWDT_INTR_MASK\000"
 4711      545F494E 
 4711      54525F4D 
 4711      41534B00 
 4712              	.LASF379:
 4713 0bc2 43795F53 		.ascii	"Cy_SysLib_GetResetReason\000"
 4713      79734C69 
 4713      625F4765 
 4713      74526573 
 4713      65745265 
 4714              	.LASF258:
 4715 0bdb 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_WCO\000"
 4715      5953434C 
 4715      4B5F434C 
 4715      4B504154 
 4715      485F494E 
 4716              	.LASF106:
 4717 0bf4 414C4D31 		.ascii	"ALM1_DATE\000"
 4717      5F444154 
 4717      4500
 4718              	.LASF134:
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 189


 4719 0bfe 5644445F 		.ascii	"VDD_INTR\000"
 4719      494E5452 
 4719      00
 4720              	.LASF149:
 4721 0c07 6770696F 		.ascii	"gpioBase\000"
 4721      42617365 
 4721      00
 4722              	.LASF73:
 4723 0c10 434C4B5F 		.ascii	"CLK_PLL_STATUS\000"
 4723      504C4C5F 
 4723      53544154 
 4723      555300
 4724              	.LASF265:
 4725 0c1f 63795F65 		.ascii	"cy_en_fll_pll_output_mode_t\000"
 4725      6E5F666C 
 4725      6C5F706C 
 4725      6C5F6F75 
 4725      74707574 
 4726              	.LASF114:
 4727 0c3b 5449434B 		.ascii	"TICKS\000"
 4727      5300
 4728              	.LASF271:
 4729 0c41 63795F65 		.ascii	"cy_en_fll_cco_ranges_t\000"
 4729      6E5F666C 
 4729      6C5F6363 
 4729      6F5F7261 
 4729      6E676573 
 4730              	.LASF220:
 4731 0c58 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4731      73537973 
 4731      5469636B 
 4731      43746C4F 
 4731      66667365 
 4732              	.LASF185:
 4733 0c6e 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4733      6843746C 
 4733      4D61696E 
 4733      57733046 
 4733      72657100 
 4734              	.LASF97:
 4735 0c82 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL2\000"
 4735      5452494D 
 4735      5F50494C 
 4735      4F5F4354 
 4735      4C3200
 4736              	.LASF98:
 4737 0c95 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL3\000"
 4737      5452494D 
 4737      5F50494C 
 4737      4F5F4354 
 4737      4C3300
 4738              	.LASF348:
 4739 0ca8 43795F53 		.ascii	"Cy_SysClk_ClkHfEnable\000"
 4739      7973436C 
 4739      6B5F436C 
 4739      6B486645 
 4739      6E61626C 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 190


 4740              	.LASF194:
 4741 0cbe 64775374 		.ascii	"dwStatusChIdxPos\000"
 4741      61747573 
 4741      43684964 
 4741      78506F73 
 4741      00
 4742              	.LASF380:
 4743 0ccf 43795F53 		.ascii	"Cy_SysLib_ResetBackupDomain\000"
 4743      79734C69 
 4743      625F5265 
 4743      73657442 
 4743      61636B75 
 4744              	.LASF373:
 4745 0ceb 43795F53 		.ascii	"Cy_SysClk_FllManualConfigure\000"
 4745      7973436C 
 4745      6B5F466C 
 4745      6C4D616E 
 4745      75616C43 
 4746              	.LASF388:
 4747 0d08 43795F53 		.ascii	"Cy_SystemInit\000"
 4747      79737465 
 4747      6D496E69 
 4747      7400
 4748              	.LASF266:
 4749 0d16 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE0\000"
 4749      5953434C 
 4749      4B5F464C 
 4749      4C5F4343 
 4749      4F5F5241 
 4750              	.LASF267:
 4751 0d2f 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE1\000"
 4751      5953434C 
 4751      4B5F464C 
 4751      4C5F4343 
 4751      4F5F5241 
 4752              	.LASF268:
 4753 0d48 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE2\000"
 4753      5953434C 
 4753      4B5F464C 
 4753      4C5F4343 
 4753      4F5F5241 
 4754              	.LASF269:
 4755 0d61 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE3\000"
 4755      5953434C 
 4755      4B5F464C 
 4755      4C5F4343 
 4755      4F5F5241 
 4756              	.LASF270:
 4757 0d7a 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE4\000"
 4757      5953434C 
 4757      4B5F464C 
 4757      4C5F4343 
 4757      4F5F5241 
 4758              	.LASF119:
 4759 0d93 4241434B 		.ascii	"BACKUP_V1_Type\000"
 4759      55505F56 
 4759      315F5479 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 191


 4759      706500
 4760              	.LASF144:
 4761 0da2 666C6173 		.ascii	"flashcBase\000"
 4761      68634261 
 4761      736500
 4762              	.LASF15:
 4763 0dad 63686172 		.ascii	"char\000"
 4763      00
 4764              	.LASF118:
 4765 0db2 5452494D 		.ascii	"TRIM\000"
 4765      00
 4766              	.LASF176:
 4767 0db7 75646250 		.ascii	"udbPresent\000"
 4767      72657365 
 4767      6E7400
 4768              	.LASF177:
 4769 0dc2 73797350 		.ascii	"sysPmSimoPresent\000"
 4769      6D53696D 
 4769      6F507265 
 4769      73656E74 
 4769      00
 4770              	.LASF35:
 4771 0dd3 5057525F 		.ascii	"PWR_LVD_CTL\000"
 4771      4C56445F 
 4771      43544C00 
 4772              	.LASF237:
 4773 0ddf 6366674F 		.ascii	"cfgOut\000"
 4773      757400
 4774              	.LASF275:
 4775 0de6 656E6162 		.ascii	"enableOutputDiv\000"
 4775      6C654F75 
 4775      74707574 
 4775      44697600 
 4776              	.LASF42:
 4777 0df6 5744545F 		.ascii	"WDT_CNT\000"
 4777      434E5400 
 4778              	.LASF0:
 4779 0dfe 756E7369 		.ascii	"unsigned int\000"
 4779      676E6564 
 4779      20696E74 
 4779      00
 4780              	.LASF195:
 4781 0e0b 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4781      61747573 
 4781      43684964 
 4781      784D736B 
 4781      00
 4782              	.LASF76:
 4783 0e1c 53525353 		.ascii	"SRSS_INTR_SET\000"
 4783      5F494E54 
 4783      525F5345 
 4783      5400
 4784              	.LASF16:
 4785 0e2a 75696E74 		.ascii	"uint8_t\000"
 4785      385F7400 
 4786              	.LASF51:
 4787 0e32 434C4B5F 		.ascii	"CLK_TIMER_CTL\000"
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 192


 4787      54494D45 
 4787      525F4354 
 4787      4C00
 4788              	.LASF370:
 4789 0e40 73746174 		.ascii	"status\000"
 4789      757300
 4790              	.LASF349:
 4791 0e47 43795F53 		.ascii	"Cy_SysClk_ClkHfSetDivider\000"
 4791      7973436C 
 4791      6B5F436C 
 4791      6B486653 
 4791      65744469 
 4792              	.LASF383:
 4793 0e61 47656E65 		.ascii	"Generated_Source\\PSoC6\\cyfitter_cfg.c\000"
 4793      72617465 
 4793      645F536F 
 4793      75726365 
 4793      5C50536F 
 4794              	.LASF253:
 4795 0e87 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ECO\000"
 4795      5953434C 
 4795      4B5F434C 
 4795      4B504154 
 4795      485F494E 
 4796              	.LASF200:
 4797 0ea0 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4797      44697643 
 4797      6D644469 
 4797      7653656C 
 4797      4D736B00 
 4798              	.LASF117:
 4799 0eb4 42524547 		.ascii	"BREG\000"
 4799      00
 4800              	.LASF43:
 4801 0eb9 5744545F 		.ascii	"WDT_MATCH\000"
 4801      4D415443 
 4801      4800
 4802              	.LASF206:
 4803 0ec3 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4803      44697631 
 4803      365F3543 
 4803      746C4F66 
 4803      66736574 
 4804              	.LASF21:
 4805 0ed8 4D435744 		.ascii	"MCWDT_CNTLOW\000"
 4805      545F434E 
 4805      544C4F57 
 4805      00
 4806              	.LASF224:
 4807 0ee5 63707573 		.ascii	"cpussRam0Ctl0\000"
 4807      7352616D 
 4807      3043746C 
 4807      3000
 4808              	.LASF342:
 4809 0ef3 63795F65 		.ascii	"cy_en_clkbak_in_sources_t\000"
 4809      6E5F636C 
 4809      6B62616B 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 193


 4809      5F696E5F 
 4809      736F7572 
 4810              	.LASF1:
 4811 0f0d 6C6F6E67 		.ascii	"long long int\000"
 4811      206C6F6E 
 4811      6720696E 
 4811      7400
 4812              	.LASF151:
 4813 0f1b 69706342 		.ascii	"ipcBase\000"
 4813      61736500 
 4814              	.LASF192:
 4815 0f23 64774368 		.ascii	"dwChCtlPrioPos\000"
 4815      43746C50 
 4815      72696F50 
 4815      6F7300
 4816              	.LASF152:
 4817 0f32 63727970 		.ascii	"cryptoBase\000"
 4817      746F4261 
 4817      736500
 4818              	.LASF360:
 4819 0f3d 43795F53 		.ascii	"Cy_SysClk_ClkBakSetSource\000"
 4819      7973436C 
 4819      6B5F436C 
 4819      6B42616B 
 4819      53657453 
 4820              	.LASF99:
 4821 0f57 53525353 		.ascii	"SRSS_V1_Type\000"
 4821      5F56315F 
 4821      54797065 
 4821      00
 4822              	.LASF182:
 4823 0f64 666C6173 		.ascii	"flashWriteDelay\000"
 4823      68577269 
 4823      74654465 
 4823      6C617900 
 4824              	.LASF55:
 4825 0f74 434C4B5F 		.ascii	"CLK_OUTPUT_FAST\000"
 4825      4F555450 
 4825      55545F46 
 4825      41535400 
 4826              	.LASF382:
 4827 0f84 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4827      43313120 
 4827      352E342E 
 4827      31203230 
 4827      31363036 
 4828 0fb7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4828      20726576 
 4828      6973696F 
 4828      6E203233 
 4828      37373135 
 4829 0fea 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4829      67202D66 
 4829      66756E63 
 4829      74696F6E 
 4829      2D736563 
 4830              	.LASF6:
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 194


 4831 1016 5F5F696E 		.ascii	"__int16_t\000"
 4831      7431365F 
 4831      7400
 4832              	.LASF328:
 4833 1020 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH11\000"
 4833      5953434C 
 4833      4B5F5055 
 4833      4D505F49 
 4833      4E5F434C 
 4834              	.LASF295:
 4835 103c 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH11\000"
 4835      5953434C 
 4835      4B5F434C 
 4835      4B48465F 
 4835      494E5F43 
 4836              	.LASF296:
 4837 1059 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH12\000"
 4837      5953434C 
 4837      4B5F434C 
 4837      4B48465F 
 4837      494E5F43 
 4838              	.LASF297:
 4839 1076 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH13\000"
 4839      5953434C 
 4839      4B5F434C 
 4839      4B48465F 
 4839      494E5F43 
 4840              	.LASF148:
 4841 1093 6873696F 		.ascii	"hsiomBase\000"
 4841      6D426173 
 4841      6500
 4842              	.LASF299:
 4843 109d 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH15\000"
 4843      5953434C 
 4843      4B5F434C 
 4843      4B48465F 
 4843      494E5F43 
 4844              	.LASF198:
 4845 10ba 70657269 		.ascii	"periTrGrOffset\000"
 4845      54724772 
 4845      4F666673 
 4845      657400
 4846              	.LASF164:
 4847 10c9 63707573 		.ascii	"cpussDwChNr\000"
 4847      73447743 
 4847      684E7200 
 4848              	.LASF353:
 4849 10d5 43795F53 		.ascii	"Cy_SysClk_ClkHfSetSource\000"
 4849      7973436C 
 4849      6B5F436C 
 4849      6B486653 
 4849      6574536F 
 4850              	.LASF71:
 4851 10ee 434C4B5F 		.ascii	"CLK_PLL_CONFIG\000"
 4851      504C4C5F 
 4851      434F4E46 
 4851      494700
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 195


 4852              	.LASF162:
 4853 10fd 63707573 		.ascii	"cpussIpcNr\000"
 4853      73497063 
 4853      4E7200
 4854              	.LASF215:
 4855 1108 63707573 		.ascii	"cpussCm4StatusOffset\000"
 4855      73436D34 
 4855      53746174 
 4855      75734F66 
 4855      66736574 
 4856              	.LASF174:
 4857 111d 70617373 		.ascii	"passSarChannels\000"
 4857      53617243 
 4857      68616E6E 
 4857      656C7300 
 4858              	.LASF34:
 4859 112d 5057525F 		.ascii	"PWR_HIBERNATE\000"
 4859      48494245 
 4859      524E4154 
 4859      4500
 4860              	.LASF226:
 4861 113b 63707573 		.ascii	"cpussRam2Ctl0\000"
 4861      7352616D 
 4861      3243746C 
 4861      3000
 4862              	.LASF63:
 4863 1149 434C4B5F 		.ascii	"CLK_PILO_CONFIG\000"
 4863      50494C4F 
 4863      5F434F4E 
 4863      46494700 
 4864              	.LASF334:
 4865 1159 43595F53 		.ascii	"CY_SYSCLK_PUMP_NO_DIV\000"
 4865      5953434C 
 4865      4B5F5055 
 4865      4D505F4E 
 4865      4F5F4449 
 4866              	.LASF84:
 4867 116f 5057525F 		.ascii	"PWR_TRIM_REF_CTL\000"
 4867      5452494D 
 4867      5F524546 
 4867      5F43544C 
 4867      00
 4868              	.LASF100:
 4869 1180 5254435F 		.ascii	"RTC_RW\000"
 4869      525700
 4870              	.LASF136:
 4871 1187 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 4871      494E5452 
 4871      5F4D4153 
 4871      4B454400 
 4872              	.LASF205:
 4873 1197 70657269 		.ascii	"periDiv16CtlOffset\000"
 4873      44697631 
 4873      3643746C 
 4873      4F666673 
 4873      657400
 4874              	.LASF26:
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 196


 4875 11aa 4D435744 		.ascii	"MCWDT_INTR\000"
 4875      545F494E 
 4875      545200
 4876              	.LASF30:
 4877 11b5 4D435744 		.ascii	"MCWDT_LOCK\000"
 4877      545F4C4F 
 4877      434B00
 4878              	.LASF9:
 4879 11c0 73686F72 		.ascii	"short unsigned int\000"
 4879      7420756E 
 4879      7369676E 
 4879      65642069 
 4879      6E7400
 4880              	.LASF2:
 4881 11d3 6C6F6E67 		.ascii	"long double\000"
 4881      20646F75 
 4881      626C6500 
 4882              	.LASF18:
 4883 11df 75696E74 		.ascii	"uint16_t\000"
 4883      31365F74 
 4883      00
 4884              	.LASF147:
 4885 11e8 70726F74 		.ascii	"protBase\000"
 4885      42617365 
 4885      00
 4886              	.LASF137:
 4887 11f1 5644445F 		.ascii	"VDD_INTR_SET\000"
 4887      494E5452 
 4887      5F534554 
 4887      00
 4888              	.LASF197:
 4889 11fe 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 4889      5472436D 
 4889      64477253 
 4889      656C4D73 
 4889      6B00
 4890              	.LASF249:
 4891 1210 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 4891      5953434C 
 4891      4B5F494E 
 4891      56414C49 
 4891      445F5354 
 4892              	.LASF338:
 4893 1228 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_16\000"
 4893      5953434C 
 4893      4B5F5055 
 4893      4D505F44 
 4893      49565F31 
 4894              	.LASF171:
 4895 123e 73727373 		.ascii	"srssNumHfroot\000"
 4895      4E756D48 
 4895      66726F6F 
 4895      7400
 4896              	.LASF257:
 4897 124c 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ILO\000"
 4897      5953434C 
 4897      4B5F434C 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 197


 4897      4B504154 
 4897      485F494E 
 4898              	.LASF48:
 4899 1265 434C4B5F 		.ascii	"CLK_ROOT_SELECT\000"
 4899      524F4F54 
 4899      5F53454C 
 4899      45435400 
 4900              	.LASF159:
 4901 1275 69706356 		.ascii	"ipcVersion\000"
 4901      65727369 
 4901      6F6E00
 4902              	.LASF155:
 4903 1280 64775665 		.ascii	"dwVersion\000"
 4903      7273696F 
 4903      6E00
 4904              	.LASF187:
 4905 128a 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 4905      6843746C 
 4905      4D61696E 
 4905      57733246 
 4905      72657100 
 4906              	.LASF14:
 4907 129e 73697A65 		.ascii	"sizetype\000"
 4907      74797065 
 4907      00
 4908              	.LASF247:
 4909 12a7 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 4909      5953434C 
 4909      4B5F4241 
 4909      445F5041 
 4909      52414D00 
 4910              	.LASF222:
 4911 12bb 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 4911      73436D34 
 4911      4E6D6943 
 4911      746C4F66 
 4911      66736574 
 4912              	.LASF376:
 4913 12d0 43795F53 		.ascii	"Cy_SysTick_SetClockSource\000"
 4913      79735469 
 4913      636B5F53 
 4913      6574436C 
 4913      6F636B53 
 4914              	.LASF204:
 4915 12ea 70657269 		.ascii	"periDiv8CtlOffset\000"
 4915      44697638 
 4915      43746C4F 
 4915      66667365 
 4915      7400
 4916              	.LASF40:
 4917 12fc 52455345 		.ascii	"RESERVED2\000"
 4917      52564544 
 4917      3200
 4918              	.LASF44:
 4919 1306 52455345 		.ascii	"RESERVED3\000"
 4919      52564544 
 4919      3300
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 198


 4920              	.LASF49:
 4921 1310 52455345 		.ascii	"RESERVED4\000"
 4921      52564544 
 4921      3400
 4922              	.LASF52:
 4923 131a 52455345 		.ascii	"RESERVED5\000"
 4923      52564544 
 4923      3500
 4924              	.LASF59:
 4925 1324 52455345 		.ascii	"RESERVED6\000"
 4925      52564544 
 4925      3600
 4926              	.LASF62:
 4927 132e 52455345 		.ascii	"RESERVED7\000"
 4927      52564544 
 4927      3700
 4928              	.LASF64:
 4929 1338 52455345 		.ascii	"RESERVED8\000"
 4929      52564544 
 4929      3800
 4930              	.LASF70:
 4931 1342 52455345 		.ascii	"RESERVED9\000"
 4931      52564544 
 4931      3900
 4932              	.LASF351:
 4933 134c 64697669 		.ascii	"divider\000"
 4933      64657200 
 4934              	.LASF47:
 4935 1354 434C4B5F 		.ascii	"CLK_PATH_SELECT\000"
 4935      50415448 
 4935      5F53454C 
 4935      45435400 
 4936              	.LASF239:
 4937 1364 73656C30 		.ascii	"sel0Active\000"
 4937      41637469 
 4937      766500
 4938              	.LASF153:
 4939 136f 63707573 		.ascii	"cpussVersion\000"
 4939      73566572 
 4939      73696F6E 
 4939      00
 4940              	.LASF212:
 4941 137c 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 4941      50727443 
 4941      66675369 
 4941      6F4F6666 
 4941      73657400 
 4942              	.LASF157:
 4943 1390 6770696F 		.ascii	"gpioVersion\000"
 4943      56657273 
 4943      696F6E00 
 4944              	.LASF96:
 4945 139c 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL\000"
 4945      5452494D 
 4945      5F50494C 
 4945      4F5F4354 
 4945      4C00
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 199


 4946              	.LASF78:
 4947 13ae 53525353 		.ascii	"SRSS_INTR_MASKED\000"
 4947      5F494E54 
 4947      525F4D41 
 4947      534B4544 
 4947      00
 4948              	.LASF36:
 4949 13bf 5057525F 		.ascii	"PWR_BUCK_CTL\000"
 4949      4255434B 
 4949      5F43544C 
 4949      00
 4950              	.LASF156:
 4951 13cc 666C6173 		.ascii	"flashcVersion\000"
 4951      68635665 
 4951      7273696F 
 4951      6E00
 4952              	.LASF178:
 4953 13da 70726F74 		.ascii	"protBusMasterMask\000"
 4953      4275734D 
 4953      61737465 
 4953      724D6173 
 4953      6B00
 4954              	.LASF361:
 4955 13ec 43795F53 		.ascii	"Cy_SysClk_IloEnable\000"
 4955      7973436C 
 4955      6B5F496C 
 4955      6F456E61 
 4955      626C6500 
 4956              	.LASF128:
 4957 1400 4750494F 		.ascii	"GPIO_PRT_V1_Type\000"
 4957      5F505254 
 4957      5F56315F 
 4957      54797065 
 4957      00
 4958              	.LASF341:
 4959 1411 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_CLKLF\000"
 4959      5953434C 
 4959      4B5F4241 
 4959      4B5F494E 
 4959      5F434C4B 
 4960              	.LASF251:
 4961 1428 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_IMO\000"
 4961      5953434C 
 4961      4B5F434C 
 4961      4B504154 
 4961      485F494E 
 4962              	.LASF45:
 4963 1441 4D435744 		.ascii	"MCWDT_STRUCT\000"
 4963      545F5354 
 4963      52554354 
 4963      00
 4964              	.LASF230:
 4965 144e 63686172 		.ascii	"char_t\000"
 4965      5F7400
 4966              	.LASF116:
 4967 1455 52455345 		.ascii	"RESET\000"
 4967      5400
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 200


 4968              	.LASF274:
 4969 145b 63636F52 		.ascii	"ccoRange\000"
 4969      616E6765 
 4969      00
 4970              	.LASF86:
 4971 1464 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL\000"
 4971      5452494D 
 4971      5F43434F 
 4971      5F43544C 
 4971      00
 4972              	.LASF301:
 4973 1475 43595F53 		.ascii	"CY_SYSCLK_CLKHF_NO_DIVIDE\000"
 4973      5953434C 
 4973      4B5F434C 
 4973      4B48465F 
 4973      4E4F5F44 
 4974              	.LASF127:
 4975 148f 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 4975      494E5F47 
 4975      50494F35 
 4975      5600
 4976              	.LASF27:
 4977 149d 4D435744 		.ascii	"MCWDT_INTR_SET\000"
 4977      545F494E 
 4977      54525F53 
 4977      455400
 4978              	.LASF311:
 4979 14ac 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_IMO\000"
 4979      5953434C 
 4979      4B5F434C 
 4979      4B54494D 
 4979      45525F49 
 4980              	.LASF184:
 4981 14c6 666C6173 		.ascii	"flashEraseDelay\000"
 4981      68457261 
 4981      73654465 
 4981      6C617900 
 4982              	.LASF254:
 4983 14d6 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTHF\000"
 4983      5953434C 
 4983      4B5F434C 
 4983      4B504154 
 4983      485F494E 
 4984              	.LASF101:
 4985 14f1 43414C5F 		.ascii	"CAL_CTL\000"
 4985      43544C00 
 4986              	.LASF377:
 4987 14f9 43795F53 		.ascii	"Cy_SysLib_SetWaitStates\000"
 4987      79734C69 
 4987      625F5365 
 4987      74576169 
 4987      74537461 
 4988              	.LASF122:
 4989 1511 4F55545F 		.ascii	"OUT_INV\000"
 4989      494E5600 
 4990              	.LASF217:
 4991 1519 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 201


 4991      73436D34 
 4991      50777243 
 4991      746C4F66 
 4991      66736574 
 4992              	.LASF5:
 4993 152e 5F5F7569 		.ascii	"__uint8_t\000"
 4993      6E74385F 
 4993      7400
 4994              	.LASF354:
 4995 1538 736F7572 		.ascii	"source\000"
 4995      636500
 4996              	.LASF255:
 4997 153f 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSIMUX\000"
 4997      5953434C 
 4997      4B5F434C 
 4997      4B504154 
 4997      485F494E 
 4998              	.LASF208:
 4999 155b 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 4999      50727449 
 4999      6E747243 
 4999      66674F66 
 4999      66736574 
 5000              	.LASF262:
 5001 1570 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO1\000"
 5001      5953434C 
 5001      4B5F464C 
 5001      4C504C4C 
 5001      5F4F5554 
 5002              	.LASF214:
 5003 158e 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5003      73436D34 
 5003      436C6F63 
 5003      6B43746C 
 5003      4F666673 
 5004              	.LASF112:
 5005 15a5 494E5452 		.ascii	"INTR_MASKED\000"
 5005      5F4D4153 
 5005      4B454400 
 5006              	.LASF368:
 5007 15b1 43795F53 		.ascii	"Cy_SysPm_PmicDisableOutput\000"
 5007      7973506D 
 5007      5F506D69 
 5007      63446973 
 5007      61626C65 
 5008              	.LASF219:
 5009 15cc 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5009      73547269 
 5009      6D526F6D 
 5009      43746C4F 
 5009      66667365 
 5010              	.LASF283:
 5011 15e2 63795F73 		.ascii	"cy_stc_fll_manual_config_t\000"
 5011      74635F66 
 5011      6C6C5F6D 
 5011      616E7561 
 5011      6C5F636F 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 202


 5012              	.LASF263:
 5013 15fd 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_INPUT\000"
 5013      5953434C 
 5013      4B5F464C 
 5013      4C504C4C 
 5013      5F4F5554 
 5014              	.LASF165:
 5015 161b 63707573 		.ascii	"cpussFlashPaSize\000"
 5015      73466C61 
 5015      73685061 
 5015      53697A65 
 5015      00
 5016              	.LASF386:
 5017 162c 6572726F 		.ascii	"errorCode\000"
 5017      72436F64 
 5017      6500
 5018              	.LASF158:
 5019 1636 6873696F 		.ascii	"hsiomVersion\000"
 5019      6D566572 
 5019      73696F6E 
 5019      00
 5020              	.LASF81:
 5021 1643 5245535F 		.ascii	"RES_CAUSE\000"
 5021      43415553 
 5021      4500
 5022              	.LASF12:
 5023 164d 6C6F6E67 		.ascii	"long unsigned int\000"
 5023      20756E73 
 5023      69676E65 
 5023      6420696E 
 5023      7400
 5024              	.LASF352:
 5025 165f 72657456 		.ascii	"retVal\000"
 5025      616C00
 5026              	.LASF261:
 5027 1666 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO\000"
 5027      5953434C 
 5027      4B5F464C 
 5027      4C504C4C 
 5027      5F4F5554 
 5028              	.LASF223:
 5029 1683 63707573 		.ascii	"cpussRomCtl\000"
 5029      73526F6D 
 5029      43746C00 
 5030              	.LASF387:
 5031 168f 436C6F63 		.ascii	"ClockInit\000"
 5031      6B496E69 
 5031      7400
 5032              	.LASF113:
 5033 1699 4F534343 		.ascii	"OSCCNT\000"
 5033      4E5400
 5034              	.LASF310:
 5035 16a0 63795F65 		.ascii	"cy_en_clklf_in_sources_t\000"
 5035      6E5F636C 
 5035      6B6C665F 
 5035      696E5F73 
 5035      6F757263 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 203


 5036              	.LASF278:
 5037 16b9 70676169 		.ascii	"pgain\000"
 5037      6E00
 5038              	.LASF216:
 5039 16bf 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5039      73436D30 
 5039      53746174 
 5039      75734F66 
 5039      66736574 
 5040              	.LASF41:
 5041 16d4 5744545F 		.ascii	"WDT_CTL\000"
 5041      43544C00 
 5042              	.LASF4:
 5043 16dc 756E7369 		.ascii	"unsigned char\000"
 5043      676E6564 
 5043      20636861 
 5043      7200
 5044              	.LASF11:
 5045 16ea 5F5F7569 		.ascii	"__uint32_t\000"
 5045      6E743332 
 5045      5F7400
 5046              	.LASF142:
 5047 16f5 4750494F 		.ascii	"GPIO_Type\000"
 5047      5F547970 
 5047      6500
 5048              	.LASF228:
 5049 16ff 6970634C 		.ascii	"ipcLockStatusOffset\000"
 5049      6F636B53 
 5049      74617475 
 5049      734F6666 
 5049      73657400 
 5050              	.LASF308:
 5051 1713 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ALTLF\000"
 5051      5953434C 
 5051      4B5F434C 
 5051      4B4C465F 
 5051      494E5F41 
 5052              	.LASF241:
 5053 172c 63795F73 		.ascii	"cy_stc_gpio_prt_config_t\000"
 5053      74635F67 
 5053      70696F5F 
 5053      7072745F 
 5053      636F6E66 
 5054              	.LASF123:
 5055 1745 494E5452 		.ascii	"INTR_CFG\000"
 5055      5F434647 
 5055      00
 5056              	.LASF252:
 5057 174e 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_EXT\000"
 5057      5953434C 
 5057      4B5F434C 
 5057      4B504154 
 5057      485F494E 
 5058              	.LASF72:
 5059 1767 52455345 		.ascii	"RESERVED10\000"
 5059      52564544 
 5059      313000
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 204


 5060              	.LASF74:
 5061 1772 52455345 		.ascii	"RESERVED11\000"
 5061      52564544 
 5061      313100
 5062              	.LASF80:
 5063 177d 52455345 		.ascii	"RESERVED12\000"
 5063      52564544 
 5063      313200
 5064              	.LASF83:
 5065 1788 52455345 		.ascii	"RESERVED13\000"
 5065      52564544 
 5065      313300
 5066              	.LASF88:
 5067 1793 52455345 		.ascii	"RESERVED14\000"
 5067      52564544 
 5067      313400
 5068              	.LASF90:
 5069 179e 52455345 		.ascii	"RESERVED15\000"
 5069      52564544 
 5069      313500
 5070              	.LASF92:
 5071 17a9 52455345 		.ascii	"RESERVED16\000"
 5071      52564544 
 5071      313600
 5072              	.LASF327:
 5073 17b4 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH10\000"
 5073      5953434C 
 5073      4B5F5055 
 5073      4D505F49 
 5073      4E5F434C 
 5074              	.LASF190:
 5075 17d0 64774368 		.ascii	"dwChOffset\000"
 5075      4F666673 
 5075      657400
 5076              	.LASF329:
 5077 17db 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH12\000"
 5077      5953434C 
 5077      4B5F5055 
 5077      4D505F49 
 5077      4E5F434C 
 5078              	.LASF330:
 5079 17f7 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH13\000"
 5079      5953434C 
 5079      4B5F5055 
 5079      4D505F49 
 5079      4E5F434C 
 5080              	.LASF331:
 5081 1813 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH14\000"
 5081      5953434C 
 5081      4B5F5055 
 5081      4D505F49 
 5081      4E5F434C 
 5082              	.LASF332:
 5083 182f 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH15\000"
 5083      5953434C 
 5083      4B5F5055 
 5083      4D505F49 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 205


 5083      4E5F434C 
 5084              	.LASF104:
 5085 184b 5254435F 		.ascii	"RTC_DATE\000"
 5085      44415445 
 5085      00
 5086              	.LASF25:
 5087 1854 4D435744 		.ascii	"MCWDT_CTL\000"
 5087      545F4354 
 5087      4C00
 5088              	.LASF357:
 5089 185e 43795F53 		.ascii	"Cy_SysClk_ClkFastSetDivider\000"
 5089      7973436C 
 5089      6B5F436C 
 5089      6B466173 
 5089      74536574 
 5090              	.LASF358:
 5091 187a 43795F53 		.ascii	"Cy_SysClk_ClkLfSetSource\000"
 5091      7973436C 
 5091      6B5F436C 
 5091      6B4C6653 
 5091      6574536F 
 5092              	.LASF111:
 5093 1893 494E5452 		.ascii	"INTR_MASK\000"
 5093      5F4D4153 
 5093      4B00
 5094              	.LASF24:
 5095 189d 4D435744 		.ascii	"MCWDT_CONFIG\000"
 5095      545F434F 
 5095      4E464947 
 5095      00
 5096              	.LASF180:
 5097 18aa 666C6173 		.ascii	"flashRwwRequired\000"
 5097      68527777 
 5097      52657175 
 5097      69726564 
 5097      00
 5098              	.LASF94:
 5099 18bb 5057525F 		.ascii	"PWR_TRIM_PWRSYS_CTL\000"
 5099      5452494D 
 5099      5F505752 
 5099      5359535F 
 5099      43544C00 
 5100              	.LASF209:
 5101 18cf 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5101      50727443 
 5101      66674F66 
 5101      66736574 
 5101      00
 5102              	.LASF309:
 5103 18e0 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_PILO\000"
 5103      5953434C 
 5103      4B5F434C 
 5103      4B4C465F 
 5103      494E5F50 
 5104              	.LASF175:
 5105 18f8 65704D6F 		.ascii	"epMonitorNr\000"
 5105      6E69746F 
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 206


 5105      724E7200 
 5106              	.LASF186:
 5107 1904 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 5107      6843746C 
 5107      4D61696E 
 5107      57733146 
 5107      72657100 
 5108              	.LASF141:
 5109 1918 4750494F 		.ascii	"GPIO_PRT_Type\000"
 5109      5F505254 
 5109      5F547970 
 5109      6500
 5110              	.LASF135:
 5111 1926 5644445F 		.ascii	"VDD_INTR_MASK\000"
 5111      494E5452 
 5111      5F4D4153 
 5111      4B00
 5112              	.LASF3:
 5113 1934 7369676E 		.ascii	"signed char\000"
 5113      65642063 
 5113      68617200 
 5114              	.LASF87:
 5115 1940 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL2\000"
 5115      5452494D 
 5115      5F43434F 
 5115      5F43544C 
 5115      3200
 5116              	.LASF163:
 5117 1952 63707573 		.ascii	"cpussIpcIrqNr\000"
 5117      73497063 
 5117      4972714E 
 5117      7200
 5118              	.LASF193:
 5119 1960 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 5119      43746C50 
 5119      7265656D 
 5119      70746162 
 5119      6C65506F 
 5120              	.LASF229:
 5121 1976 63795F73 		.ascii	"cy_stc_device_t\000"
 5121      74635F64 
 5121      65766963 
 5121      655F7400 
 5122              	.LASF347:
 5123 1986 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_CPU\000"
 5123      59535449 
 5123      434B5F43 
 5123      4C4F434B 
 5123      5F534F55 
 5124              	.LASF346:
 5125 19a6 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_TIMER\000"
 5125      59535449 
 5125      434B5F43 
 5125      4C4F434B 
 5125      5F534F55 
 5126              	.LASF75:
 5127 19c8 53525353 		.ascii	"SRSS_INTR\000"
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 207


 5127      5F494E54 
 5127      5200
 5128              	.LASF107:
 5129 19d2 414C4D32 		.ascii	"ALM2_TIME\000"
 5129      5F54494D 
 5129      4500
 5130              	.LASF160:
 5131 19dc 70657269 		.ascii	"periVersion\000"
 5131      56657273 
 5131      696F6E00 
 5132              	.LASF233:
 5133 19e8 75696E74 		.ascii	"uint8\000"
 5133      3800
 5134              	.LASF232:
 5135 19ee 646F7562 		.ascii	"double\000"
 5135      6C6500
 5136              	.LASF150:
 5137 19f5 70617373 		.ascii	"passBase\000"
 5137      42617365 
 5137      00
 5138              	.LASF46:
 5139 19fe 434C4B5F 		.ascii	"CLK_DSI_SELECT\000"
 5139      4453495F 
 5139      53454C45 
 5139      435400
 5140              	.LASF244:
 5141 1a0d 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_0_9V\000"
 5141      5953504D 
 5141      5F4C444F 
 5141      5F564F4C 
 5141      54414745 
 5142              	.LASF23:
 5143 1a27 4D435744 		.ascii	"MCWDT_MATCH\000"
 5143      545F4D41 
 5143      54434800 
 5144              	.LASF169:
 5145 1a33 73727373 		.ascii	"srssNumClkpath\000"
 5145      4E756D43 
 5145      6C6B7061 
 5145      746800
 5146              	.LASF102:
 5147 1a42 53544154 		.ascii	"STATUS\000"
 5147      555300
 5148              	.LASF189:
 5149 1a49 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5149      6843746C 
 5149      4D61696E 
 5149      57733446 
 5149      72657100 
 5150              	.LASF359:
 5151 1a5d 43795F53 		.ascii	"Cy_SysClk_IloHibernateOn\000"
 5151      7973436C 
 5151      6B5F496C 
 5151      6F486962 
 5151      65726E61 
 5152              	.LASF335:
 5153 1a76 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_2\000"
ARM GAS  C:\Users\tester\AppData\Local\Temp\cc5yvKer.s 			page 208


 5153      5953434C 
 5153      4B5F5055 
 5153      4D505F44 
 5153      49565F32 
 5154              	.LASF336:
 5155 1a8b 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_4\000"
 5155      5953434C 
 5155      4B5F5055 
 5155      4D505F44 
 5155      49565F34 
 5156              	.LASF337:
 5157 1aa0 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_8\000"
 5157      5953434C 
 5157      4B5F5055 
 5157      4D505F44 
 5157      49565F38 
 5158              	.LASF325:
 5159 1ab5 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH8\000"
 5159      5953434C 
 5159      4B5F5055 
 5159      4D505F49 
 5159      4E5F434C 
 5160              	.LASF234:
 5161 1ad0 696E7472 		.ascii	"intrMask\000"
 5161      4D61736B 
 5161      00
 5162              	.LASF108:
 5163 1ad9 414C4D32 		.ascii	"ALM2_DATE\000"
 5163      5F444154 
 5163      4500
 5164              	.LASF306:
 5165 1ae3 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ILO\000"
 5165      5953434C 
 5165      4B5F434C 
 5165      4B4C465F 
 5165      494E5F49 
 5166              	.LASF259:
 5167 1afa 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTLF\000"
 5167      5953434C 
 5167      4B5F434C 
 5167      4B504154 
 5167      485F494E 
 5168              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
